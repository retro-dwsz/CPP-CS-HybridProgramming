; ModuleID = 'Hello.cpp'
source_filename = "Hello.cpp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-w64-windows-gnu"

%"class.std::__1::locale::id" = type { %"struct.std::__1::once_flag", i32 }
%"struct.std::__1::once_flag" = type { i32 }
%"struct.fmt::v11::detail::singleton" = type { i8, i8 }
%"class.fmt::v11::detail::uint128_fallback" = type { i64, i64 }
%"struct.fmt::v11::detail::format_arg_store.81" = type { [1 x %"class.fmt::v11::detail::value"] }
%"class.fmt::v11::detail::value" = type { %union.anon }
%union.anon = type { i128 }
%"class.fmt::v11::basic_string_view" = type { ptr, i64 }
%"class.fmt::v11::basic_format_args" = type { i64, %union.anon.4 }
%union.anon.4 = type { ptr }
%"struct.fmt::v11::detail::format_arg_store" = type { [1 x %"class.fmt::v11::detail::value"] }
%"struct.fmt::v11::detail::format_arg_store.82" = type { [1 x %"class.fmt::v11::detail::value"] }
%"struct.fmt::v11::detail::format_arg_store.83" = type { [2 x %"class.fmt::v11::detail::value"] }
%"class.fmt::v11::basic_format_arg" = type <{ %"class.fmt::v11::detail::value", i32, [12 x i8] }>
%"struct.fmt::v11::detail::default_arg_formatter" = type { %"class.fmt::v11::basic_appender" }
%"class.fmt::v11::basic_appender" = type { ptr }
%"struct.fmt::v11::detail::format_handler" = type { %"class.fmt::v11::parse_context", %"class.fmt::v11::context" }
%"class.fmt::v11::parse_context" = type <{ %"class.fmt::v11::basic_string_view", i32, [4 x i8] }>
%"class.fmt::v11::context" = type { %"class.fmt::v11::basic_appender", %"class.fmt::v11::basic_format_args", %"class.fmt::v11::detail::locale_ref" }
%"class.fmt::v11::detail::locale_ref" = type { ptr }
%"class.fmt::v11::basic_memory_buffer" = type <{ %"class.fmt::v11::detail::buffer", [500 x i8], [4 x i8] }>
%"class.fmt::v11::detail::buffer" = type { ptr, i64, i64, ptr }
%"struct.fmt::v11::fstring" = type { %"class.fmt::v11::basic_string_view" }
%"class.fmt::v11::detail::utf8_to_utf16" = type { %"class.fmt::v11::basic_memory_buffer.73" }
%"class.fmt::v11::basic_memory_buffer.73" = type <{ %"class.fmt::v11::detail::buffer.74", [500 x i16], [8 x i8] }>
%"class.fmt::v11::detail::buffer.74" = type { ptr, i64, i64, ptr }
%"class.std::__1::system_error" = type { %"class.std::runtime_error", %"class.std::__1::error_code" }
%"class.std::runtime_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { ptr }
%"class.std::__1::__libcpp_refstring" = type { ptr }
%"class.std::__1::error_code" = type { i32, ptr }
%class.anon.56 = type <{ i64, i32, [4 x i8] }>
%"struct.fmt::v11::format_specs" = type { %"class.fmt::v11::basic_specs", i32, i32 }
%"class.fmt::v11::basic_specs" = type { i32, [4 x i8] }
%class.anon.29 = type { %"class.fmt::v11::basic_string_view" }
%"class.fmt::v11::loc_value" = type { %"class.fmt::v11::basic_format_arg" }
%"class.std::__1::locale" = type { ptr }
%"class.fmt::v11::format_facet" = type { %"class.std::__1::locale::facet.base", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::locale::facet.base" = type { %"class.std::__1::__shared_count.base" }
%"class.std::__1::__shared_count.base" = type <{ ptr, i32 }>
%"class.std::__1::basic_string" = type { %"union.std::__1::basic_string<char>::__rep" }
%"union.std::__1::basic_string<char>::__rep" = type { %"struct.std::__1::basic_string<char>::__long" }
%"struct.std::__1::basic_string<char>::__long" = type { %struct.anon.5, i64, ptr }
%struct.anon.5 = type { i64 }
%"struct.fmt::v11::detail::loc_writer" = type { %"class.fmt::v11::basic_appender", ptr, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.fmt::v11::detail::digit_grouping" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.anon.12 = type { i8, i8 }
%class.anon = type { ptr, ptr, ptr }
%"struct.fmt::v11::detail::find_escape_result" = type { ptr, ptr, i32 }
%"class.fmt::v11::basic_memory_buffer.13" = type <{ %"class.fmt::v11::detail::buffer.14", [500 x i32], [8 x i8] }>
%"class.fmt::v11::detail::buffer.14" = type { ptr, i64, i64, ptr }
%class.anon.21 = type { ptr, ptr, ptr }
%class.anon.28 = type { i32, i32, ptr, ptr }
%class.anon.30 = type { i32, ptr }
%"struct.fmt::v11::detail::dragonbox::decimal_fp" = type { i32, i32 }
%class.anon.33 = type { i32, i32, i32, i8, i32, i8, i8, i32 }
%class.anon.34 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.35 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.36 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%"struct.fmt::v11::detail::thousands_sep_result" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.fmt::v11::detail::dragonbox::decimal_fp.37" = type { i64, i32 }
%class.anon.39 = type <{ i32, [4 x i8], i64, i32, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.anon.41 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.42 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.43 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.45 = type { %"class.fmt::v11::basic_string_view" }
%"struct.fmt::v11::detail::big_decimal_fp" = type { ptr, i32, i32 }
%"struct.fmt::v11::detail::basic_fp" = type <{ i128, i32, [12 x i8] }>
%"class.fmt::v11::detail::bigint" = type { %"class.fmt::v11::basic_memory_buffer.46", i32, [4 x i8] }
%"class.fmt::v11::basic_memory_buffer.46" = type <{ %"class.fmt::v11::detail::buffer.47", [32 x i32], [8 x i8] }>
%"class.fmt::v11::detail::buffer.47" = type { ptr, i64, i64, ptr }
%class.anon.51 = type <{ i32, [4 x i8], ptr, i32, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.anon.53 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.54 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%class.anon.55 = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.id_adapter = type <{ ptr, i32, [4 x i8] }>
%"struct.fmt::v11::detail::named_arg_info" = type { ptr, i32 }
%"struct.fmt::v11::detail::dynamic_format_specs" = type { %"struct.fmt::v11::format_specs", %"union.fmt::v11::detail::arg_ref", %"union.fmt::v11::detail::arg_ref" }
%"union.fmt::v11::detail::arg_ref" = type { %"class.fmt::v11::basic_string_view" }
%"struct.fmt::v11::detail::arg_formatter" = type { %"class.fmt::v11::basic_appender", ptr, %"class.fmt::v11::detail::locale_ref" }
%"struct.fmt::v11::detail::parse_dynamic_spec_result" = type { ptr, i32 }
%"struct.fmt::v11::detail::write_int_arg.20" = type { i128, i32 }
%"struct.fmt::v11::detail::write_int_arg.19" = type { i64, i32 }
%"struct.fmt::v11::detail::dynamic_spec_handler" = type { ptr, ptr, ptr }
%"struct.fmt::v11::detail::dynamic_spec_getter" = type { i8 }
%class.anon.60 = type { i32, i32, ptr, ptr }
%class.anon.61 = type { i32, i32, ptr, ptr }
%class.anon.72 = type { %struct.count_code_points }
%struct.count_code_points = type { ptr }
%class.anon.69 = type { %class.anon.68 }
%class.anon.68 = type { ptr, ptr, ptr }
%"class.fmt::v11::detail::counting_buffer" = type { %"class.fmt::v11::detail::buffer", [256 x i8], i64 }
%class.anon.67 = type { i8, %"class.fmt::v11::basic_string_view", ptr, i64 }
%class.anon.78 = type { %class.anon.77 }
%class.anon.77 = type { ptr }

$_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE = comdat any

$_ZN3fmt3v116detail5printEP6_iobufNS0_17basic_string_viewIcEE = comdat any

$_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy = comdat any

$_ZN3fmt3v116detail11assert_failEPKciS3_ = comdat any

$_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail21default_arg_formatterIcEEEEDTclfp_Li0EEEOT_ = comdat any

$_ZN3fmt3v116detail19parse_format_stringIcNS1_14format_handlerIcEEEEvNS0_17basic_string_viewIT_EEOT0_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEiTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_ = comdat any

$_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i = comdat any

$_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEjTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEExTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_ = comdat any

$_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEyTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEnTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_ = comdat any

$_ZN3fmt3v116detail14format_decimalIcoNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEoTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_ = comdat any

$_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE = comdat any

$_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v1112format_facetINSt3__16localeEEC2ERS3_ = comdat any

$_ZN3fmt3v1112format_facetINSt3__16localeEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN3fmt3v1112format_facetINSt3__16localeEED0Ev = comdat any

$_ZNK3fmt3v1112format_facetINSt3__16localeEE6do_putENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsE = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB8ne200100Ev = comdat any

$_ZNSt3__120__throw_length_errorB8ne200100EPKc = comdat any

$_ZNSt12length_errorC2B8ne200100EPKc = comdat any

$_ZN3fmt3v119loc_value5visitINS0_6detail10loc_writerIcEEEEDTclfp_Li0EEEOT_ = comdat any

$_ZN3fmt3v116detail10loc_writerIcED2Ev = comdat any

$_ZN3fmt3v116detail10loc_writerIcEclIiTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_ = comdat any

$_ZN3fmt3v116detail10loc_writerIcEclIjTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_ = comdat any

$_ZN3fmt3v116detail10loc_writerIcEclIxTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_ = comdat any

$_ZN3fmt3v116detail10loc_writerIcEclIyTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_ = comdat any

$_ZN3fmt3v116detail10loc_writerIcEclInTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_ = comdat any

$_ZN3fmt3v116detail10loc_writerIcEclIoTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_ = comdat any

$_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE = comdat any

$_ZN3fmt3v116detail14digit_groupingIcED2Ev = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEEZNS1_9write_intIS5_ycEET_S7_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS5_E_EESD_SD_SB_yyOT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_ = comdat any

$_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE = comdat any

$_ZN3fmt3v116detail18write_escaped_charIcNS0_14basic_appenderIcEEEET0_S5_T_ = comdat any

$_ZN3fmt3v116detail16write_escaped_cpINS0_14basic_appenderIcEEcEET_S5_RKNS1_18find_escape_resultIT0_EE = comdat any

$_ZN3fmt3v116detail12is_printableEj = comdat any

$_ZN3fmt3v116detail15write_codepointILy2EcNS0_14basic_appenderIcEEEET1_S5_cj = comdat any

$_ZN3fmt3v116detail15write_codepointILy4EcNS0_14basic_appenderIcEEEET1_S5_cj = comdat any

$_ZN3fmt3v116detail15write_codepointILy8EcNS0_14basic_appenderIcEEEET1_S5_cj = comdat any

$_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE = comdat any

$_ZN3fmt3v1119basic_memory_bufferIiLy500ENS0_6detail9allocatorIiEEE4growERNS2_6bufferIiEEy = comdat any

$_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEocEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEEZNS1_9write_intIS5_ocEET_S7_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS5_E_EESD_SD_SB_yyOT2_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy = comdat any

$_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_jEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_ = comdat any

$_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_1ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEfTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_ = comdat any

$_ZN3fmt3v116detail9dragonbox10to_decimalIfEENS2_10decimal_fpIT_EES5_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_ = comdat any

$_ZN3fmt3v116detail9dragonbox21shorter_interval_caseIfEENS2_10decimal_fpIT_EEi = comdat any

$_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESD_SD_SI_yyOT2_ = comdat any

$_ZN3fmt3v116detail14write_exponentIcNS0_14basic_appenderIcEEEET0_iS5_ = comdat any

$_ZN3fmt3v116detail17write_significandIcjTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_ = comdat any

$_ZN3fmt3v116detail18thousands_sep_implIcEENS1_20thousands_sep_resultIT_EENS1_10locale_refE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESD_SD_SI_yyOT2_ = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_ = comdat any

$_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEjNS1_14digit_groupingIcEEEET0_S7_T1_iiRKT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESD_SD_SI_yyOT2_ = comdat any

$_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcjNS1_14digit_groupingIcEEEET_S7_T1_iiT0_RKT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESD_SD_SI_yyOT2_ = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_ = comdat any

$_ZN3fmt3v116detail9dragonbox10to_decimalIdEENS2_10decimal_fpIT_EES5_ = comdat any

$_ZN3fmt3v116detail9dragonbox21shorter_interval_caseIdEENS2_10decimal_fpIT_EEi = comdat any

$_ZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEi = comdat any

$_ZN3fmt3v116detail9dragonbox21remove_trailing_zerosERy = comdat any

$_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESD_SD_SI_yyOT2_ = comdat any

$_ZN3fmt3v116detail17write_significandIcyTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESD_SD_SI_yyOT2_ = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_ = comdat any

$_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEyNS1_14digit_groupingIcEEEET0_S7_T1_iiRKT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESD_SD_SI_yyOT2_ = comdat any

$_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcyNS1_14digit_groupingIcEEEET_S7_T1_iiT0_RKT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESD_SD_SI_yyOT2_ = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_ = comdat any

$_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEeEET0_S5_T1_NS0_12format_specsENS1_10locale_refE = comdat any

$_ZN3fmt3v116detail15format_hexfloatIeTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE = comdat any

$_ZN3fmt3v1112report_errorEPKc = comdat any

$_ZN3fmt3v116detail12format_floatIeEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_2ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_ = comdat any

$_ZN3fmt3v1112format_errorCI2St13runtime_errorEPKc = comdat any

$_ZN3fmt3v1112format_errorD0Ev = comdat any

$_ZN3fmt3v116detail13format_dragonENS1_8basic_fpIoEEjiRNS1_6bufferIcEERi = comdat any

$_ZN3fmt3v116detail6bigint12assign_pow10Ei = comdat any

$_ZN3fmt3v116detail6bigint13divmod_assignERKS2_ = comdat any

$_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy = comdat any

$_ZN3fmt3v116detail6bigint6squareEv = comdat any

$_ZN3fmt3v116detail6bigint16subtract_alignedERKS2_ = comdat any

$_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESB_SB_SG_yyOT2_ = comdat any

$_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESB_SB_SG_yyOT2_ = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_ = comdat any

$_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEPKcNS1_14digit_groupingIcEEEET0_S9_T1_iiRKT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESB_SB_SG_yyOT2_ = comdat any

$_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcPKcNS1_14digit_groupingIcEEEET_S9_T1_iiT0_RKT2_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESB_SB_SG_yyOT2_ = comdat any

$_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_ = comdat any

$_ZZN3fmt3v116detail9write_ptrIcNS0_14basic_appenderIcEEyEET0_S5_T1_PKNS0_12format_specsEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_ptrIcS5_yEET0_S7_T1_PKNS0_12format_specsEEUlS5_E_EES8_S8_RSA_yyOT2_ = comdat any

$_ZN3fmt3v116detail23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S8_S8_OT0_ = comdat any

$_ZN3fmt3v116detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S9_S9_OT0_E10id_adapterEES9_S9_S9_SB_ = comdat any

$_ZN3fmt3v116detail14format_handlerIcE15on_format_specsEiPKcS5_ = comdat any

$_ZN3fmt3v116detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_13parse_contextIS3_EENS1_4typeE = comdat any

$_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail13arg_formatterIcEEEEDTclfp_Li0EEEOT_ = comdat any

$_ZN3fmt3v116detail18parse_dynamic_specIcEENS1_25parse_dynamic_spec_resultIT_EEPKS4_S7_RiRNS1_7arg_refIS4_EERNS0_13parse_contextIS4_EE = comdat any

$_ZN3fmt3v116detail12parse_arg_idIcNS1_20dynamic_spec_handlerIcEEEEPKT_S7_S7_OT0_ = comdat any

$_ZN3fmt3v116detail16get_dynamic_specINS0_7contextEEEiNS0_11arg_id_kindERKNS1_7arg_refINT_9char_typeEEERS6_ = comdat any

$_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail19dynamic_spec_getterEEEDTclfp_Li0EEEOT_ = comdat any

$_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_yEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_ = comdat any

$_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_oEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_ = comdat any

$_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_ = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_T_RKNS0_12format_specsENS1_10locale_refE = comdat any

$_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEfEET0_S5_T1_NS0_12format_specsENS1_10locale_refE = comdat any

$_ZN3fmt3v116detail15format_hexfloatIdTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE = comdat any

$_ZN3fmt3v116detail12format_floatIdEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE = comdat any

$_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEdEET0_S5_T1_NS0_12format_specsENS1_10locale_refE = comdat any

$_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsE = comdat any

$_ZN3fmt3v116detail20write_escaped_stringIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EE = comdat any

$_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEEZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsEEUlS5_E_EET1_SF_SD_yyOT2_ = comdat any

$_ZZN3fmt3v116detail18for_each_codepointIZNS1_16code_point_indexENS0_17basic_string_viewIcEEyEUljS4_E_EEvS4_T_ENKUlPKcS8_E_clES8_S8_ = comdat any

$_ZN3fmt3v116detail15counting_bufferIcE4growERNS1_6bufferIcEEy = comdat any

$_ZZN3fmt3v116detail18for_each_codepointIZNS1_13compute_widthENS0_17basic_string_viewIcEEE17count_code_pointsEEvS4_T_ENKUlPKcS8_E_clES8_S8_ = comdat any

$_ZN3fmt3v116detail13utf8_to_utf16C2ENS0_17basic_string_viewIcEE = comdat any

$_ZN3fmt3v1119basic_memory_bufferIwLy500ENS0_6detail9allocatorIwEEE4growERNS2_6bufferIwEEy = comdat any

$_ZZN3fmt3v116detail18for_each_codepointIZNS1_13utf8_to_utf16C1ENS0_17basic_string_viewIcEEEUljS5_E_EEvS5_T_ENKUlPKcS9_E_clES9_S9_ = comdat any

$_ZZN3fmt3v116detail13utf8_to_utf16C1ENS0_17basic_string_viewIcEEENKUljS4_E_clEjS4_ = comdat any

$_ZN3fmt3v1112system_errorIJEEENSt3__112system_errorEiNS0_7fstringIJDpT_EE1tEDpOS5_ = comdat any

$_ZN3fmt3v117vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE = comdat any

$_ZTISt9bad_alloc = comdat any

$_ZTSSt9bad_alloc = comdat any

$_ZTISt9exception = comdat any

$_ZTSSt9exception = comdat any

$_ZZN3fmt3v116detail15do_count_digitsEjE5table = comdat any

$_ZZN3fmt3v116detail7digits2EyE4data = comdat any

$_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10 = comdat any

$_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10 = comdat any

$_ZN3fmt3v1112format_facetINSt3__16localeEE2idE = comdat any

$_ZTVN3fmt3v1112format_facetINSt3__16localeEEE = comdat any

$_ZTIN3fmt3v1112format_facetINSt3__16localeEEE = comdat any

$_ZTSN3fmt3v1112format_facetINSt3__16localeEEE = comdat any

$_ZTINSt3__16locale5facetE = comdat any

$_ZTSNSt3__16locale5facetE = comdat any

$_ZTINSt3__114__shared_countE = comdat any

$_ZTSNSt3__114__shared_countE = comdat any

$_ZTISt12length_error = comdat any

$_ZTSSt12length_error = comdat any

$_ZTISt11logic_error = comdat any

$_ZTSSt11logic_error = comdat any

$_ZZN3fmt3v116detail12is_printableEjE11singletons0 = comdat any

$_ZZN3fmt3v116detail12is_printableEjE17singletons0_lower = comdat any

$_ZZN3fmt3v116detail12is_printableEjE11singletons1 = comdat any

$_ZZN3fmt3v116detail12is_printableEjE17singletons1_lower = comdat any

$_ZZN3fmt3v116detail12is_printableEjE7normal0 = comdat any

$_ZZN3fmt3v116detail12is_printableEjE7normal1 = comdat any

$_ZZN3fmt3v116detail9dragonbox14cache_accessorIfE16get_cached_powerEiE18pow10_significands = comdat any

$_ZZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEiE18pow10_significands = comdat any

$_ZZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEiE14powers_of_5_64 = comdat any

$_ZTIN3fmt3v1112format_errorE = comdat any

$_ZTSN3fmt3v1112format_errorE = comdat any

$_ZTISt13runtime_error = comdat any

$_ZTSSt13runtime_error = comdat any

$_ZTVN3fmt3v1112format_errorE = comdat any

$_ZTINSt3__112system_errorE = comdat any

$_ZTSNSt3__112system_errorE = comdat any

@.str = private unnamed_addr constant [12 x i8] c"Hello, fmt!\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"{:-^80}\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"[Border!]\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Deg = {}\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"Rad = {}\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"~! x = {}{}\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"~! cos(x) = {}\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"~! 1-cos(x) = {}\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"~! Hav(x) = {}\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"input x = {} {}\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"Hello from haversine in C++! Calling in C#\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"RAD\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"\C2\B0\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"D:/Code/_CLIB/fmt/fmt/include/fmt/format.h\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTISt9bad_alloc = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSSt9bad_alloc, ptr @_ZTISt9exception }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global [0 x ptr]
@_ZTSSt9bad_alloc = linkonce_odr dso_local constant [13 x i8] c"St9bad_alloc\00", comdat, align 1
@_ZTISt9exception = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSSt9exception }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global [0 x ptr]
@_ZTSSt9exception = linkonce_odr dso_local constant [13 x i8] c"St9exception\00", comdat, align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"%s:%d: assertion failed: %s\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"{}\00", align 1
@_ZZN3fmt3v116detail15do_count_digitsEjE5table = linkonce_odr dso_local local_unnamed_addr constant [32 x i64] [i64 4294967296, i64 4294967296, i64 4294967296, i64 8589934582, i64 8589934582, i64 8589934582, i64 12884901788, i64 12884901788, i64 12884901788, i64 17179868184, i64 17179868184, i64 17179868184, i64 21474826480, i64 21474826480, i64 21474826480, i64 25769703776, i64 25769703776, i64 25769703776, i64 30063771072, i64 30063771072, i64 30063771072, i64 34349738368, i64 34349738368, i64 34349738368, i64 38554705664, i64 38554705664, i64 38554705664, i64 41949672960, i64 41949672960, i64 41949672960, i64 41949672960, i64 41949672960], comdat, align 16
@.str.17 = private unnamed_addr constant [20 x i8] c"invalid digit count\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"D:/Code/_CLIB/fmt/fmt/include/fmt/base.h\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"negative value\00", align 1
@_ZZN3fmt3v116detail7digits2EyE4data = linkonce_odr dso_local local_unnamed_addr constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", comdat, align 2
@_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10 = linkonce_odr dso_local local_unnamed_addr constant [64 x i8] c"\01\01\01\02\02\02\03\03\03\04\04\04\04\05\05\05\06\06\06\07\07\07\07\08\08\08\09\09\09\0A\0A\0A\0A\0B\0B\0B\0C\0C\0C\0D\0D\0D\0D\0E\0E\0E\0F\0F\0F\10\10\10\10\11\11\11\12\12\12\13\13\13\13\14", comdat, align 16
@_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10 = linkonce_odr dso_local local_unnamed_addr constant [21 x i64] [i64 0, i64 0, i64 10, i64 100, i64 1000, i64 10000, i64 100000, i64 1000000, i64 10000000, i64 100000000, i64 1000000000, i64 10000000000, i64 100000000000, i64 1000000000000, i64 10000000000000, i64 100000000000000, i64 1000000000000000, i64 10000000000000000, i64 100000000000000000, i64 1000000000000000000, i64 -8446744073709551616], comdat, align 16
@.str.20 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZN3fmt3v1112format_facetINSt3__16localeEE2idE = linkonce_odr dso_local global %"class.std::__1::locale::id" zeroinitializer, comdat, align 4
@_ZTVN3fmt3v1112format_facetINSt3__16localeEEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN3fmt3v1112format_facetINSt3__16localeEEE, ptr @_ZN3fmt3v1112format_facetINSt3__16localeEED2Ev, ptr @_ZN3fmt3v1112format_facetINSt3__16localeEED0Ev, ptr @_ZNSt3__16locale5facet16__on_zero_sharedEv, ptr @_ZNK3fmt3v1112format_facetINSt3__16localeEE6do_putENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsE] }, comdat, align 8
@_ZTIN3fmt3v1112format_facetINSt3__16localeEEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN3fmt3v1112format_facetINSt3__16localeEEE, ptr @_ZTINSt3__16locale5facetE }, comdat, align 8
@_ZTSN3fmt3v1112format_facetINSt3__16localeEEE = linkonce_odr dso_local constant [42 x i8] c"N3fmt3v1112format_facetINSt3__16localeEEE\00", comdat, align 1
@_ZTINSt3__16locale5facetE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSNSt3__16locale5facetE, ptr @_ZTINSt3__114__shared_countE }, comdat, align 8
@_ZTSNSt3__16locale5facetE = linkonce_odr dso_local constant [22 x i8] c"NSt3__16locale5facetE\00", comdat, align 1
@_ZTINSt3__114__shared_countE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSNSt3__114__shared_countE }, comdat, align 8
@_ZTSNSt3__114__shared_countE = linkonce_odr dso_local constant [25 x i8] c"NSt3__114__shared_countE\00", comdat, align 1
@_ZNSt3__18numpunctIcE2idE = external global %"class.std::__1::locale::id", align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"basic_string\00", align 1
@_ZTISt12length_error = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSSt12length_error, ptr @_ZTISt11logic_error }, comdat, align 8
@_ZTSSt12length_error = linkonce_odr dso_local constant [17 x i8] c"St12length_error\00", comdat, align 1
@_ZTISt11logic_error = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSSt11logic_error, ptr @_ZTISt9exception }, comdat, align 8
@_ZTSSt11logic_error = linkonce_odr dso_local constant [16 x i8] c"St11logic_error\00", comdat, align 1
@_ZTVSt12length_error = external unnamed_addr constant { [5 x ptr] }, align 8
@.str.23 = private unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"\1F\1F\00\01\00", align 1
@_ZZN3fmt3v116detail12is_printableEjE11singletons0 = linkonce_odr dso_local local_unnamed_addr constant [41 x %"struct.fmt::v11::detail::singleton"] [%"struct.fmt::v11::detail::singleton" { i8 0, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 3, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 5, i8 6 }, %"struct.fmt::v11::detail::singleton" { i8 6, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 7, i8 6 }, %"struct.fmt::v11::detail::singleton" { i8 8, i8 8 }, %"struct.fmt::v11::detail::singleton" { i8 9, i8 17 }, %"struct.fmt::v11::detail::singleton" { i8 10, i8 28 }, %"struct.fmt::v11::detail::singleton" { i8 11, i8 25 }, %"struct.fmt::v11::detail::singleton" { i8 12, i8 20 }, %"struct.fmt::v11::detail::singleton" { i8 13, i8 16 }, %"struct.fmt::v11::detail::singleton" { i8 14, i8 13 }, %"struct.fmt::v11::detail::singleton" { i8 15, i8 4 }, %"struct.fmt::v11::detail::singleton" { i8 16, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 18, i8 18 }, %"struct.fmt::v11::detail::singleton" { i8 19, i8 9 }, %"struct.fmt::v11::detail::singleton" { i8 22, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 23, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 24, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 25, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 26, i8 7 }, %"struct.fmt::v11::detail::singleton" { i8 28, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 29, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 31, i8 22 }, %"struct.fmt::v11::detail::singleton" { i8 32, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 43, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 44, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 45, i8 11 }, %"struct.fmt::v11::detail::singleton" { i8 46, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 48, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 49, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 50, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 -89, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -87, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -86, i8 4 }, %"struct.fmt::v11::detail::singleton" { i8 -85, i8 8 }, %"struct.fmt::v11::detail::singleton" { i8 -6, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -5, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 -3, i8 4 }, %"struct.fmt::v11::detail::singleton" { i8 -2, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 -1, i8 9 }], comdat, align 16
@_ZZN3fmt3v116detail12is_printableEjE17singletons0_lower = linkonce_odr dso_local local_unnamed_addr constant [290 x i8] c"\ADxy\8B\8D\A20WX\8B\8C\90\1C\1D\DD\0E\0FKL\FB\FC./?\\]_\B5\E2\84\8D\8E\91\92\A9\B1\BA\BB\C5\C6\C9\CA\DE\E4\E5\FF\00\04\11\12)147:;=IJ]\84\8E\92\A9\B1\B4\BA\BB\C6\CA\CE\CF\E4\E5\00\04\0D\0E\11\12)14:;EFIJ^de\84\91\9B\9D\C9\CE\CF\0D\11)EIWde\8D\91\A9\B4\BA\BB\C5\C9\DF\E4\E5\F0\0D\11EIde\80\84\B2\BC\BE\BF\D5\D7\F0\F1\83\85\8B\A4\A6\BE\BF\C5\C7\CE\CF\DA\DBH\98\BD\CD\C6\CE\CFINOWY^_\89\8E\8F\B1\B6\B7\BF\C1\C6\C7\D7\11\16\17[\\\F6\F7\FE\FF\80\0Dmq\DE\DF\0E\0F\1Fno\1C\1D_}~\AE\AF\BB\BC\FA\16\17\1E\1FFGNOXZ\\^~\7F\B5\C5\D4\D5\DC\F0\F1\F5rs\8Ftu\96/_&./\A7\AF\B7\BF\C7\CF\D7\DF\9A@\97\980\8F\1F\C0\C1\CE\FFNOZ[\07\08\0F\10'/\EE\EFno7=?BE\90\91\FE\FFSgu\C8\C9\D0\D1\D8\D9\E7\FE\FF", comdat, align 16
@_ZZN3fmt3v116detail12is_printableEjE11singletons1 = linkonce_odr dso_local local_unnamed_addr constant [38 x %"struct.fmt::v11::detail::singleton"] [%"struct.fmt::v11::detail::singleton" { i8 0, i8 6 }, %"struct.fmt::v11::detail::singleton" { i8 1, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 3, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 4, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 8, i8 8 }, %"struct.fmt::v11::detail::singleton" { i8 9, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 10, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 11, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 14, i8 4 }, %"struct.fmt::v11::detail::singleton" { i8 16, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 17, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 18, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 19, i8 17 }, %"struct.fmt::v11::detail::singleton" { i8 20, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 21, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 23, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 25, i8 13 }, %"struct.fmt::v11::detail::singleton" { i8 28, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 29, i8 8 }, %"struct.fmt::v11::detail::singleton" { i8 36, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 106, i8 3 }, %"struct.fmt::v11::detail::singleton" { i8 107, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -68, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -47, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -44, i8 12 }, %"struct.fmt::v11::detail::singleton" { i8 -43, i8 9 }, %"struct.fmt::v11::detail::singleton" { i8 -42, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -41, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -38, i8 1 }, %"struct.fmt::v11::detail::singleton" { i8 -32, i8 5 }, %"struct.fmt::v11::detail::singleton" { i8 -31, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -24, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -18, i8 32 }, %"struct.fmt::v11::detail::singleton" { i8 -16, i8 4 }, %"struct.fmt::v11::detail::singleton" { i8 -8, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -7, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -6, i8 2 }, %"struct.fmt::v11::detail::singleton" { i8 -5, i8 1 }], comdat, align 16
@_ZZN3fmt3v116detail12is_printableEjE17singletons1_lower = linkonce_odr dso_local local_unnamed_addr constant [175 x i8] c"\0C';>NO\8F\9E\9E\9F\06\07\096=>V\F3\D0\D1\04\14\1867VW\7F\AA\AE\AF\BD5\E0\12\87\89\8E\9E\04\0D\0E\11\12)14:EFIJNOde\\\B6\B7\1B\1C\07\08\0A\0B\14\1769:\A8\A9\D8\D9\097\90\91\A8\07\0A;>fi\8F\92o_\EE\EFZb\9A\9B'(U\9D\A0\A1\A3\A4\A7\A8\AD\BA\BC\C4\06\0B\0C\15\1D:?EQ\A6\A7\CC\CD\A0\07\19\1A\22%>?\C5\C6\04 #%&(38:HJLPSUVXZ\\^`cefksx}\7F\8A\A4\AA\AF\B0\C0\D0\AE\AFy\CCno\93", comdat, align 16
@_ZZN3fmt3v116detail12is_printableEjE7normal0 = linkonce_odr dso_local local_unnamed_addr constant [309 x i8] c"\00 _\22\82\DF\04\82D\08\1B\04\06\11\81\AC\0E\80\AB5(\0B\80\E0\03\19\08\01\04/\044\04\07\03\01\07\06\07\11\0AP\0F\12\07U\07\03\04\1C\0A\09\03\08\03\07\03\02\03\03\03\0C\04\05\03\0B\06\01\0E\15\05:\03\11\07\06\05\10\07W\07\02\07\15\0DP\04C\03-\03\01\04\11\06\0F\0C:\04\1D%_ m\04j%\80\C8\05\82\B0\03\1A\06\82\FD\03Y\07\15\0B\17\09\14\0C\14\0Cj\06\0A\06\1A\06Y\07+\05F\0A,\04\0C\04\01\031\0B,\04\1A\06\0B\03\80\AC\06\0A\06!?L\04-\03t\08<\03\0F\03<\078\08+\05\82\FF\11\18\08/\11-\03 \10!\0F\80\8C\04\82\97\19\0B\15\88\94\05/\05;\07\02\0E\18\09\80\B3-t\0C\80\D6\1A\0C\05\80\FF\05\80\DF\0C\EE\0D\03\84\8D\037\09\81\\\14\80\B8\08\80\CB*8\03\0A\068\08F\08\0C\06t\0B\1E\03Z\04Y\09\80\83\18\1C\0A\16\09L\04\80\8A\06\AB\A4\0C\17\041\A1\04\81\DA&\07\0C\05\05\80\A5\11\81m\10x(*\06L\04\80\8D\04\80\BE\03\1B\03\0F\0D", comdat, align 16
@_ZZN3fmt3v116detail12is_printableEjE7normal1 = linkonce_odr dso_local local_unnamed_addr constant [419 x i8] c"^\22{\05\03\04-\03f\03\01/.\80\82\1D\031\0F\1C\04$\09\1E\05+\05D\04\0E*\80\AA\06$\04$\04(\084\0B\01\80\90\817\09\16\0A\08\80\989\03c\08\090\16\05!\03\1B\05\01@8\04K\05/\04\0A\07\09\07@ '\04\0C\096\03:\05\1A\07\04\0C\07PI73\0D3\07.\08\0A\81&RN(\08*V\1C\14\17\09N\04\1E\0FC\0E\19\07\0A\06H\08'\09u\0B?A*\06;\05\0A\06Q\06\01\05\10\03\05\80\8Bb\1EH\08\0A\80\A6^\22E\0B\0A\06\0D\139\07\0A6,\04\10\80\C0<dS\0CH\09\0AFE\1BH\08S\1D9\81\07F\0A\1D\03GI7\03\0E\08\0A\069\07\0A\816\19\80\B7\01\0F2\0D\83\9Bfu\0B\80\C4\8A\BC\84/\8F\D1\82G\A1\B9\829\07*\04\02`&\0AF\0A(\05\13\82\B0[eK\049\07\11@\05\0B\02\0E\97\F8\08\84\D6*\09\A2\F7\81\1F1\03\11\04\08\81\8C\89\04k\05\0D\03\09\07\10\93`\80\F6\0As\08n\17F\80\9A\14\0CW\09\19\80\87\81G\03\85B\0F\15\85P+\80\D5-\03\1A\04\02\81p:\05\01\85\00\80\D7)L\04\0A\04\02\83\11DL=\80\C2<\06\01\04U\05\1B4\02\81\0E,\04d\0CV\0A\80\AE8\1D\0D,\04\09\07\02\0E\06\80\9A\83\D8\08\0D\03\0D\03t\0CY\07\0C\14\0C\048\08\0A\06(\08\22N\81T\0C\15\03\03\05\07\09\19\07\07\09\03\0D\07)\80\CB%\0A\84\06", comdat, align 16
@.str.26 = private unnamed_addr constant [5 x i8] c"\00\1F\00\01\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"NAN\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.31 = private unnamed_addr constant [47 x i8] c"D:/Code/_CLIB/fmt/fmt/include/fmt/format-inl.h\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"too large exponent\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"k is out of range\00", align 1
@_ZZN3fmt3v116detail9dragonbox14cache_accessorIfE16get_cached_powerEiE18pow10_significands = linkonce_odr dso_local local_unnamed_addr constant [78 x i64] [i64 -9093133594791772939, i64 -6754730975062328270, i64 -3831727700400522433, i64 -177973607073265138, i64 -7028762532061872567, i64 -4174267146649952805, i64 -606147914885053102, i64 -7296371474444240045, i64 -4508778324627912152, i64 -1024286887357502286, i64 -7557708332239520785, i64 -4835449396872013077, i64 -1432625727662628442, i64 -7812920107430224632, i64 -5154464115860392886, i64 -1831394126398103204, i64 -8062150356639896358, i64 -5466001927372482544, i64 -2220816390788215276, i64 -8305539271883716404, i64 -5770238071427257601, i64 -2601111570856684097, i64 -8543223759426509416, i64 -6067343680855748867, i64 -2972493582642298179, i64 -8775337516792518218, i64 -6357485877563259868, i64 -3335171328526686932, i64 -9002011107970261188, i64 -6640827866535438581, i64 -3689348814741910323, i64 -9223372036854775808, i64 -6917529027641081856, i64 -4035225266123964416, i64 -432345564227567616, i64 -7187745005283311616, i64 -4372995238176751616, i64 -854558029293551616, i64 -7451627795949551616, i64 -4702848726509551616, i64 -1266874889709551616, i64 -7709325833709551616, i64 -5024971273709551616, i64 -1669528073709551616, i64 -7960984073709551616, i64 -5339544073709551616, i64 -2062744073709551616, i64 -8206744073709551616, i64 -5646744073709551616, i64 -2446744073709551616, i64 -8446744073709551616, i64 -5946744073709551616, i64 -2821744073709551616, i64 -8681119073709551616, i64 -6239712823709551616, i64 -3187955011209551616, i64 -8910000909647051616, i64 -6525815118631426616, i64 -3545582879861895366, i64 -9133518327554766459, i64 -6805211891016070170, i64 -3894828845342699809, i64 -256850038250986857, i64 -7078060301547948642, i64 -4235889358507547898, i64 -683175679707046969, i64 -7344513827457986211, i64 -4568956265895094860, i64 -1099509313941480671, i64 -7604722348854507275, i64 -4894216917640746190, i64 -1506085128623544834, i64 -7858832233030797377, i64 -5211854272861108818, i64 -1903131822648998118, i64 -8106986416796705680, i64 -5522047002568494196, i64 -2290872734783229841], comdat, align 16
@.str.34 = private unnamed_addr constant [15 x i8] c"n is too large\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"exponent out of range\00", align 1
@__const._ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_.specs = private unnamed_addr constant { i32, [4 x i8], i32, i32 } { i32 32768, [4 x i8] c" \00\00\00", i32 0, i32 -1 }, align 4
@_ZZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEiE18pow10_significands = linkonce_odr dso_local local_unnamed_addr constant [24 x %"class.fmt::v11::detail::uint128_fallback"] [%"class.fmt::v11::detail::uint128_fallback" { i64 2731688931043774331, i64 -38366372719436721 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -357406007711231344, i64 -3576574988931720989 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -851274575098787809, i64 -6434717147622031249 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -5882264492762254952, i64 -8743505996830120772 }, %"class.fmt::v11::detail::uint128_fallback" { i64 4300328673033783640, i64 -2770317479606055818 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -1886565557410948869, i64 -5783427518286599473 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -3851351762838199358, i64 -8217398424034108273 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -3728406090856200938, i64 -1920344853953336643 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -573958201337495958, i64 -5096825099203863602 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -2456994988062127447, i64 -7662765406849295699 }, %"class.fmt::v11::detail::uint128_fallback" { i64 5991131704928854841, i64 -1024286887357502287 }, %"class.fmt::v11::detail::uint128_fallback" { i64 0, i64 -4372995238176751616 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -1143914305352105984, i64 -7078060301547948643 }, %"class.fmt::v11::detail::uint128_fallback" { i64 212292400617608629, i64 -79644842111309304 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -1347699823215743097, i64 -3609919470959866074 }, %"class.fmt::v11::detail::uint128_fallback" { i64 -8873354301053463267, i64 -6461652605697523899 }, %"class.fmt::v11::detail::uint128_fallback" { i64 831516194300602803, i64 -8765264286586255934 }, %"class.fmt::v11::detail::uint128_fallback" { i64 1957835834444274181, i64 -2805469892591575644 }, %"class.fmt::v11::detail::uint128_fallback" { i64 4069786015789754291, i64 -5811823411358942533 }, %"class.fmt::v11::detail::uint128_fallback" { i64 6695424375237764563, i64 -8240336443785642460 }, %"class.fmt::v11::detail::uint128_fallback" { i64 1129188820640936779, i64 -1957403223540890347 }, %"class.fmt::v11::detail::uint128_fallback" { i64 4425478360848884292, i64 -5126760611758208489 }, %"class.fmt::v11::detail::uint128_fallback" { i64 1096485900831157193, i64 -7686947121313936181 }, %"class.fmt::v11::detail::uint128_fallback" { i64 7239297505920716784, i64 -1063354554122040811 }], comdat, align 16
@_ZZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEiE14powers_of_5_64 = linkonce_odr dso_local local_unnamed_addr constant [27 x i64] [i64 1, i64 5, i64 25, i64 125, i64 625, i64 3125, i64 15625, i64 78125, i64 390625, i64 1953125, i64 9765625, i64 48828125, i64 244140625, i64 1220703125, i64 6103515625, i64 30517578125, i64 152587890625, i64 762939453125, i64 3814697265625, i64 19073486328125, i64 95367431640625, i64 476837158203125, i64 2384185791015625, i64 11920928955078125, i64 59604644775390625, i64 298023223876953125, i64 1490116119384765625], comdat, align 16
@.str.36 = private unnamed_addr constant [24 x i8] c"shifting error detected\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"number is too big\00", align 1
@_ZTIN3fmt3v1112format_errorE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN3fmt3v1112format_errorE, ptr @_ZTISt13runtime_error }, comdat, align 8
@_ZTSN3fmt3v1112format_errorE = linkonce_odr dso_local constant [25 x i8] c"N3fmt3v1112format_errorE\00", comdat, align 1
@_ZTISt13runtime_error = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSSt13runtime_error, ptr @_ZTISt9exception }, comdat, align 8
@_ZTSSt13runtime_error = linkonce_odr dso_local constant [18 x i8] c"St13runtime_error\00", comdat, align 1
@_ZTVN3fmt3v1112format_errorE = linkonce_odr dso_local unnamed_addr constant { [5 x ptr] } { [5 x ptr] [ptr null, ptr @_ZTIN3fmt3v1112format_errorE, ptr @_ZNSt13runtime_errorD2Ev, ptr @_ZN3fmt3v1112format_errorD0Ev, ptr @_ZNKSt13runtime_error4whatEv] }, comdat, align 8
@.str.38 = private unnamed_addr constant [18 x i8] c"unaligned bigints\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"string pointer is null\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"argument not found\00", align 1
@.str.41 = private unnamed_addr constant [31 x i8] c"unmatched '}' in format string\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"invalid format string\00", align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"missing '}' in format string\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"unknown format specifier\00", align 1
@.str.45 = private unnamed_addr constant [57 x i8] c"cannot switch from manual to automatic argument indexing\00", align 1
@.str.46 = private unnamed_addr constant [57 x i8] c"cannot switch from automatic to manual argument indexing\00", align 1
@.str.47 = private unnamed_addr constant [43 x i8] c"format specifier requires numeric argument\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"invalid format specifier\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"invalid fill character '{'\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"invalid precision\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"invalid fill\00", align 1
@.str.52 = private unnamed_addr constant [32 x i8] c"width/precision is out of range\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"width/precision is not integer\00", align 1
@.str.54 = private unnamed_addr constant [34 x i8] c"invalid format specifier for char\00", align 1
@__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes = private unnamed_addr constant [4 x i32] [i32 0, i32 0, i32 16777259, i32 16777248], align 16
@.str.55 = private unnamed_addr constant [29 x i8] c"zeros should not appear here\00", align 1
@.str.56 = private unnamed_addr constant [9 x i32] [i32 -1717986918, i32 -2104533975, i32 -2143188680, i32 -2147054151, i32 -2147440698, i32 -2147479353, i32 -2147483218, i32 -2147483605, i32 0], align 4
@__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.masks = private unnamed_addr constant [5 x i32] [i32 0, i32 127, i32 31, i32 15, i32 7], align 16
@__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.mins = private unnamed_addr constant [5 x i32] [i32 4194304, i32 0, i32 128, i32 2048, i32 65536], align 16
@__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shiftc = private unnamed_addr constant [5 x i32] [i32 0, i32 18, i32 12, i32 6, i32 0], align 16
@__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shifte = private unnamed_addr constant [5 x i32] [i32 0, i32 6, i32 4, i32 2, i32 0], align 16
@.str.57 = private unnamed_addr constant [32 x i8] c"\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\02\02\02\02\03\03\04\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"invalid utf8\00", align 1
@_ZTINSt3__112system_errorE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSNSt3__112system_errorE, ptr @_ZTISt13runtime_error }, comdat, align 8
@_ZTSNSt3__112system_errorE = linkonce_odr dso_local constant [23 x i8] c"NSt3__112system_errorE\00", comdat, align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"cannot write to file\00", align 1

; Function Attrs: mustprogress uwtable
define dso_local dllexport void @Hello() local_unnamed_addr #0 {
  %1 = alloca %"struct.fmt::v11::detail::format_arg_store.81", align 16
  %2 = alloca %"class.fmt::v11::basic_string_view", align 8
  %3 = alloca %"class.fmt::v11::basic_format_args", align 8
  %4 = alloca %"struct.fmt::v11::detail::format_arg_store", align 16
  %5 = alloca %"class.fmt::v11::basic_string_view", align 8
  %6 = alloca %"class.fmt::v11::basic_format_args", align 8
  %7 = tail call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  store ptr @.str, ptr %5, align 8
  %8 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 11, ptr %8, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  store i64 0, ptr %6, align 8, !tbaa !5
  %9 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store ptr %4, ptr %9, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %7, ptr noundef nonnull %5, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  %10 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2)
  store ptr @.str.1, ptr %2, align 8
  %11 = getelementptr inbounds nuw i8, ptr %2, i64 8
  store i64 7, ptr %11, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %1) #30
  store ptr @.str.2, ptr %1, align 16, !tbaa !10
  store i64 12, ptr %3, align 8, !tbaa !5
  %12 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store ptr %1, ptr %12, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %10, ptr noundef nonnull %2, ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %1) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef double @_ZN9Haversine7deg2radEdb(double noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 {
  %3 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %4 = alloca %"class.fmt::v11::basic_string_view", align 8
  %5 = alloca %"class.fmt::v11::basic_format_args", align 8
  %6 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %7 = alloca %"class.fmt::v11::basic_string_view", align 8
  %8 = alloca %"class.fmt::v11::basic_format_args", align 8
  %9 = fmul double %0, 0x3F91DF46A2529D39
  br i1 %1, label %10, label %17

10:                                               ; preds = %2
  %11 = tail call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  store ptr @.str.3, ptr %7, align 8
  %12 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 8, ptr %12, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store double %0, ptr %6, align 16, !tbaa !10
  store i64 10, ptr %8, align 8, !tbaa !5
  %13 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store ptr %6, ptr %13, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %11, ptr noundef nonnull %7, ptr noundef nonnull %8)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8)
  %14 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  store ptr @.str.4, ptr %4, align 8
  %15 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 8, ptr %15, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store double %9, ptr %3, align 16, !tbaa !10
  store i64 10, ptr %5, align 8, !tbaa !5
  %16 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store ptr %3, ptr %16, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %14, ptr noundef nonnull %4, ptr noundef nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br label %17

17:                                               ; preds = %10, %2
  ret double %9
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress uwtable
define dso_local noundef double @_ZN9Haversine7Hav_radEdb(double noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 {
  %3 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %4 = alloca %"class.fmt::v11::basic_string_view", align 8
  %5 = alloca %"class.fmt::v11::basic_format_args", align 8
  %6 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %7 = alloca %"class.fmt::v11::basic_string_view", align 8
  %8 = alloca %"class.fmt::v11::basic_format_args", align 8
  %9 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %10 = alloca %"class.fmt::v11::basic_string_view", align 8
  %11 = alloca %"class.fmt::v11::basic_format_args", align 8
  %12 = alloca %"struct.fmt::v11::detail::format_arg_store.83", align 16
  %13 = alloca %"class.fmt::v11::basic_string_view", align 8
  %14 = alloca %"class.fmt::v11::basic_format_args", align 8
  %15 = tail call double @cos(double noundef %0) #30, !tbaa !11
  %16 = fsub double 1.000000e+00, %15
  %17 = fmul double %16, 5.000000e-01
  br i1 %1, label %18, label %34

18:                                               ; preds = %2
  %19 = tail call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  store ptr @.str.5, ptr %13, align 8
  %20 = getelementptr inbounds nuw i8, ptr %13, i64 8
  store i64 11, ptr %20, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #30
  store double %0, ptr %12, align 16, !tbaa !10
  %21 = getelementptr inbounds nuw i8, ptr %12, i64 16
  store ptr @.str.11, ptr %21, align 16, !tbaa !10
  %22 = getelementptr inbounds nuw i8, ptr %12, i64 24
  store i64 3, ptr %22, align 8, !tbaa !10
  store i64 218, ptr %14, align 8, !tbaa !5
  %23 = getelementptr inbounds nuw i8, ptr %14, i64 8
  store ptr %12, ptr %23, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %19, ptr noundef nonnull %13, ptr noundef nonnull %14)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %24 = call double @cos(double noundef %0) #30, !tbaa !11
  %25 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10)
  store ptr @.str.6, ptr %10, align 8
  %26 = getelementptr inbounds nuw i8, ptr %10, i64 8
  store i64 14, ptr %26, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #30
  store double %24, ptr %9, align 16, !tbaa !10
  store i64 10, ptr %11, align 8, !tbaa !5
  %27 = getelementptr inbounds nuw i8, ptr %11, i64 8
  store ptr %9, ptr %27, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %25, ptr noundef nonnull %10, ptr noundef nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  %28 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  store ptr @.str.7, ptr %7, align 8
  %29 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 16, ptr %29, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store double %16, ptr %6, align 16, !tbaa !10
  store i64 10, ptr %8, align 8, !tbaa !5
  %30 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store ptr %6, ptr %30, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %28, ptr noundef nonnull %7, ptr noundef nonnull %8)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8)
  %31 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  store ptr @.str.8, ptr %4, align 8
  %32 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 14, ptr %32, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store double %17, ptr %3, align 16, !tbaa !10
  store i64 10, ptr %5, align 8, !tbaa !5
  %33 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store ptr %3, ptr %33, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %31, ptr noundef nonnull %4, ptr noundef nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br label %34

34:                                               ; preds = %18, %2
  ret double %17
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare dso_local double @cos(double noundef) local_unnamed_addr #2

; Function Attrs: mustprogress uwtable
define dso_local noundef double @_ZN9Haversine7Hav_degEdb(double noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 {
  %3 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %4 = alloca %"class.fmt::v11::basic_string_view", align 8
  %5 = alloca %"class.fmt::v11::basic_format_args", align 8
  %6 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %7 = alloca %"class.fmt::v11::basic_string_view", align 8
  %8 = alloca %"class.fmt::v11::basic_format_args", align 8
  %9 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %10 = alloca %"class.fmt::v11::basic_string_view", align 8
  %11 = alloca %"class.fmt::v11::basic_format_args", align 8
  %12 = alloca %"struct.fmt::v11::detail::format_arg_store.83", align 16
  %13 = alloca %"class.fmt::v11::basic_string_view", align 8
  %14 = alloca %"class.fmt::v11::basic_format_args", align 8
  %15 = fmul double %0, 0x3F91DF46A2529D39
  %16 = tail call double @cos(double noundef %15) #30, !tbaa !11
  %17 = fsub double 1.000000e+00, %16
  %18 = fmul double %17, 5.000000e-01
  br i1 %1, label %19, label %35

19:                                               ; preds = %2
  %20 = tail call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  store ptr @.str.5, ptr %13, align 8
  %21 = getelementptr inbounds nuw i8, ptr %13, i64 8
  store i64 11, ptr %21, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #30
  store double %15, ptr %12, align 16, !tbaa !10
  %22 = getelementptr inbounds nuw i8, ptr %12, i64 16
  store ptr @.str.12, ptr %22, align 16, !tbaa !10
  %23 = getelementptr inbounds nuw i8, ptr %12, i64 24
  store i64 2, ptr %23, align 8, !tbaa !10
  store i64 218, ptr %14, align 8, !tbaa !5
  %24 = getelementptr inbounds nuw i8, ptr %14, i64 8
  store ptr %12, ptr %24, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %20, ptr noundef nonnull %13, ptr noundef nonnull %14)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %25 = call double @cos(double noundef %15) #30, !tbaa !11
  %26 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10)
  store ptr @.str.6, ptr %10, align 8
  %27 = getelementptr inbounds nuw i8, ptr %10, i64 8
  store i64 14, ptr %27, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #30
  store double %25, ptr %9, align 16, !tbaa !10
  store i64 10, ptr %11, align 8, !tbaa !5
  %28 = getelementptr inbounds nuw i8, ptr %11, i64 8
  store ptr %9, ptr %28, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %26, ptr noundef nonnull %10, ptr noundef nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  %29 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  store ptr @.str.7, ptr %7, align 8
  %30 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 16, ptr %30, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store double %17, ptr %6, align 16, !tbaa !10
  store i64 10, ptr %8, align 8, !tbaa !5
  %31 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store ptr %6, ptr %31, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %29, ptr noundef nonnull %7, ptr noundef nonnull %8)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8)
  %32 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  store ptr @.str.8, ptr %4, align 8
  %33 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 14, ptr %33, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store double %18, ptr %3, align 16, !tbaa !10
  store i64 10, ptr %5, align 8, !tbaa !5
  %34 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store ptr %3, ptr %34, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %32, ptr noundef nonnull %4, ptr noundef nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br label %35

35:                                               ; preds = %19, %2
  ret double %18
}

; Function Attrs: mustprogress uwtable
define dso_local noundef double @_ZN9Haversine3HavEd4Unitb(double noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 {
  %4 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %5 = alloca %"class.fmt::v11::basic_string_view", align 8
  %6 = alloca %"class.fmt::v11::basic_format_args", align 8
  %7 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %8 = alloca %"class.fmt::v11::basic_string_view", align 8
  %9 = alloca %"class.fmt::v11::basic_format_args", align 8
  %10 = alloca %"struct.fmt::v11::detail::format_arg_store.82", align 16
  %11 = alloca %"class.fmt::v11::basic_string_view", align 8
  %12 = alloca %"class.fmt::v11::basic_format_args", align 8
  %13 = alloca %"struct.fmt::v11::detail::format_arg_store.83", align 16
  %14 = alloca %"class.fmt::v11::basic_string_view", align 8
  %15 = alloca %"class.fmt::v11::basic_format_args", align 8
  %16 = alloca %"struct.fmt::v11::detail::format_arg_store.83", align 16
  %17 = alloca %"class.fmt::v11::basic_string_view", align 8
  %18 = alloca %"class.fmt::v11::basic_format_args", align 8
  %19 = alloca %"struct.fmt::v11::detail::format_arg_store.83", align 16
  %20 = alloca %"class.fmt::v11::basic_string_view", align 8
  %21 = alloca %"class.fmt::v11::basic_format_args", align 8
  %22 = icmp eq i32 %1, 0
  %23 = tail call ptr @__acrt_iob_func(i32 noundef 1)
  br i1 %22, label %24, label %30

24:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %20)
  store ptr @.str.9, ptr %20, align 8
  %25 = getelementptr inbounds nuw i8, ptr %20, i64 8
  store i64 15, ptr %25, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %21)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19) #30
  store double %0, ptr %19, align 16, !tbaa !10
  %26 = getelementptr inbounds nuw i8, ptr %19, i64 16
  store ptr @.str.12, ptr %26, align 16, !tbaa !10
  %27 = getelementptr inbounds nuw i8, ptr %19, i64 24
  store i64 2, ptr %27, align 8, !tbaa !10
  store i64 218, ptr %21, align 8, !tbaa !5
  %28 = getelementptr inbounds nuw i8, ptr %21, i64 8
  store ptr %19, ptr %28, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %23, ptr noundef nonnull %20, ptr noundef nonnull %21)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %20)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %21)
  %29 = fmul double %0, 0x3F91DF46A2529D39
  br label %35

30:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %17)
  store ptr @.str.9, ptr %17, align 8
  %31 = getelementptr inbounds nuw i8, ptr %17, i64 8
  store i64 15, ptr %31, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %18)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %16) #30
  store double %0, ptr %16, align 16, !tbaa !10
  %32 = getelementptr inbounds nuw i8, ptr %16, i64 16
  store ptr @.str.11, ptr %32, align 16, !tbaa !10
  %33 = getelementptr inbounds nuw i8, ptr %16, i64 24
  store i64 3, ptr %33, align 8, !tbaa !10
  store i64 218, ptr %18, align 8, !tbaa !5
  %34 = getelementptr inbounds nuw i8, ptr %18, i64 8
  store ptr %16, ptr %34, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %23, ptr noundef nonnull %17, ptr noundef nonnull %18)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %18)
  br label %35

35:                                               ; preds = %30, %24
  %36 = phi double [ %29, %24 ], [ %0, %30 ]
  %37 = call double @cos(double noundef %36) #30, !tbaa !11
  %38 = fsub double 1.000000e+00, %37
  %39 = fmul double %38, 5.000000e-01
  br i1 %2, label %40, label %56

40:                                               ; preds = %35
  %41 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  store ptr @.str.5, ptr %14, align 8
  %42 = getelementptr inbounds nuw i8, ptr %14, i64 8
  store i64 11, ptr %42, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %15)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #30
  store double %36, ptr %13, align 16, !tbaa !10
  %43 = getelementptr inbounds nuw i8, ptr %13, i64 16
  store ptr @.str.12, ptr %43, align 16, !tbaa !10
  %44 = getelementptr inbounds nuw i8, ptr %13, i64 24
  store i64 2, ptr %44, align 8, !tbaa !10
  store i64 218, ptr %15, align 8, !tbaa !5
  %45 = getelementptr inbounds nuw i8, ptr %15, i64 8
  store ptr %13, ptr %45, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %41, ptr noundef nonnull %14, ptr noundef nonnull %15)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %15)
  %46 = call double @cos(double noundef %36) #30, !tbaa !11
  %47 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  store ptr @.str.6, ptr %11, align 8
  %48 = getelementptr inbounds nuw i8, ptr %11, i64 8
  store i64 14, ptr %48, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #30
  store double %46, ptr %10, align 16, !tbaa !10
  store i64 10, ptr %12, align 8, !tbaa !5
  %49 = getelementptr inbounds nuw i8, ptr %12, i64 8
  store ptr %10, ptr %49, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %47, ptr noundef nonnull %11, ptr noundef nonnull %12)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %50 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8)
  store ptr @.str.7, ptr %8, align 8
  %51 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 16, ptr %51, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #30
  store double %38, ptr %7, align 16, !tbaa !10
  store i64 10, ptr %9, align 8, !tbaa !5
  %52 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store ptr %7, ptr %52, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %50, ptr noundef nonnull %8, ptr noundef nonnull %9)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9)
  %53 = call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  store ptr @.str.8, ptr %5, align 8
  %54 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 14, ptr %54, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  store double %39, ptr %4, align 16, !tbaa !10
  store i64 10, ptr %6, align 8, !tbaa !5
  %55 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store ptr %4, ptr %55, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %53, ptr noundef nonnull %5, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  br label %56

56:                                               ; preds = %40, %35
  ret double %39
}

; Function Attrs: mustprogress uwtable
define dso_local noundef double @_Z3Havd4Unitb(double noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 {
  %4 = alloca %"struct.fmt::v11::detail::format_arg_store", align 16
  %5 = alloca %"class.fmt::v11::basic_string_view", align 8
  %6 = alloca %"class.fmt::v11::basic_format_args", align 8
  %7 = tail call ptr @__acrt_iob_func(i32 noundef 1)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  store ptr @.str.10, ptr %5, align 8
  %8 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 42, ptr %8, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  store i64 0, ptr %6, align 8, !tbaa !5
  %9 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store ptr %4, ptr %9, align 8, !tbaa !10
  call void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %7, ptr noundef nonnull %5, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  %10 = call noundef double @_ZN9Haversine3HavEd4Unitb(double noundef %0, i32 noundef %1, i1 noundef zeroext %2)
  ret double %10
}

declare dllimport ptr @__acrt_iob_func(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v118vprintlnEP6_iobufNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #5 comdat personality ptr @__gxx_personality_seh0 {
  %4 = alloca %"class.fmt::v11::basic_format_arg", align 16
  %5 = alloca %"struct.fmt::v11::detail::default_arg_formatter", align 8
  %6 = alloca %"class.fmt::v11::basic_string_view", align 8
  %7 = alloca %"struct.fmt::v11::detail::format_handler", align 8
  %8 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %9 = alloca %"class.fmt::v11::basic_string_view", align 8
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %8) #30
  %10 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %11 = getelementptr inbounds nuw i8, ptr %8, i64 24
  %12 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 0, ptr %12, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds nuw i8, ptr %8, i64 32
  store ptr %13, ptr %8, align 8, !tbaa !17
  store i64 500, ptr %10, align 8, !tbaa !18
  %14 = load ptr, ptr %1, align 8, !tbaa !19
  %15 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %16 = load i64, ptr %15, align 8, !tbaa !20
  %17 = load i64, ptr %2, align 8, !tbaa !20
  %18 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %19 = load ptr, ptr %18, align 8, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  %20 = icmp eq i64 %16, 2
  br i1 %20, label %21, label %38

21:                                               ; preds = %3
  %22 = call i32 @memcmp(ptr noundef nonnull dereferenceable(2) %14, ptr noundef nonnull dereferenceable(2) @.str.16, i64 noundef 2)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #30
  %25 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 0, ptr %25, align 16, !tbaa !21, !alias.scope !25
  %26 = icmp sgt i64 %17, -1
  %27 = trunc i64 %17 to i32
  br i1 %26, label %31, label %28

28:                                               ; preds = %24
  %29 = icmp sgt i32 %27, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %28
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 16 dereferenceable(20) %19, i64 20, i1 false), !tbaa.struct !28
  br label %35

31:                                               ; preds = %24
  %32 = and i32 %27, 15
  store i32 %32, ptr %25, align 16, !tbaa !21, !alias.scope !25
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %4, ptr noundef nonnull align 16 dereferenceable(16) %19, i64 16, i1 false), !tbaa.struct !30
  br label %35

35:                                               ; preds = %34, %31, %30, %28
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #30
  %36 = ptrtoint ptr %8 to i64
  store i64 %36, ptr %5, align 8, !tbaa !31
  invoke void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail21default_arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 8 dereferenceable(8) %5)
          to label %37 unwind label %70

37:                                               ; preds = %35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30
  br label %47

38:                                               ; preds = %21, %3
  store ptr %14, ptr %6, align 8, !tbaa !19
  %39 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 %16, ptr %39, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %7) #30
  store ptr %14, ptr %7, align 8
  %40 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 %16, ptr %40, align 8
  %41 = getelementptr inbounds nuw i8, ptr %7, i64 16
  store i32 0, ptr %41, align 8, !tbaa !33
  %42 = getelementptr inbounds nuw i8, ptr %7, i64 24
  %43 = getelementptr inbounds nuw i8, ptr %7, i64 32
  store i64 %17, ptr %43, align 8
  %44 = getelementptr inbounds nuw i8, ptr %7, i64 40
  store ptr %19, ptr %44, align 8
  store ptr %8, ptr %42, align 8, !tbaa !31
  %45 = getelementptr inbounds nuw i8, ptr %7, i64 48
  store ptr null, ptr %45, align 8, !tbaa !36
  invoke void @_ZN3fmt3v116detail19parse_format_stringIcNS1_14format_handlerIcEEEEvNS0_17basic_string_viewIT_EEOT0_(ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(56) %7)
          to label %46 unwind label %70

46:                                               ; preds = %38
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %7) #30
  br label %47

47:                                               ; preds = %46, %37
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  %48 = load i64, ptr %12, align 8, !tbaa !37
  %49 = add i64 %48, 1
  %50 = load i64, ptr %10, align 8, !tbaa !18
  %51 = icmp ugt i64 %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = load ptr, ptr %11, align 8, !tbaa !13
  invoke void %53(ptr noundef nonnull align 8 dereferenceable(32) %8, i64 noundef %49)
          to label %54 unwind label %72

54:                                               ; preds = %52
  %55 = load i64, ptr %12, align 8, !tbaa !37
  %56 = add i64 %55, 1
  br label %57

57:                                               ; preds = %54, %47
  %58 = phi i64 [ %49, %47 ], [ %56, %54 ]
  %59 = phi i64 [ %48, %47 ], [ %55, %54 ]
  %60 = load ptr, ptr %8, align 8, !tbaa !17
  store i64 %58, ptr %12, align 8, !tbaa !37
  %61 = getelementptr inbounds nuw i8, ptr %60, i64 %59
  store i8 10, ptr %61, align 1, !tbaa !10
  %62 = load ptr, ptr %8, align 8, !tbaa !17
  %63 = load i64, ptr %12, align 8, !tbaa !37
  store ptr %62, ptr %9, align 8, !tbaa !38
  %64 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 %63, ptr %64, align 8, !tbaa !39
  invoke void @_ZN3fmt3v116detail5printEP6_iobufNS0_17basic_string_viewIcEE(ptr noundef %0, ptr noundef nonnull %9)
          to label %65 unwind label %70

65:                                               ; preds = %57
  %66 = load ptr, ptr %8, align 8, !tbaa !17
  %67 = icmp eq ptr %66, %13
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @free(ptr noundef %66)
  br label %69

69:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  ret void

70:                                               ; preds = %38, %35, %57
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %74

72:                                               ; preds = %52
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi { ptr, i32 } [ %71, %70 ], [ %73, %72 ]
  %76 = load ptr, ptr %8, align 8, !tbaa !17
  %77 = icmp eq ptr %76, %13
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  call void @free(ptr noundef %76)
  br label %79

79:                                               ; preds = %74, %78
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  resume { ptr, i32 } %75
}

declare dso_local i32 @__gxx_personality_seh0(...)

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail5printEP6_iobufNS0_17basic_string_viewIcEE(ptr noundef %0, ptr noundef %1) local_unnamed_addr #5 comdat personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"struct.fmt::v11::fstring", align 8
  %4 = alloca %"class.fmt::v11::detail::utf8_to_utf16", align 8
  %5 = alloca %"class.fmt::v11::basic_string_view", align 8
  %6 = tail call i32 @_fileno(ptr noundef %0)
  %7 = tail call i32 @_isatty(i32 noundef %6)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @fflush(ptr noundef %0)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 1040, ptr nonnull %4) #30
  call void @_ZN3fmt3v116detail13utf8_to_utf16C2ENS0_17basic_string_viewIcEE(ptr noundef nonnull align 8 dereferenceable(1040) %4, ptr noundef nonnull %5)
  %11 = invoke i64 @_get_osfhandle(i32 noundef %6)
          to label %12 unwind label %25

12:                                               ; preds = %9
  %13 = load ptr, ptr %4, align 8, !tbaa !40
  %14 = inttoptr i64 %11 to ptr
  %15 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %16 = load i64, ptr %15, align 8, !tbaa !43
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, -1
  %19 = invoke i32 @WriteConsoleW(ptr noundef %14, ptr noundef %13, i32 noundef %18, ptr noundef null, ptr noundef null)
          to label %20 unwind label %25

20:                                               ; preds = %12
  %21 = load ptr, ptr %4, align 8, !tbaa !40
  %22 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %23 = icmp eq ptr %21, %22
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  call void @free(ptr noundef %21)
  br label %34

25:                                               ; preds = %12, %9
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = load ptr, ptr %4, align 8, !tbaa !40
  %28 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %29 = icmp eq ptr %27, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  call void @free(ptr noundef %27)
  br label %33

31:                                               ; preds = %53, %33
  %32 = phi { ptr, i32 } [ %26, %33 ], [ %54, %53 ]
  resume { ptr, i32 } %32

33:                                               ; preds = %30, %25
  call void @llvm.lifetime.end.p0(i64 1040, ptr nonnull %4) #30
  br label %31

34:                                               ; preds = %20, %24
  %35 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0(i64 1040, ptr nonnull %4) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br i1 %35, label %36, label %56

36:                                               ; preds = %34, %2
  %37 = load ptr, ptr %1, align 8, !tbaa !38
  %38 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %39 = load i64, ptr %38, align 8, !tbaa !39
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3)
  %40 = call i64 @fwrite(ptr noundef %37, i64 noundef 1, i64 noundef %39, ptr noundef %0)
  %41 = icmp ult i64 %40, %39
  br i1 %41, label %42, label %55

42:                                               ; preds = %36
  %43 = call ptr @__cxa_allocate_exception(i64 32) #30
  %44 = invoke ptr @_errno()
          to label %45 unwind label %51

45:                                               ; preds = %42
  %46 = load i32, ptr %44, align 4, !tbaa !11
  store ptr @.str.59, ptr %3, align 8, !tbaa !38, !alias.scope !44
  %47 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store i64 20, ptr %47, align 8, !tbaa !39, !alias.scope !44
  invoke void @_ZN3fmt3v1112system_errorIJEEENSt3__112system_errorEiNS0_7fstringIJDpT_EE1tEDpOS5_(ptr dead_on_unwind writable sret(%"class.std::__1::system_error") align 8 %43, i32 noundef %46, ptr noundef nonnull %3)
          to label %50 unwind label %48

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %53

50:                                               ; preds = %45
  call void @__cxa_throw(ptr %43, ptr nonnull @_ZTINSt3__112system_errorE, ptr nonnull @_ZNSt3__112system_errorD1Ev) #31
  unreachable

51:                                               ; preds = %42
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi { ptr, i32 } [ %52, %51 ], [ %49, %48 ]
  call void @__cxa_free_exception(ptr %43) #30
  br label %31

55:                                               ; preds = %36
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3)
  br label %56

56:                                               ; preds = %34, %55
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1) #0 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %4 = load i64, ptr %3, align 8, !tbaa !18
  %5 = lshr i64 %4, 1
  %6 = add i64 %5, %4
  %7 = tail call i64 @llvm.umax.i64(i64 %1, i64 %6)
  %8 = load ptr, ptr %0, align 8, !tbaa !17
  %9 = tail call ptr @malloc(i64 noundef %7) #32
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = tail call ptr @__cxa_allocate_exception(i64 8) #30
  tail call void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %12) #30
  tail call void @__cxa_throw(ptr nonnull %12, ptr nonnull @_ZTISt9bad_alloc, ptr nonnull @_ZNSt9bad_allocD1Ev) #31
  unreachable

13:                                               ; preds = %2
  %14 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %15 = load i64, ptr %14, align 8, !tbaa !37
  %16 = icmp ule i64 %15, %7
  tail call void @llvm.assume(i1 %16)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %9, ptr align 1 %8, i64 %15, i1 false)
  store ptr %9, ptr %0, align 8, !tbaa !17
  store i64 %7, ptr %3, align 8, !tbaa !18
  %17 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %18 = icmp eq ptr %8, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  tail call void @free(ptr noundef %8)
  br label %20

20:                                               ; preds = %19, %13
  ret void
}

; Function Attrs: inlinehint mustprogress noreturn uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #6 comdat {
  %4 = tail call ptr @__acrt_iob_func(i32 noundef 2)
  %5 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef nonnull @.str.15, ptr noundef %0, i32 noundef %1, ptr noundef %2) #30
  tail call void @abort() #33
  unreachable
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare dso_local noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #7

declare dso_local ptr @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocD1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

; Function Attrs: cold noreturn
declare dso_local void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: cold nofree noreturn nounwind
declare dso_local void @abort() local_unnamed_addr #11

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write)
declare void @llvm.assume(i1 noundef) #12

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare dso_local void @free(ptr allocptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail21default_arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #14 comdat align 2 {
  %3 = alloca %"class.fmt::v11::parse_context", align 8
  %4 = alloca %"class.fmt::v11::context", align 8
  %5 = alloca %class.anon.56, align 8
  %6 = alloca %"struct.fmt::v11::format_specs", align 4
  %7 = alloca %"struct.fmt::v11::format_specs", align 4
  %8 = alloca x86_fp80, align 16
  %9 = alloca %class.anon.29, align 8
  %10 = alloca %"struct.fmt::v11::format_specs", align 4
  %11 = alloca i128, align 16
  %12 = alloca i128, align 16
  %13 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %14 = load i32, ptr %13, align 16, !tbaa !21
  switch i32 %14, label %149 [
    i32 15, label %142
    i32 1, label %15
    i32 2, label %20
    i32 3, label %25
    i32 4, label %30
    i32 5, label %35
    i32 6, label %40
    i32 7, label %45
    i32 8, label %57
    i32 9, label %87
    i32 10, label %92
    i32 11, label %97
    i32 12, label %105
    i32 13, label %115
    i32 14, label %123
  ]

15:                                               ; preds = %2
  %16 = load i32, ptr %0, align 16, !tbaa !10
  %17 = load ptr, ptr %1, align 8, !tbaa !31
  %18 = ptrtoint ptr %17 to i64
  %19 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEiTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %18, i32 noundef %16)
  br label %150

20:                                               ; preds = %2
  %21 = load i32, ptr %0, align 16, !tbaa !10
  %22 = load ptr, ptr %1, align 8, !tbaa !31
  %23 = ptrtoint ptr %22 to i64
  %24 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEjTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %23, i32 noundef %21)
  br label %150

25:                                               ; preds = %2
  %26 = load i64, ptr %0, align 16, !tbaa !10
  %27 = load ptr, ptr %1, align 8, !tbaa !31
  %28 = ptrtoint ptr %27 to i64
  %29 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEExTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %28, i64 noundef %26)
  br label %150

30:                                               ; preds = %2
  %31 = load i64, ptr %0, align 16, !tbaa !10
  %32 = load ptr, ptr %1, align 8, !tbaa !31
  %33 = ptrtoint ptr %32 to i64
  %34 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEyTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %33, i64 noundef %31)
  br label %150

35:                                               ; preds = %2
  %36 = load i128, ptr %0, align 16, !tbaa !10
  %37 = load ptr, ptr %1, align 8, !tbaa !31
  %38 = ptrtoint ptr %37 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #30
  store i128 %36, ptr %12, align 16, !tbaa !49
  %39 = call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEnTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %38, ptr noundef nonnull %12)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #30
  br label %150

40:                                               ; preds = %2
  %41 = load i128, ptr %0, align 16, !tbaa !10
  %42 = load ptr, ptr %1, align 8, !tbaa !31
  %43 = ptrtoint ptr %42 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #30
  store i128 %41, ptr %11, align 16, !tbaa !49
  %44 = call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEoTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %43, ptr noundef nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #30
  br label %150

45:                                               ; preds = %2
  %46 = load i8, ptr %0, align 16, !tbaa !10, !range !51, !noundef !52
  %47 = trunc nuw i8 %46 to i1
  %48 = load ptr, ptr %1, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #30
  store i32 32768, ptr %10, align 4, !tbaa !53
  %49 = getelementptr inbounds nuw i8, ptr %10, i64 4
  store i8 32, ptr %49, align 4, !tbaa !10
  %50 = getelementptr inbounds nuw i8, ptr %10, i64 5
  %51 = getelementptr inbounds nuw i8, ptr %10, i64 12
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %50, i8 0, i64 7, i1 false)
  store i32 -1, ptr %51, align 4, !tbaa !55
  %52 = ptrtoint ptr %48 to i64
  %53 = select i1 %47, ptr @.str.20, ptr @.str.21
  %54 = select i1 %47, i64 4, i64 5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #30
  store ptr %53, ptr %9, align 8, !tbaa !19
  %55 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 %54, ptr %55, align 8, !tbaa !20
  %56 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_1ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %52, ptr noundef nonnull align 4 dereferenceable(16) %10, i64 noundef %54, i64 noundef %54, ptr noundef nonnull align 8 dereferenceable(16) %9)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #30
  br label %150

57:                                               ; preds = %2
  %58 = load i8, ptr %0, align 16, !tbaa !10
  %59 = load ptr, ptr %1, align 8, !tbaa !31
  %60 = getelementptr inbounds nuw i8, ptr %59, i64 8
  %61 = load i64, ptr %60, align 8, !tbaa !37
  %62 = add i64 %61, 1
  %63 = getelementptr inbounds nuw i8, ptr %59, i64 16
  %64 = load i64, ptr %63, align 8, !tbaa !18
  %65 = icmp ugt i64 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %57
  %67 = getelementptr inbounds nuw i8, ptr %59, i64 24
  %68 = load ptr, ptr %67, align 8, !tbaa !13
  tail call void %68(ptr noundef nonnull align 8 dereferenceable(32) %59, i64 noundef %62)
  %69 = load i64, ptr %60, align 8, !tbaa !37
  %70 = load i64, ptr %63, align 8, !tbaa !18
  %71 = add i64 %69, 1
  br label %72

72:                                               ; preds = %66, %57
  %73 = phi i64 [ %62, %57 ], [ %71, %66 ]
  %74 = phi i64 [ %64, %57 ], [ %70, %66 ]
  %75 = phi i64 [ %61, %57 ], [ %69, %66 ]
  %76 = icmp ugt i64 %73, %74
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds nuw i8, ptr %59, i64 24
  %79 = load ptr, ptr %78, align 8, !tbaa !13
  tail call void %79(ptr noundef nonnull align 8 dereferenceable(32) %59, i64 noundef %73)
  %80 = load i64, ptr %60, align 8, !tbaa !37
  %81 = add i64 %80, 1
  br label %82

82:                                               ; preds = %72, %77
  %83 = phi i64 [ %73, %72 ], [ %81, %77 ]
  %84 = phi i64 [ %75, %72 ], [ %80, %77 ]
  %85 = load ptr, ptr %59, align 8, !tbaa !17
  store i64 %83, ptr %60, align 8, !tbaa !37
  %86 = getelementptr inbounds nuw i8, ptr %85, i64 %84
  store i8 %58, ptr %86, align 1, !tbaa !10
  br label %150

87:                                               ; preds = %2
  %88 = load float, ptr %0, align 16, !tbaa !10
  %89 = load ptr, ptr %1, align 8, !tbaa !31
  %90 = ptrtoint ptr %89 to i64
  %91 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEfTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_(i64 %90, float noundef %88)
  br label %150

92:                                               ; preds = %2
  %93 = load double, ptr %0, align 16, !tbaa !10
  %94 = load ptr, ptr %1, align 8, !tbaa !31
  %95 = ptrtoint ptr %94 to i64
  %96 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_(i64 %95, double noundef %93)
  br label %150

97:                                               ; preds = %2
  %98 = load x86_fp80, ptr %0, align 16, !tbaa !10
  %99 = load ptr, ptr %1, align 8, !tbaa !31
  %100 = ptrtoint ptr %99 to i64
  %101 = getelementptr inbounds nuw i8, ptr %7, i64 5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %101, i8 0, i64 7, i1 false)
  store i32 32768, ptr %7, align 4
  %102 = getelementptr inbounds nuw i8, ptr %7, i64 4
  store i8 32, ptr %102, align 4
  %103 = getelementptr inbounds nuw i8, ptr %7, i64 12
  store i32 -1, ptr %103, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #30
  store x86_fp80 %98, ptr %8, align 16, !tbaa !57
  %104 = call i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEeEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %100, ptr noundef nonnull %8, ptr noundef nonnull %7, i64 0)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  br label %150

105:                                              ; preds = %2
  %106 = load ptr, ptr %0, align 16, !tbaa !10
  %107 = icmp eq ptr %106, null
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.39) #31
  unreachable

109:                                              ; preds = %105
  %110 = load ptr, ptr %1, align 8, !tbaa !31
  %111 = ptrtoint ptr %110 to i64
  %112 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %106) #30
  %113 = getelementptr inbounds nuw i8, ptr %106, i64 %112
  %114 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef nonnull %106, ptr noundef nonnull %113, i64 %111)
  br label %150

115:                                              ; preds = %2
  %116 = load ptr, ptr %0, align 16, !tbaa !59, !noalias !61
  %117 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %118 = load i64, ptr %117, align 8, !tbaa !64, !noalias !61
  %119 = load ptr, ptr %1, align 8, !tbaa !31
  %120 = ptrtoint ptr %119 to i64
  %121 = getelementptr inbounds nuw i8, ptr %116, i64 %118
  %122 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %116, ptr noundef %121, i64 %120)
  br label %150

123:                                              ; preds = %2
  %124 = load ptr, ptr %0, align 16, !tbaa !10
  %125 = load ptr, ptr %1, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i32 32768, ptr %6, align 4, !tbaa !53
  %126 = getelementptr inbounds nuw i8, ptr %6, i64 4
  store i8 32, ptr %126, align 4, !tbaa !10
  %127 = getelementptr inbounds nuw i8, ptr %6, i64 5
  %128 = getelementptr inbounds nuw i8, ptr %6, i64 12
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %127, i8 0, i64 7, i1 false)
  store i32 -1, ptr %128, align 4, !tbaa !55
  %129 = ptrtoint ptr %124 to i64
  br label %130

130:                                              ; preds = %130, %123
  %131 = phi i64 [ %129, %123 ], [ %134, %130 ]
  %132 = phi i32 [ 0, %123 ], [ %133, %130 ]
  %133 = add nuw nsw i32 %132, 1
  %134 = lshr i64 %131, 4
  %135 = icmp ult i64 %131, 16
  br i1 %135, label %136, label %130, !llvm.loop !65

136:                                              ; preds = %130
  %137 = ptrtoint ptr %125 to i64
  %138 = add nuw i32 %132, 3
  %139 = zext i32 %138 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #30
  store i64 %129, ptr %5, align 8, !tbaa !67
  %140 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i32 %133, ptr %140, align 8, !tbaa !69
  %141 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_ptrIcS5_yEET0_S7_T1_PKNS0_12format_specsEEUlS5_E_EES8_S8_RSA_yyOT2_(i64 %137, ptr noundef nonnull align 4 dereferenceable(16) %6, i64 noundef %139, i64 noundef %139, ptr noundef nonnull align 8 dereferenceable(12) %5)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #30
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %150

142:                                              ; preds = %2
  %143 = load ptr, ptr %0, align 16, !tbaa !36
  %144 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %145 = load ptr, ptr %144, align 8, !tbaa !36
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %3, i8 0, i64 20, i1 false)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #30
  %146 = load ptr, ptr %1, align 8, !tbaa !31
  %147 = getelementptr inbounds nuw i8, ptr %4, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %147, i8 0, i64 16, i1 false)
  store ptr %146, ptr %4, align 8, !tbaa !31
  %148 = getelementptr inbounds nuw i8, ptr %4, i64 24
  store ptr null, ptr %148, align 8, !tbaa !36
  call void %145(ptr noundef %143, ptr noundef nonnull align 8 dereferenceable(20) %3, ptr noundef nonnull align 8 dereferenceable(32) %4)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #30
  br label %150

149:                                              ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.40) #31
  unreachable

150:                                              ; preds = %142, %136, %115, %109, %97, %92, %87, %82, %45, %40, %35, %30, %25, %20, %15
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail19parse_format_stringIcNS1_14format_handlerIcEEEEvNS0_17basic_string_viewIT_EEOT0_(ptr noundef %0, ptr noundef nonnull align 8 dereferenceable(56) %1) local_unnamed_addr #0 comdat {
  %3 = load ptr, ptr %0, align 8, !tbaa !38
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %5 = load i64, ptr %4, align 8, !tbaa !39
  %6 = getelementptr inbounds nuw i8, ptr %3, i64 %5
  %7 = icmp samesign eq i64 %5, 0
  br i1 %7, label %35, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds nuw i8, ptr %1, i64 24
  br label %10

10:                                               ; preds = %8, %31
  %11 = phi ptr [ %3, %8 ], [ %33, %31 ]
  %12 = phi ptr [ %3, %8 ], [ %32, %31 ]
  %13 = getelementptr inbounds nuw i8, ptr %12, i64 1
  %14 = load i8, ptr %12, align 1, !tbaa !10
  switch i8 %14, label %31 [
    i8 123, label %15
    i8 125, label %20
  ]

15:                                               ; preds = %10
  %16 = load ptr, ptr %9, align 8, !tbaa !31
  %17 = ptrtoint ptr %16 to i64
  %18 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %11, ptr noundef nonnull %12, i64 %17)
  %19 = tail call noundef ptr @_ZN3fmt3v116detail23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S8_S8_OT0_(ptr noundef nonnull %12, ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(56) %1)
  br label %31

20:                                               ; preds = %10
  %21 = icmp eq ptr %13, %6
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = load i8, ptr %13, align 1, !tbaa !10
  %24 = icmp eq i8 %23, 125
  br i1 %24, label %26, label %25

25:                                               ; preds = %22, %20
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.41) #31
  unreachable

26:                                               ; preds = %22
  %27 = load ptr, ptr %9, align 8, !tbaa !31
  %28 = ptrtoint ptr %27 to i64
  %29 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %11, ptr noundef nonnull %13, i64 %28)
  %30 = getelementptr inbounds nuw i8, ptr %12, i64 2
  br label %31

31:                                               ; preds = %10, %26, %15
  %32 = phi ptr [ %19, %15 ], [ %30, %26 ], [ %13, %10 ]
  %33 = phi ptr [ %19, %15 ], [ %30, %26 ], [ %11, %10 ]
  %34 = icmp eq ptr %32, %6
  br i1 %34, label %35, label %10

35:                                               ; preds = %31, %2
  %36 = phi ptr [ %3, %2 ], [ %33, %31 ]
  %37 = getelementptr inbounds nuw i8, ptr %1, i64 24
  %38 = load ptr, ptr %37, align 8, !tbaa !31
  %39 = ptrtoint ptr %38 to i64
  %40 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %36, ptr noundef %6, i64 %39)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #15

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEiTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %0, i32 noundef %1) local_unnamed_addr #0 comdat {
  %3 = inttoptr i64 %0 to ptr
  %4 = icmp slt i32 %1, 0
  %5 = tail call i32 @llvm.abs.i32(i32 %1, i1 false)
  %6 = or i32 %5, 1
  %7 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %6, i1 true)
  %8 = xor i32 %7, 31
  %9 = zext nneg i32 %8 to i64
  %10 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %9
  %11 = load i64, ptr %10, align 8, !tbaa !20
  %12 = zext i32 %5 to i64
  %13 = add i64 %11, %12
  %14 = lshr i64 %13, 32
  %15 = trunc nuw i64 %14 to i32
  %16 = lshr i32 %1, 31
  %17 = zext nneg i32 %16 to i64
  %18 = ashr i64 %13, 32
  %19 = add nsw i64 %18, %17
  %20 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %21 = load i64, ptr %20, align 8, !tbaa !37
  %22 = add i64 %19, %21
  %23 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %24 = load i64, ptr %23, align 8, !tbaa !18
  %25 = icmp ugt i64 %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %2
  %27 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  tail call void %28(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %22)
  %29 = load i64, ptr %20, align 8, !tbaa !37
  %30 = load i64, ptr %23, align 8, !tbaa !18
  %31 = add i64 %29, %19
  br label %32

32:                                               ; preds = %26, %2
  %33 = phi i64 [ %22, %2 ], [ %31, %26 ]
  %34 = phi i64 [ %24, %2 ], [ %30, %26 ]
  %35 = phi i64 [ %21, %2 ], [ %29, %26 ]
  %36 = icmp ult i64 %34, %33
  br i1 %36, label %81, label %37

37:                                               ; preds = %32
  store i64 %33, ptr %20, align 8, !tbaa !37
  %38 = load ptr, ptr %3, align 8, !tbaa !17
  %39 = getelementptr inbounds nuw i8, ptr %38, i64 %35
  %40 = icmp eq ptr %38, null
  br i1 %40, label %81, label %41

41:                                               ; preds = %37
  br i1 %4, label %42, label %44

42:                                               ; preds = %41
  %43 = getelementptr inbounds nuw i8, ptr %39, i64 1
  store i8 45, ptr %39, align 1, !tbaa !10
  br label %44

44:                                               ; preds = %41, %42
  %45 = phi ptr [ %43, %42 ], [ %39, %41 ]
  %46 = icmp sgt i64 %13, -1
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = icmp ugt i32 %5, 99
  br i1 %48, label %50, label %63

49:                                               ; preds = %44
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

50:                                               ; preds = %47, %50
  %51 = phi i32 [ %53, %50 ], [ %15, %47 ]
  %52 = phi i32 [ %61, %50 ], [ %5, %47 ]
  %53 = add i32 %51, -2
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds nuw i8, ptr %45, i64 %54
  %56 = urem i32 %52, 100
  %57 = shl nuw nsw i32 %56, 1
  %58 = zext nneg i32 %57 to i64
  %59 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %58
  %60 = load i16, ptr %59, align 2
  store i16 %60, ptr %55, align 1
  %61 = udiv i32 %52, 100
  %62 = icmp ugt i32 %52, 9999
  br i1 %62, label %50, label %63, !llvm.loop !70

63:                                               ; preds = %50, %47
  %64 = phi i32 [ %5, %47 ], [ %61, %50 ]
  %65 = phi i32 [ %15, %47 ], [ %53, %50 ]
  %66 = icmp samesign ugt i32 %64, 9
  br i1 %66, label %67, label %75

67:                                               ; preds = %63
  %68 = add i32 %65, -2
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds nuw i8, ptr %45, i64 %69
  %71 = shl nuw nsw i32 %64, 1
  %72 = zext nneg i32 %71 to i64
  %73 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %72
  %74 = load i16, ptr %73, align 2
  store i16 %74, ptr %70, align 1
  br label %98

75:                                               ; preds = %63
  %76 = trunc nuw i32 %64 to i8
  %77 = or disjoint i8 %76, 48
  %78 = add i32 %65, -1
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds nuw i8, ptr %45, i64 %79
  store i8 %77, ptr %80, align 1, !tbaa !10
  br label %98

81:                                               ; preds = %32, %37
  %82 = phi i64 [ %35, %32 ], [ %33, %37 ]
  br i1 %4, label %83, label %96

83:                                               ; preds = %81
  %84 = add i64 %82, 1
  %85 = icmp ugt i64 %84, %34
  br i1 %85, label %86, label %91

86:                                               ; preds = %83
  %87 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %88 = load ptr, ptr %87, align 8, !tbaa !13
  tail call void %88(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %84)
  %89 = load i64, ptr %20, align 8, !tbaa !37
  %90 = add i64 %89, 1
  br label %91

91:                                               ; preds = %83, %86
  %92 = phi i64 [ %84, %83 ], [ %90, %86 ]
  %93 = phi i64 [ %82, %83 ], [ %89, %86 ]
  %94 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %92, ptr %20, align 8, !tbaa !37
  %95 = getelementptr inbounds nuw i8, ptr %94, i64 %93
  store i8 45, ptr %95, align 1, !tbaa !10
  br label %96

96:                                               ; preds = %91, %81
  %97 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i32 noundef %5, i32 noundef %15)
  br label %98

98:                                               ; preds = %67, %75, %96
  %99 = phi i64 [ %97, %96 ], [ %0, %75 ], [ %0, %67 ]
  ret i64 %99
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca [10 x i8], align 1
  %5 = icmp sgt i32 %2, -1
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

7:                                                ; preds = %3
  %8 = zext nneg i32 %2 to i64
  %9 = inttoptr i64 %0 to ptr
  %10 = getelementptr inbounds nuw i8, ptr %9, i64 8
  %11 = load i64, ptr %10, align 8, !tbaa !37
  %12 = add i64 %11, %8
  %13 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %14 = load i64, ptr %13, align 8, !tbaa !18
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %7
  %17 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  tail call void %18(ptr noundef nonnull align 8 dereferenceable(32) %9, i64 noundef %12)
  %19 = load i64, ptr %10, align 8, !tbaa !37
  %20 = load i64, ptr %13, align 8, !tbaa !18
  %21 = add i64 %19, %8
  br label %22

22:                                               ; preds = %16, %7
  %23 = phi i64 [ %12, %7 ], [ %21, %16 ]
  %24 = phi i64 [ %14, %7 ], [ %20, %16 ]
  %25 = phi i64 [ %11, %7 ], [ %19, %16 ]
  %26 = icmp ult i64 %24, %23
  br i1 %26, label %77, label %27

27:                                               ; preds = %22
  store i64 %23, ptr %10, align 8, !tbaa !37
  %28 = load ptr, ptr %9, align 8, !tbaa !17
  %29 = getelementptr inbounds nuw i8, ptr %28, i64 %25
  %30 = icmp eq ptr %28, null
  br i1 %30, label %77, label %31

31:                                               ; preds = %27
  %32 = or i32 %1, 1
  %33 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %32, i1 true)
  %34 = xor i32 %33, 31
  %35 = zext nneg i32 %34 to i64
  %36 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !20
  %38 = zext i32 %1 to i64
  %39 = add i64 %37, %38
  %40 = lshr i64 %39, 32
  %41 = trunc nuw i64 %40 to i32
  %42 = icmp slt i32 %2, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %31
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

44:                                               ; preds = %31
  %45 = icmp ugt i32 %1, 99
  br i1 %45, label %46, label %59

46:                                               ; preds = %44, %46
  %47 = phi i32 [ %49, %46 ], [ %2, %44 ]
  %48 = phi i32 [ %57, %46 ], [ %1, %44 ]
  %49 = add i32 %47, -2
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds nuw i8, ptr %29, i64 %50
  %52 = urem i32 %48, 100
  %53 = shl nuw nsw i32 %52, 1
  %54 = zext nneg i32 %53 to i64
  %55 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %54
  %56 = load i16, ptr %55, align 2
  store i16 %56, ptr %51, align 1
  %57 = udiv i32 %48, 100
  %58 = icmp ugt i32 %48, 9999
  br i1 %58, label %46, label %59, !llvm.loop !70

59:                                               ; preds = %46, %44
  %60 = phi i32 [ %1, %44 ], [ %57, %46 ]
  %61 = phi i32 [ %2, %44 ], [ %49, %46 ]
  %62 = icmp samesign ugt i32 %60, 9
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = add i32 %61, -2
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds nuw i8, ptr %29, i64 %65
  %67 = shl nuw nsw i32 %60, 1
  %68 = zext nneg i32 %67 to i64
  %69 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %68
  %70 = load i16, ptr %69, align 2
  store i16 %70, ptr %66, align 1
  br label %126

71:                                               ; preds = %59
  %72 = trunc nuw i32 %60 to i8
  %73 = or disjoint i8 %72, 48
  %74 = add i32 %61, -1
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds nuw i8, ptr %29, i64 %75
  store i8 %73, ptr %76, align 1, !tbaa !10
  br label %126

77:                                               ; preds = %22, %27
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %4) #30
  %78 = or i32 %1, 1
  %79 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %78, i1 true)
  %80 = xor i32 %79, 31
  %81 = zext nneg i32 %80 to i64
  %82 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !20
  %84 = zext i32 %1 to i64
  %85 = add i64 %83, %84
  %86 = lshr i64 %85, 32
  %87 = trunc nuw i64 %86 to i32
  %88 = icmp slt i32 %2, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %77
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

90:                                               ; preds = %77
  %91 = icmp ugt i32 %1, 99
  br i1 %91, label %92, label %105

92:                                               ; preds = %90, %92
  %93 = phi i32 [ %95, %92 ], [ %2, %90 ]
  %94 = phi i32 [ %103, %92 ], [ %1, %90 ]
  %95 = add i32 %93, -2
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds nuw i8, ptr %4, i64 %96
  %98 = urem i32 %94, 100
  %99 = shl nuw nsw i32 %98, 1
  %100 = zext nneg i32 %99 to i64
  %101 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %100
  %102 = load i16, ptr %101, align 2
  store i16 %102, ptr %97, align 1
  %103 = udiv i32 %94, 100
  %104 = icmp ugt i32 %94, 9999
  br i1 %104, label %92, label %105, !llvm.loop !70

105:                                              ; preds = %92, %90
  %106 = phi i32 [ %1, %90 ], [ %103, %92 ]
  %107 = phi i32 [ %2, %90 ], [ %95, %92 ]
  %108 = icmp samesign ugt i32 %106, 9
  br i1 %108, label %109, label %117

109:                                              ; preds = %105
  %110 = add i32 %107, -2
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds nuw i8, ptr %4, i64 %111
  %113 = shl nuw nsw i32 %106, 1
  %114 = zext nneg i32 %113 to i64
  %115 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %114
  %116 = load i16, ptr %115, align 2
  store i16 %116, ptr %112, align 1
  br label %123

117:                                              ; preds = %105
  %118 = trunc nuw i32 %106 to i8
  %119 = or disjoint i8 %118, 48
  %120 = add i32 %107, -1
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds nuw i8, ptr %4, i64 %121
  store i8 %119, ptr %122, align 1, !tbaa !10
  br label %123

123:                                              ; preds = %109, %117
  %124 = getelementptr inbounds nuw i8, ptr %4, i64 %8
  %125 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %4, ptr noundef nonnull %124, i64 %0)
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %4) #30
  br label %126

126:                                              ; preds = %63, %71, %123
  %127 = phi i64 [ %125, %123 ], [ %0, %71 ], [ %0, %63 ]
  ret i64 %127
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #16

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef %0, ptr noundef %1, i64 %2) local_unnamed_addr #17 comdat {
  %4 = inttoptr i64 %2 to ptr
  %5 = icmp eq ptr %0, %1
  br i1 %5, label %115, label %6

6:                                                ; preds = %3
  %7 = ptrtoint ptr %1 to i64
  %8 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %9 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %4, i64 24
  br label %11

11:                                               ; preds = %91, %6
  %12 = phi ptr [ %0, %6 ], [ %94, %91 ]
  %13 = ptrtoint ptr %12 to i64
  %14 = sub i64 %7, %13
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

17:                                               ; preds = %11
  %18 = load i64, ptr %8, align 8, !tbaa !37
  %19 = add i64 %18, %14
  %20 = load i64, ptr %9, align 8, !tbaa !18
  %21 = icmp ugt i64 %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void %23(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %19)
  %24 = load i64, ptr %9, align 8, !tbaa !18
  %25 = load i64, ptr %8, align 8, !tbaa !37
  br label %26

26:                                               ; preds = %22, %17
  %27 = phi i64 [ %18, %17 ], [ %25, %22 ]
  %28 = phi i64 [ %20, %17 ], [ %24, %22 ]
  %29 = sub i64 %28, %27
  %30 = tail call i64 @llvm.umin.i64(i64 %29, i64 %14)
  %31 = load ptr, ptr %4, align 8, !tbaa !17
  %32 = ptrtoint ptr %31 to i64
  %33 = getelementptr inbounds nuw i8, ptr %31, i64 %27
  %34 = icmp eq i64 %30, 0
  br i1 %34, label %91, label %35

35:                                               ; preds = %26
  %36 = icmp ult i64 %30, 4
  br i1 %36, label %37, label %54

37:                                               ; preds = %74, %87, %54, %35
  %38 = phi i64 [ %61, %74 ], [ 0, %35 ], [ 0, %54 ], [ %79, %87 ]
  %39 = and i64 %30, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %37, %41
  %42 = phi i64 [ %47, %41 ], [ %38, %37 ]
  %43 = phi i64 [ %48, %41 ], [ 0, %37 ]
  %44 = getelementptr inbounds nuw i8, ptr %12, i64 %42
  %45 = load i8, ptr %44, align 1, !tbaa !10
  %46 = getelementptr inbounds nuw i8, ptr %33, i64 %42
  store i8 %45, ptr %46, align 1, !tbaa !10
  %47 = add nuw i64 %42, 1
  %48 = add i64 %43, 1
  %49 = icmp eq i64 %48, %39
  br i1 %49, label %50, label %41, !llvm.loop !71

50:                                               ; preds = %41, %37
  %51 = phi i64 [ %38, %37 ], [ %47, %41 ]
  %52 = sub nsw i64 %38, %30
  %53 = icmp ugt i64 %52, -4
  br i1 %53, label %89, label %96

54:                                               ; preds = %35
  %55 = add i64 %27, %32
  %56 = sub i64 %55, %13
  %57 = icmp ult i64 %56, 32
  br i1 %57, label %37, label %58

58:                                               ; preds = %54
  %59 = icmp ult i64 %30, 32
  br i1 %59, label %77, label %60

60:                                               ; preds = %58
  %61 = and i64 %30, 9223372036854775776
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %70, %62 ]
  %64 = getelementptr inbounds nuw i8, ptr %12, i64 %63
  %65 = getelementptr inbounds nuw i8, ptr %64, i64 16
  %66 = load <16 x i8>, ptr %64, align 1, !tbaa !10
  %67 = load <16 x i8>, ptr %65, align 1, !tbaa !10
  %68 = getelementptr inbounds nuw i8, ptr %33, i64 %63
  %69 = getelementptr inbounds nuw i8, ptr %68, i64 16
  store <16 x i8> %66, ptr %68, align 1, !tbaa !10
  store <16 x i8> %67, ptr %69, align 1, !tbaa !10
  %70 = add nuw i64 %63, 32
  %71 = icmp eq i64 %70, %61
  br i1 %71, label %72, label %62, !llvm.loop !73

72:                                               ; preds = %62
  %73 = icmp eq i64 %30, %61
  br i1 %73, label %89, label %74

74:                                               ; preds = %72
  %75 = and i64 %30, 28
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %37, label %77

77:                                               ; preds = %74, %58
  %78 = phi i64 [ %61, %74 ], [ 0, %58 ]
  %79 = and i64 %30, 9223372036854775804
  br label %80

80:                                               ; preds = %80, %77
  %81 = phi i64 [ %78, %77 ], [ %85, %80 ]
  %82 = getelementptr inbounds nuw i8, ptr %12, i64 %81
  %83 = load <4 x i8>, ptr %82, align 1, !tbaa !10
  %84 = getelementptr inbounds nuw i8, ptr %33, i64 %81
  store <4 x i8> %83, ptr %84, align 1, !tbaa !10
  %85 = add nuw i64 %81, 4
  %86 = icmp eq i64 %85, %79
  br i1 %86, label %87, label %80, !llvm.loop !76

87:                                               ; preds = %80
  %88 = icmp eq i64 %30, %79
  br i1 %88, label %89, label %37

89:                                               ; preds = %50, %96, %87, %72
  %90 = load i64, ptr %8, align 8, !tbaa !37
  br label %91

91:                                               ; preds = %89, %26
  %92 = phi i64 [ %90, %89 ], [ %27, %26 ]
  %93 = add i64 %92, %30
  store i64 %93, ptr %8, align 8, !tbaa !37
  %94 = getelementptr inbounds nuw i8, ptr %12, i64 %30
  %95 = icmp eq ptr %94, %1
  br i1 %95, label %115, label %11, !llvm.loop !77

96:                                               ; preds = %50, %96
  %97 = phi i64 [ %113, %96 ], [ %51, %50 ]
  %98 = getelementptr inbounds nuw i8, ptr %12, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !10
  %100 = getelementptr inbounds nuw i8, ptr %33, i64 %97
  store i8 %99, ptr %100, align 1, !tbaa !10
  %101 = add nuw i64 %97, 1
  %102 = getelementptr inbounds nuw i8, ptr %12, i64 %101
  %103 = load i8, ptr %102, align 1, !tbaa !10
  %104 = getelementptr inbounds nuw i8, ptr %33, i64 %101
  store i8 %103, ptr %104, align 1, !tbaa !10
  %105 = add nuw i64 %97, 2
  %106 = getelementptr inbounds nuw i8, ptr %12, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !10
  %108 = getelementptr inbounds nuw i8, ptr %33, i64 %105
  store i8 %107, ptr %108, align 1, !tbaa !10
  %109 = add nuw i64 %97, 3
  %110 = getelementptr inbounds nuw i8, ptr %12, i64 %109
  %111 = load i8, ptr %110, align 1, !tbaa !10
  %112 = getelementptr inbounds nuw i8, ptr %33, i64 %109
  store i8 %111, ptr %112, align 1, !tbaa !10
  %113 = add nuw i64 %97, 4
  %114 = icmp eq i64 %113, %30
  br i1 %114, label %89, label %96, !llvm.loop !78

115:                                              ; preds = %91, %3
  ret i64 %2
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEjTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %0, i32 noundef %1) local_unnamed_addr #0 comdat {
  %3 = inttoptr i64 %0 to ptr
  %4 = or i32 %1, 1
  %5 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %4, i1 true)
  %6 = xor i32 %5, 31
  %7 = zext nneg i32 %6 to i64
  %8 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %7
  %9 = load i64, ptr %8, align 8, !tbaa !20
  %10 = zext i32 %1 to i64
  %11 = add i64 %9, %10
  %12 = lshr i64 %11, 32
  %13 = trunc nuw i64 %12 to i32
  %14 = ashr i64 %11, 32
  %15 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %16 = load i64, ptr %15, align 8, !tbaa !37
  %17 = add i64 %14, %16
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %19 = load i64, ptr %18, align 8, !tbaa !18
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %2
  %22 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %23 = load ptr, ptr %22, align 8, !tbaa !13
  tail call void %23(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %17)
  %24 = load i64, ptr %15, align 8, !tbaa !37
  %25 = load i64, ptr %18, align 8, !tbaa !18
  %26 = add i64 %24, %14
  br label %27

27:                                               ; preds = %21, %2
  %28 = phi i64 [ %17, %2 ], [ %26, %21 ]
  %29 = phi i64 [ %19, %2 ], [ %25, %21 ]
  %30 = phi i64 [ %16, %2 ], [ %24, %21 ]
  %31 = icmp ult i64 %29, %28
  br i1 %31, label %72, label %32

32:                                               ; preds = %27
  store i64 %28, ptr %15, align 8, !tbaa !37
  %33 = load ptr, ptr %3, align 8, !tbaa !17
  %34 = getelementptr inbounds nuw i8, ptr %33, i64 %30
  %35 = icmp eq ptr %33, null
  br i1 %35, label %72, label %36

36:                                               ; preds = %32
  %37 = icmp sgt i64 %11, -1
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = icmp ugt i32 %1, 99
  br i1 %39, label %41, label %54

40:                                               ; preds = %36
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

41:                                               ; preds = %38, %41
  %42 = phi i32 [ %44, %41 ], [ %13, %38 ]
  %43 = phi i32 [ %52, %41 ], [ %1, %38 ]
  %44 = add i32 %42, -2
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds nuw i8, ptr %34, i64 %45
  %47 = urem i32 %43, 100
  %48 = shl nuw nsw i32 %47, 1
  %49 = zext nneg i32 %48 to i64
  %50 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %49
  %51 = load i16, ptr %50, align 2
  store i16 %51, ptr %46, align 1
  %52 = udiv i32 %43, 100
  %53 = icmp ugt i32 %43, 9999
  br i1 %53, label %41, label %54, !llvm.loop !70

54:                                               ; preds = %41, %38
  %55 = phi i32 [ %1, %38 ], [ %52, %41 ]
  %56 = phi i32 [ %13, %38 ], [ %44, %41 ]
  %57 = icmp samesign ugt i32 %55, 9
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = add i32 %56, -2
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds nuw i8, ptr %34, i64 %60
  %62 = shl nuw nsw i32 %55, 1
  %63 = zext nneg i32 %62 to i64
  %64 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %63
  %65 = load i16, ptr %64, align 2
  store i16 %65, ptr %61, align 1
  br label %74

66:                                               ; preds = %54
  %67 = trunc nuw i32 %55 to i8
  %68 = or disjoint i8 %67, 48
  %69 = add i32 %56, -1
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds nuw i8, ptr %34, i64 %70
  store i8 %68, ptr %71, align 1, !tbaa !10
  br label %74

72:                                               ; preds = %27, %32
  %73 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i32 noundef %1, i32 noundef %13)
  br label %74

74:                                               ; preds = %58, %66, %72
  %75 = phi i64 [ %73, %72 ], [ %0, %66 ], [ %0, %58 ]
  ret i64 %75
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEExTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %0, i64 noundef %1) local_unnamed_addr #0 comdat {
  %3 = inttoptr i64 %0 to ptr
  %4 = icmp slt i64 %1, 0
  %5 = tail call i64 @llvm.abs.i64(i64 %1, i1 false)
  %6 = or i64 %5, 1
  %7 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %6, i1 true)
  %8 = xor i64 %7, 63
  %9 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !10
  %11 = zext i8 %10 to i32
  %12 = zext i8 %10 to i64
  %13 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %12
  %14 = load i64, ptr %13, align 8, !tbaa !20
  %15 = icmp ult i64 %5, %14
  %16 = sext i1 %15 to i32
  %17 = add nsw i32 %16, %11
  %18 = lshr i64 %1, 63
  %19 = sext i32 %17 to i64
  %20 = add nsw i64 %18, %19
  %21 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %22 = load i64, ptr %21, align 8, !tbaa !37
  %23 = add i64 %20, %22
  %24 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %25 = load i64, ptr %24, align 8, !tbaa !18
  %26 = icmp ugt i64 %23, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %2
  %28 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %29 = load ptr, ptr %28, align 8, !tbaa !13
  tail call void %29(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %23)
  %30 = load i64, ptr %21, align 8, !tbaa !37
  %31 = load i64, ptr %24, align 8, !tbaa !18
  %32 = add i64 %30, %20
  br label %33

33:                                               ; preds = %27, %2
  %34 = phi i64 [ %23, %2 ], [ %32, %27 ]
  %35 = phi i64 [ %25, %2 ], [ %31, %27 ]
  %36 = phi i64 [ %22, %2 ], [ %30, %27 ]
  %37 = icmp ult i64 %35, %34
  br i1 %37, label %80, label %38

38:                                               ; preds = %33
  store i64 %34, ptr %21, align 8, !tbaa !37
  %39 = load ptr, ptr %3, align 8, !tbaa !17
  %40 = getelementptr inbounds nuw i8, ptr %39, i64 %36
  %41 = icmp eq ptr %39, null
  br i1 %41, label %80, label %42

42:                                               ; preds = %38
  br i1 %4, label %43, label %45

43:                                               ; preds = %42
  %44 = getelementptr inbounds nuw i8, ptr %40, i64 1
  store i8 45, ptr %40, align 1, !tbaa !10
  br label %45

45:                                               ; preds = %42, %43
  %46 = phi ptr [ %44, %43 ], [ %40, %42 ]
  %47 = icmp sgt i32 %17, -1
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = icmp ugt i64 %5, 99
  br i1 %49, label %51, label %63

50:                                               ; preds = %45
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

51:                                               ; preds = %48, %51
  %52 = phi i32 [ %54, %51 ], [ %17, %48 ]
  %53 = phi i64 [ %61, %51 ], [ %5, %48 ]
  %54 = add i32 %52, -2
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds nuw i8, ptr %46, i64 %55
  %57 = urem i64 %53, 100
  %58 = shl nuw nsw i64 %57, 1
  %59 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %58
  %60 = load i16, ptr %59, align 2
  store i16 %60, ptr %56, align 1
  %61 = udiv i64 %53, 100
  %62 = icmp ugt i64 %53, 9999
  br i1 %62, label %51, label %63, !llvm.loop !79

63:                                               ; preds = %51, %48
  %64 = phi i64 [ %5, %48 ], [ %61, %51 ]
  %65 = phi i32 [ %17, %48 ], [ %54, %51 ]
  %66 = icmp samesign ugt i64 %64, 9
  br i1 %66, label %67, label %74

67:                                               ; preds = %63
  %68 = add i32 %65, -2
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds nuw i8, ptr %46, i64 %69
  %71 = shl nuw nsw i64 %64, 1
  %72 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %71
  %73 = load i16, ptr %72, align 2
  store i16 %73, ptr %70, align 1
  br label %97

74:                                               ; preds = %63
  %75 = trunc nuw i64 %64 to i8
  %76 = or disjoint i8 %75, 48
  %77 = add i32 %65, -1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds nuw i8, ptr %46, i64 %78
  store i8 %76, ptr %79, align 1, !tbaa !10
  br label %97

80:                                               ; preds = %33, %38
  %81 = phi i64 [ %36, %33 ], [ %34, %38 ]
  br i1 %4, label %82, label %95

82:                                               ; preds = %80
  %83 = add i64 %81, 1
  %84 = icmp ugt i64 %83, %35
  br i1 %84, label %85, label %90

85:                                               ; preds = %82
  %86 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  tail call void %87(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %83)
  %88 = load i64, ptr %21, align 8, !tbaa !37
  %89 = add i64 %88, 1
  br label %90

90:                                               ; preds = %82, %85
  %91 = phi i64 [ %83, %82 ], [ %89, %85 ]
  %92 = phi i64 [ %81, %82 ], [ %88, %85 ]
  %93 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %91, ptr %21, align 8, !tbaa !37
  %94 = getelementptr inbounds nuw i8, ptr %93, i64 %92
  store i8 45, ptr %94, align 1, !tbaa !10
  br label %95

95:                                               ; preds = %90, %80
  %96 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i64 noundef %5, i32 noundef %17)
  br label %97

97:                                               ; preds = %67, %74, %95
  %98 = phi i64 [ %96, %95 ], [ %0, %74 ], [ %0, %67 ]
  ret i64 %98
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca [20 x i8], align 16
  %5 = icmp sgt i32 %2, -1
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

7:                                                ; preds = %3
  %8 = zext nneg i32 %2 to i64
  %9 = inttoptr i64 %0 to ptr
  %10 = getelementptr inbounds nuw i8, ptr %9, i64 8
  %11 = load i64, ptr %10, align 8, !tbaa !37
  %12 = add i64 %11, %8
  %13 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %14 = load i64, ptr %13, align 8, !tbaa !18
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %7
  %17 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  tail call void %18(ptr noundef nonnull align 8 dereferenceable(32) %9, i64 noundef %12)
  %19 = load i64, ptr %10, align 8, !tbaa !37
  %20 = load i64, ptr %13, align 8, !tbaa !18
  %21 = add i64 %19, %8
  br label %22

22:                                               ; preds = %16, %7
  %23 = phi i64 [ %12, %7 ], [ %21, %16 ]
  %24 = phi i64 [ %14, %7 ], [ %20, %16 ]
  %25 = phi i64 [ %11, %7 ], [ %19, %16 ]
  %26 = icmp ult i64 %24, %23
  br i1 %26, label %77, label %27

27:                                               ; preds = %22
  store i64 %23, ptr %10, align 8, !tbaa !37
  %28 = load ptr, ptr %9, align 8, !tbaa !17
  %29 = getelementptr inbounds nuw i8, ptr %28, i64 %25
  %30 = icmp eq ptr %28, null
  br i1 %30, label %77, label %31

31:                                               ; preds = %27
  %32 = or i64 %1, 1
  %33 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %32, i1 true)
  %34 = xor i64 %33, 63
  %35 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !10
  %37 = zext i8 %36 to i32
  %38 = zext i8 %36 to i64
  %39 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %38
  %40 = load i64, ptr %39, align 8, !tbaa !20
  %41 = icmp ult i64 %1, %40
  %42 = sext i1 %41 to i32
  %43 = add nsw i32 %42, %37
  %44 = icmp slt i32 %2, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %31
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

46:                                               ; preds = %31
  %47 = icmp ugt i64 %1, 99
  br i1 %47, label %48, label %60

48:                                               ; preds = %46, %48
  %49 = phi i32 [ %51, %48 ], [ %2, %46 ]
  %50 = phi i64 [ %58, %48 ], [ %1, %46 ]
  %51 = add i32 %49, -2
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds nuw i8, ptr %29, i64 %52
  %54 = urem i64 %50, 100
  %55 = shl nuw nsw i64 %54, 1
  %56 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %55
  %57 = load i16, ptr %56, align 2
  store i16 %57, ptr %53, align 1
  %58 = udiv i64 %50, 100
  %59 = icmp ugt i64 %50, 9999
  br i1 %59, label %48, label %60, !llvm.loop !79

60:                                               ; preds = %48, %46
  %61 = phi i64 [ %1, %46 ], [ %58, %48 ]
  %62 = phi i32 [ %2, %46 ], [ %51, %48 ]
  %63 = icmp samesign ugt i64 %61, 9
  br i1 %63, label %64, label %71

64:                                               ; preds = %60
  %65 = add i32 %62, -2
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds nuw i8, ptr %29, i64 %66
  %68 = shl nuw nsw i64 %61, 1
  %69 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %68
  %70 = load i16, ptr %69, align 2
  store i16 %70, ptr %67, align 1
  br label %126

71:                                               ; preds = %60
  %72 = trunc nuw i64 %61 to i8
  %73 = or disjoint i8 %72, 48
  %74 = add i32 %62, -1
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds nuw i8, ptr %29, i64 %75
  store i8 %73, ptr %76, align 1, !tbaa !10
  br label %126

77:                                               ; preds = %22, %27
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #30
  %78 = or i64 %1, 1
  %79 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %78, i1 true)
  %80 = xor i64 %79, 63
  %81 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !10
  %83 = zext i8 %82 to i32
  %84 = zext i8 %82 to i64
  %85 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %84
  %86 = load i64, ptr %85, align 8, !tbaa !20
  %87 = icmp ult i64 %1, %86
  %88 = sext i1 %87 to i32
  %89 = add nsw i32 %88, %83
  %90 = icmp slt i32 %2, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %77
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

92:                                               ; preds = %77
  %93 = icmp ugt i64 %1, 99
  br i1 %93, label %94, label %106

94:                                               ; preds = %92, %94
  %95 = phi i32 [ %97, %94 ], [ %2, %92 ]
  %96 = phi i64 [ %104, %94 ], [ %1, %92 ]
  %97 = add i32 %95, -2
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds nuw i8, ptr %4, i64 %98
  %100 = urem i64 %96, 100
  %101 = shl nuw nsw i64 %100, 1
  %102 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %101
  %103 = load i16, ptr %102, align 2
  store i16 %103, ptr %99, align 1
  %104 = udiv i64 %96, 100
  %105 = icmp ugt i64 %96, 9999
  br i1 %105, label %94, label %106, !llvm.loop !79

106:                                              ; preds = %94, %92
  %107 = phi i64 [ %1, %92 ], [ %104, %94 ]
  %108 = phi i32 [ %2, %92 ], [ %97, %94 ]
  %109 = icmp samesign ugt i64 %107, 9
  br i1 %109, label %110, label %117

110:                                              ; preds = %106
  %111 = add i32 %108, -2
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds nuw i8, ptr %4, i64 %112
  %114 = shl nuw nsw i64 %107, 1
  %115 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %114
  %116 = load i16, ptr %115, align 2
  store i16 %116, ptr %113, align 1
  br label %123

117:                                              ; preds = %106
  %118 = trunc nuw i64 %107 to i8
  %119 = or disjoint i8 %118, 48
  %120 = add i32 %108, -1
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds nuw i8, ptr %4, i64 %121
  store i8 %119, ptr %122, align 1, !tbaa !10
  br label %123

123:                                              ; preds = %110, %117
  %124 = getelementptr inbounds nuw i8, ptr %4, i64 %8
  %125 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %4, ptr noundef nonnull %124, i64 %0)
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #30
  br label %126

126:                                              ; preds = %64, %71, %123
  %127 = phi i64 [ %125, %123 ], [ %0, %71 ], [ %0, %64 ]
  ret i64 %127
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #16

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEyTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %0, i64 noundef %1) local_unnamed_addr #0 comdat {
  %3 = inttoptr i64 %0 to ptr
  %4 = or i64 %1, 1
  %5 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %4, i1 true)
  %6 = xor i64 %5, 63
  %7 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %6
  %8 = load i8, ptr %7, align 1, !tbaa !10
  %9 = zext i8 %8 to i32
  %10 = zext i8 %8 to i64
  %11 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %10
  %12 = load i64, ptr %11, align 8, !tbaa !20
  %13 = icmp ult i64 %1, %12
  %14 = sext i1 %13 to i32
  %15 = add nsw i32 %14, %9
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %18 = load i64, ptr %17, align 8, !tbaa !37
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %21 = load i64, ptr %20, align 8, !tbaa !18
  %22 = icmp ugt i64 %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %2
  %24 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  tail call void %25(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %19)
  %26 = load i64, ptr %17, align 8, !tbaa !37
  %27 = load i64, ptr %20, align 8, !tbaa !18
  %28 = add i64 %26, %16
  br label %29

29:                                               ; preds = %23, %2
  %30 = phi i64 [ %19, %2 ], [ %28, %23 ]
  %31 = phi i64 [ %21, %2 ], [ %27, %23 ]
  %32 = phi i64 [ %18, %2 ], [ %26, %23 ]
  %33 = icmp ult i64 %31, %30
  br i1 %33, label %72, label %34

34:                                               ; preds = %29
  store i64 %30, ptr %17, align 8, !tbaa !37
  %35 = load ptr, ptr %3, align 8, !tbaa !17
  %36 = getelementptr inbounds nuw i8, ptr %35, i64 %32
  %37 = icmp eq ptr %35, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %34
  %39 = icmp sgt i32 %15, -1
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = icmp ugt i64 %1, 99
  br i1 %41, label %43, label %55

42:                                               ; preds = %38
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

43:                                               ; preds = %40, %43
  %44 = phi i32 [ %46, %43 ], [ %15, %40 ]
  %45 = phi i64 [ %53, %43 ], [ %1, %40 ]
  %46 = add i32 %44, -2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds nuw i8, ptr %36, i64 %47
  %49 = urem i64 %45, 100
  %50 = shl nuw nsw i64 %49, 1
  %51 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %50
  %52 = load i16, ptr %51, align 2
  store i16 %52, ptr %48, align 1
  %53 = udiv i64 %45, 100
  %54 = icmp ugt i64 %45, 9999
  br i1 %54, label %43, label %55, !llvm.loop !79

55:                                               ; preds = %43, %40
  %56 = phi i64 [ %1, %40 ], [ %53, %43 ]
  %57 = phi i32 [ %15, %40 ], [ %46, %43 ]
  %58 = icmp samesign ugt i64 %56, 9
  br i1 %58, label %59, label %66

59:                                               ; preds = %55
  %60 = add i32 %57, -2
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds nuw i8, ptr %36, i64 %61
  %63 = shl nuw nsw i64 %56, 1
  %64 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %63
  %65 = load i16, ptr %64, align 2
  store i16 %65, ptr %62, align 1
  br label %74

66:                                               ; preds = %55
  %67 = trunc nuw i64 %56 to i8
  %68 = or disjoint i8 %67, 48
  %69 = add i32 %57, -1
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds nuw i8, ptr %36, i64 %70
  store i8 %68, ptr %71, align 1, !tbaa !10
  br label %74

72:                                               ; preds = %29, %34
  %73 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i64 noundef %1, i32 noundef %15)
  br label %74

74:                                               ; preds = %59, %66, %72
  %75 = phi i64 [ %73, %72 ], [ %0, %66 ], [ %0, %59 ]
  ret i64 %75
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEnTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %0, ptr noundef %1) local_unnamed_addr #0 comdat {
  %3 = alloca i128, align 16
  %4 = inttoptr i64 %0 to ptr
  %5 = load i128, ptr %1, align 16, !tbaa !49
  %6 = icmp slt i128 %5, 0
  %7 = tail call i128 @llvm.abs.i128(i128 %5, i1 false)
  %8 = icmp ult i128 %7, 10
  br i1 %8, label %27, label %9

9:                                                ; preds = %2, %23
  %10 = phi i32 [ %25, %23 ], [ 1, %2 ]
  %11 = phi i128 [ %24, %23 ], [ %7, %2 ]
  %12 = icmp ult i128 %11, 100
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = add nuw nsw i32 %10, 1
  br label %27

15:                                               ; preds = %9
  %16 = icmp ult i128 %11, 1000
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = add nuw nsw i32 %10, 2
  br label %27

19:                                               ; preds = %15
  %20 = icmp ult i128 %11, 10000
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %10, 3
  br label %27

23:                                               ; preds = %19
  %24 = udiv i128 %11, 10000
  %25 = add nuw nsw i32 %10, 4
  %26 = icmp ult i128 %11, 100000
  br i1 %26, label %27, label %9, !llvm.loop !80

27:                                               ; preds = %23, %2, %13, %17, %21
  %28 = phi i32 [ %14, %13 ], [ %18, %17 ], [ %22, %21 ], [ 1, %2 ], [ %25, %23 ]
  %29 = lshr i128 %5, 127
  %30 = trunc nuw nsw i128 %29 to i64
  %31 = sext i32 %28 to i64
  %32 = add nsw i64 %31, %30
  %33 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %34 = load i64, ptr %33, align 8, !tbaa !37
  %35 = add i64 %32, %34
  %36 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %37 = load i64, ptr %36, align 8, !tbaa !18
  %38 = icmp ugt i64 %35, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %27
  %40 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %41 = load ptr, ptr %40, align 8, !tbaa !13
  tail call void %41(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %35)
  %42 = load i64, ptr %33, align 8, !tbaa !37
  %43 = load i64, ptr %36, align 8, !tbaa !18
  %44 = add i64 %42, %32
  br label %45

45:                                               ; preds = %39, %27
  %46 = phi i64 [ %35, %27 ], [ %44, %39 ]
  %47 = phi i64 [ %37, %27 ], [ %43, %39 ]
  %48 = phi i64 [ %34, %27 ], [ %42, %39 ]
  %49 = icmp ult i64 %47, %46
  br i1 %49, label %119, label %50

50:                                               ; preds = %45
  store i64 %46, ptr %33, align 8, !tbaa !37
  %51 = load ptr, ptr %4, align 8, !tbaa !17
  %52 = getelementptr inbounds nuw i8, ptr %51, i64 %48
  %53 = icmp eq ptr %51, null
  br i1 %53, label %119, label %54

54:                                               ; preds = %50
  br i1 %6, label %55, label %57

55:                                               ; preds = %54
  %56 = getelementptr inbounds nuw i8, ptr %52, i64 1
  store i8 45, ptr %52, align 1, !tbaa !10
  br label %57

57:                                               ; preds = %55, %54
  %58 = phi ptr [ %56, %55 ], [ %52, %54 ]
  br i1 %8, label %77, label %59

59:                                               ; preds = %57, %73
  %60 = phi i32 [ %75, %73 ], [ 1, %57 ]
  %61 = phi i128 [ %74, %73 ], [ %7, %57 ]
  %62 = icmp ult i128 %61, 100
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = add nuw nsw i32 %60, 1
  br label %77

65:                                               ; preds = %59
  %66 = icmp ult i128 %61, 1000
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = add nuw nsw i32 %60, 2
  br label %77

69:                                               ; preds = %65
  %70 = icmp ult i128 %61, 10000
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = add nuw nsw i32 %60, 3
  br label %77

73:                                               ; preds = %69
  %74 = udiv i128 %61, 10000
  %75 = add nuw nsw i32 %60, 4
  %76 = icmp ult i128 %61, 100000
  br i1 %76, label %77, label %59, !llvm.loop !80

77:                                               ; preds = %73, %71, %67, %63, %57
  %78 = phi i32 [ %64, %63 ], [ %68, %67 ], [ %72, %71 ], [ 1, %57 ], [ %75, %73 ]
  %79 = icmp slt i32 %28, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

81:                                               ; preds = %77
  %82 = icmp sgt i32 %28, -1
  br i1 %82, label %83, label %85

83:                                               ; preds = %81
  %84 = icmp ugt i128 %7, 99
  br i1 %84, label %86, label %101

85:                                               ; preds = %81
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

86:                                               ; preds = %83, %86
  %87 = phi i32 [ %89, %86 ], [ %28, %83 ]
  %88 = phi i128 [ %93, %86 ], [ %7, %83 ]
  %89 = add i32 %87, -2
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds nuw i8, ptr %58, i64 %90
  %92 = freeze i128 %88
  %93 = udiv i128 %92, 100
  %94 = mul i128 %93, 100
  %95 = sub i128 %92, %94
  %96 = trunc nuw nsw i128 %95 to i64
  %97 = shl nuw nsw i64 %96, 1
  %98 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %97
  %99 = load i16, ptr %98, align 2
  store i16 %99, ptr %91, align 1
  %100 = icmp ugt i128 %88, 9999
  br i1 %100, label %86, label %101, !llvm.loop !81

101:                                              ; preds = %86, %83
  %102 = phi i128 [ %7, %83 ], [ %93, %86 ]
  %103 = phi i32 [ %28, %83 ], [ %89, %86 ]
  %104 = icmp samesign ugt i128 %102, 9
  br i1 %104, label %105, label %113

105:                                              ; preds = %101
  %106 = add i32 %103, -2
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds nuw i8, ptr %58, i64 %107
  %109 = trunc nuw i128 %102 to i64
  %110 = shl nuw nsw i64 %109, 1
  %111 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %110
  %112 = load i16, ptr %111, align 2
  store i16 %112, ptr %108, align 1
  br label %136

113:                                              ; preds = %101
  %114 = trunc nuw i128 %102 to i8
  %115 = or disjoint i8 %114, 48
  %116 = add i32 %103, -1
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds nuw i8, ptr %58, i64 %117
  store i8 %115, ptr %118, align 1, !tbaa !10
  br label %136

119:                                              ; preds = %45, %50
  %120 = phi i64 [ %48, %45 ], [ %46, %50 ]
  br i1 %6, label %121, label %134

121:                                              ; preds = %119
  %122 = add i64 %120, 1
  %123 = icmp ugt i64 %122, %47
  br i1 %123, label %124, label %129

124:                                              ; preds = %121
  %125 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %126 = load ptr, ptr %125, align 8, !tbaa !13
  tail call void %126(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %122)
  %127 = load i64, ptr %33, align 8, !tbaa !37
  %128 = add i64 %127, 1
  br label %129

129:                                              ; preds = %121, %124
  %130 = phi i64 [ %122, %121 ], [ %128, %124 ]
  %131 = phi i64 [ %120, %121 ], [ %127, %124 ]
  %132 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %130, ptr %33, align 8, !tbaa !37
  %133 = getelementptr inbounds nuw i8, ptr %132, i64 %131
  store i8 45, ptr %133, align 1, !tbaa !10
  br label %134

134:                                              ; preds = %129, %119
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store i128 %7, ptr %3, align 16, !tbaa !49
  %135 = call i64 @_ZN3fmt3v116detail14format_decimalIcoNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, ptr noundef nonnull %3, i32 noundef %28)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %136

136:                                              ; preds = %105, %113, %134
  %137 = phi i64 [ %135, %134 ], [ %0, %113 ], [ %0, %105 ]
  ret i64 %137
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14format_decimalIcoNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca [39 x i8], align 16
  %5 = load i128, ptr %1, align 16, !tbaa !49
  %6 = icmp sgt i32 %2, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

8:                                                ; preds = %3
  %9 = zext nneg i32 %2 to i64
  %10 = inttoptr i64 %0 to ptr
  %11 = getelementptr inbounds nuw i8, ptr %10, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, %9
  %14 = getelementptr inbounds nuw i8, ptr %10, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %8
  %18 = getelementptr inbounds nuw i8, ptr %10, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %10, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = load i64, ptr %14, align 8, !tbaa !18
  %22 = add i64 %20, %9
  br label %23

23:                                               ; preds = %17, %8
  %24 = phi i64 [ %13, %8 ], [ %22, %17 ]
  %25 = phi i64 [ %15, %8 ], [ %21, %17 ]
  %26 = phi i64 [ %12, %8 ], [ %20, %17 ]
  %27 = icmp ult i64 %25, %24
  br i1 %27, label %91, label %28

28:                                               ; preds = %23
  store i64 %24, ptr %11, align 8, !tbaa !37
  %29 = load ptr, ptr %10, align 8, !tbaa !17
  %30 = getelementptr inbounds nuw i8, ptr %29, i64 %26
  %31 = icmp eq ptr %29, null
  br i1 %31, label %91, label %32

32:                                               ; preds = %28
  %33 = icmp ult i128 %5, 10
  br i1 %33, label %52, label %34

34:                                               ; preds = %32, %48
  %35 = phi i32 [ %50, %48 ], [ 1, %32 ]
  %36 = phi i128 [ %49, %48 ], [ %5, %32 ]
  %37 = icmp ult i128 %36, 100
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = add nuw nsw i32 %35, 1
  br label %52

40:                                               ; preds = %34
  %41 = icmp ult i128 %36, 1000
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = add nuw nsw i32 %35, 2
  br label %52

44:                                               ; preds = %40
  %45 = icmp ult i128 %36, 10000
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = add nuw nsw i32 %35, 3
  br label %52

48:                                               ; preds = %44
  %49 = udiv i128 %36, 10000
  %50 = add nuw nsw i32 %35, 4
  %51 = icmp ult i128 %36, 100000
  br i1 %51, label %52, label %34, !llvm.loop !80

52:                                               ; preds = %48, %46, %42, %38, %32
  %53 = phi i32 [ %39, %38 ], [ %43, %42 ], [ %47, %46 ], [ 1, %32 ], [ %50, %48 ]
  %54 = icmp slt i32 %2, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

56:                                               ; preds = %52
  %57 = icmp ugt i128 %5, 99
  br i1 %57, label %58, label %73

58:                                               ; preds = %56, %58
  %59 = phi i32 [ %61, %58 ], [ %2, %56 ]
  %60 = phi i128 [ %65, %58 ], [ %5, %56 ]
  %61 = add i32 %59, -2
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds nuw i8, ptr %30, i64 %62
  %64 = freeze i128 %60
  %65 = udiv i128 %64, 100
  %66 = mul i128 %65, 100
  %67 = sub i128 %64, %66
  %68 = trunc nuw nsw i128 %67 to i64
  %69 = shl nuw nsw i64 %68, 1
  %70 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %69
  %71 = load i16, ptr %70, align 2
  store i16 %71, ptr %63, align 1
  %72 = icmp ugt i128 %60, 9999
  br i1 %72, label %58, label %73, !llvm.loop !81

73:                                               ; preds = %58, %56
  %74 = phi i128 [ %5, %56 ], [ %65, %58 ]
  %75 = phi i32 [ %2, %56 ], [ %61, %58 ]
  %76 = icmp samesign ugt i128 %74, 9
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = add i32 %75, -2
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds nuw i8, ptr %30, i64 %79
  %81 = trunc nuw i128 %74 to i64
  %82 = shl nuw nsw i64 %81, 1
  %83 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %82
  %84 = load i16, ptr %83, align 2
  store i16 %84, ptr %80, align 1
  br label %153

85:                                               ; preds = %73
  %86 = trunc nuw i128 %74 to i8
  %87 = or disjoint i8 %86, 48
  %88 = add i32 %75, -1
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds nuw i8, ptr %30, i64 %89
  store i8 %87, ptr %90, align 1, !tbaa !10
  br label %153

91:                                               ; preds = %23, %28
  call void @llvm.lifetime.start.p0(i64 39, ptr nonnull %4) #30
  %92 = icmp ult i128 %5, 10
  br i1 %92, label %111, label %93

93:                                               ; preds = %91, %107
  %94 = phi i32 [ %109, %107 ], [ 1, %91 ]
  %95 = phi i128 [ %108, %107 ], [ %5, %91 ]
  %96 = icmp ult i128 %95, 100
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = add nuw nsw i32 %94, 1
  br label %111

99:                                               ; preds = %93
  %100 = icmp ult i128 %95, 1000
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = add nuw nsw i32 %94, 2
  br label %111

103:                                              ; preds = %99
  %104 = icmp ult i128 %95, 10000
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = add nuw nsw i32 %94, 3
  br label %111

107:                                              ; preds = %103
  %108 = udiv i128 %95, 10000
  %109 = add nuw nsw i32 %94, 4
  %110 = icmp ult i128 %95, 100000
  br i1 %110, label %111, label %93, !llvm.loop !80

111:                                              ; preds = %107, %105, %101, %97, %91
  %112 = phi i32 [ %98, %97 ], [ %102, %101 ], [ %106, %105 ], [ 1, %91 ], [ %109, %107 ]
  %113 = icmp slt i32 %2, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

115:                                              ; preds = %111
  %116 = icmp ugt i128 %5, 99
  br i1 %116, label %117, label %132

117:                                              ; preds = %115, %117
  %118 = phi i32 [ %120, %117 ], [ %2, %115 ]
  %119 = phi i128 [ %124, %117 ], [ %5, %115 ]
  %120 = add i32 %118, -2
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds nuw i8, ptr %4, i64 %121
  %123 = freeze i128 %119
  %124 = udiv i128 %123, 100
  %125 = mul i128 %124, 100
  %126 = sub i128 %123, %125
  %127 = trunc nuw nsw i128 %126 to i64
  %128 = shl nuw nsw i64 %127, 1
  %129 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %128
  %130 = load i16, ptr %129, align 2
  store i16 %130, ptr %122, align 1
  %131 = icmp ugt i128 %119, 9999
  br i1 %131, label %117, label %132, !llvm.loop !81

132:                                              ; preds = %117, %115
  %133 = phi i128 [ %5, %115 ], [ %124, %117 ]
  %134 = phi i32 [ %2, %115 ], [ %120, %117 ]
  %135 = icmp samesign ugt i128 %133, 9
  br i1 %135, label %136, label %144

136:                                              ; preds = %132
  %137 = add i32 %134, -2
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds nuw i8, ptr %4, i64 %138
  %140 = trunc nuw i128 %133 to i64
  %141 = shl nuw nsw i64 %140, 1
  %142 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %141
  %143 = load i16, ptr %142, align 2
  store i16 %143, ptr %139, align 1
  br label %150

144:                                              ; preds = %132
  %145 = trunc nuw i128 %133 to i8
  %146 = or disjoint i8 %145, 48
  %147 = add i32 %134, -1
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds nuw i8, ptr %4, i64 %148
  store i8 %146, ptr %149, align 1, !tbaa !10
  br label %150

150:                                              ; preds = %136, %144
  %151 = getelementptr inbounds nuw i8, ptr %4, i64 %9
  %152 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %4, ptr noundef nonnull %151, i64 %0)
  call void @llvm.lifetime.end.p0(i64 39, ptr nonnull %4) #30
  br label %153

153:                                              ; preds = %77, %85, %150
  %154 = phi i64 [ %152, %150 ], [ %0, %85 ], [ %0, %77 ]
  ret i64 %154
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEoTnNSt3__19enable_ifIXaaaasr11is_integralIT1_EE5valuentsr3std7is_sameIS7_bEE5valuentsr3std7is_sameIS7_T_EE5valueEiE4typeELi0EEET0_SB_S7_(i64 %0, ptr noundef %1) local_unnamed_addr #0 comdat {
  %3 = alloca i128, align 16
  %4 = inttoptr i64 %0 to ptr
  %5 = load i128, ptr %1, align 16, !tbaa !49
  %6 = icmp ult i128 %5, 10
  br i1 %6, label %25, label %7

7:                                                ; preds = %2, %21
  %8 = phi i32 [ %23, %21 ], [ 1, %2 ]
  %9 = phi i128 [ %22, %21 ], [ %5, %2 ]
  %10 = icmp ult i128 %9, 100
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = add nuw nsw i32 %8, 1
  br label %25

13:                                               ; preds = %7
  %14 = icmp ult i128 %9, 1000
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = add nuw nsw i32 %8, 2
  br label %25

17:                                               ; preds = %13
  %18 = icmp ult i128 %9, 10000
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = add nuw nsw i32 %8, 3
  br label %25

21:                                               ; preds = %17
  %22 = udiv i128 %9, 10000
  %23 = add nuw nsw i32 %8, 4
  %24 = icmp ult i128 %9, 100000
  br i1 %24, label %25, label %7, !llvm.loop !80

25:                                               ; preds = %21, %2, %11, %15, %19
  %26 = phi i32 [ %12, %11 ], [ %16, %15 ], [ %20, %19 ], [ 1, %2 ], [ %23, %21 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %27
  %31 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %32 = load i64, ptr %31, align 8, !tbaa !18
  %33 = icmp ugt i64 %30, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %25
  %35 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  tail call void %36(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %30)
  %37 = load i64, ptr %28, align 8, !tbaa !37
  %38 = load i64, ptr %31, align 8, !tbaa !18
  %39 = add i64 %37, %27
  br label %40

40:                                               ; preds = %34, %25
  %41 = phi i64 [ %30, %25 ], [ %39, %34 ]
  %42 = phi i64 [ %32, %25 ], [ %38, %34 ]
  %43 = phi i64 [ %29, %25 ], [ %37, %34 ]
  %44 = icmp ult i64 %42, %41
  br i1 %44, label %110, label %45

45:                                               ; preds = %40
  store i64 %41, ptr %28, align 8, !tbaa !37
  %46 = load ptr, ptr %4, align 8, !tbaa !17
  %47 = getelementptr inbounds nuw i8, ptr %46, i64 %43
  %48 = icmp eq ptr %46, null
  br i1 %48, label %110, label %49

49:                                               ; preds = %45
  br i1 %6, label %68, label %50

50:                                               ; preds = %49, %64
  %51 = phi i32 [ %66, %64 ], [ 1, %49 ]
  %52 = phi i128 [ %65, %64 ], [ %5, %49 ]
  %53 = icmp ult i128 %52, 100
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = add nuw nsw i32 %51, 1
  br label %68

56:                                               ; preds = %50
  %57 = icmp ult i128 %52, 1000
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = add nuw nsw i32 %51, 2
  br label %68

60:                                               ; preds = %56
  %61 = icmp ult i128 %52, 10000
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = add nuw nsw i32 %51, 3
  br label %68

64:                                               ; preds = %60
  %65 = udiv i128 %52, 10000
  %66 = add nuw nsw i32 %51, 4
  %67 = icmp ult i128 %52, 100000
  br i1 %67, label %68, label %50, !llvm.loop !80

68:                                               ; preds = %64, %62, %58, %54, %49
  %69 = phi i32 [ %55, %54 ], [ %59, %58 ], [ %63, %62 ], [ 1, %49 ], [ %66, %64 ]
  %70 = icmp slt i32 %26, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

72:                                               ; preds = %68
  %73 = icmp sgt i32 %26, -1
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = icmp ugt i128 %5, 99
  br i1 %75, label %77, label %92

76:                                               ; preds = %72
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

77:                                               ; preds = %74, %77
  %78 = phi i32 [ %80, %77 ], [ %26, %74 ]
  %79 = phi i128 [ %84, %77 ], [ %5, %74 ]
  %80 = add i32 %78, -2
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds nuw i8, ptr %47, i64 %81
  %83 = freeze i128 %79
  %84 = udiv i128 %83, 100
  %85 = mul i128 %84, 100
  %86 = sub i128 %83, %85
  %87 = trunc nuw nsw i128 %86 to i64
  %88 = shl nuw nsw i64 %87, 1
  %89 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %88
  %90 = load i16, ptr %89, align 2
  store i16 %90, ptr %82, align 1
  %91 = icmp ugt i128 %79, 9999
  br i1 %91, label %77, label %92, !llvm.loop !81

92:                                               ; preds = %77, %74
  %93 = phi i128 [ %5, %74 ], [ %84, %77 ]
  %94 = phi i32 [ %26, %74 ], [ %80, %77 ]
  %95 = icmp samesign ugt i128 %93, 9
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = add i32 %94, -2
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds nuw i8, ptr %47, i64 %98
  %100 = trunc nuw i128 %93 to i64
  %101 = shl nuw nsw i64 %100, 1
  %102 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %101
  %103 = load i16, ptr %102, align 2
  store i16 %103, ptr %99, align 1
  br label %112

104:                                              ; preds = %92
  %105 = trunc nuw i128 %93 to i8
  %106 = or disjoint i8 %105, 48
  %107 = add i32 %94, -1
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds nuw i8, ptr %47, i64 %108
  store i8 %106, ptr %109, align 1, !tbaa !10
  br label %112

110:                                              ; preds = %40, %45
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store i128 %5, ptr %3, align 16, !tbaa !49
  %111 = call i64 @_ZN3fmt3v116detail14format_decimalIcoNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, ptr noundef nonnull %3, i32 noundef %26)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %112

112:                                              ; preds = %96, %104, %110
  %113 = phi i64 [ %111, %110 ], [ %0, %104 ], [ %0, %96 ]
  ret i64 %113
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 %3) local_unnamed_addr #5 comdat personality ptr @__gxx_personality_seh0 {
  %5 = alloca %"class.fmt::v11::loc_value", align 16
  %6 = alloca %"class.fmt::v11::loc_value", align 16
  %7 = alloca %"class.std::__1::locale", align 8
  %8 = alloca %"class.fmt::v11::format_facet", align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #30
  %9 = icmp eq i64 %3, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = inttoptr i64 %3 to ptr
  call void @_ZNSt3__16localeC1ERKS0_(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 8 dereferenceable(8) %11) #30
  br label %13

12:                                               ; preds = %4
  call void @_ZNSt3__16localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  br label %13

13:                                               ; preds = %10, %12
  %14 = invoke noundef zeroext i1 @_ZNKSt3__16locale9has_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) @_ZN3fmt3v1112format_facetINSt3__16localeEE2idE)
          to label %18 unwind label %15

15:                                               ; preds = %13
  %16 = landingpad { ptr, i32 }
          catch ptr null
  %17 = extractvalue { ptr, i32 } %16, 0
  call void @__clang_call_terminate(ptr %17) #33
  unreachable

18:                                               ; preds = %13
  br i1 %14, label %19, label %29

19:                                               ; preds = %18
  %20 = invoke noundef nonnull align 8 dereferenceable(88) ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) @_ZN3fmt3v1112format_facetINSt3__16localeEE2idE)
          to label %21 unwind label %27

21:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %6, ptr noundef nonnull align 16 dereferenceable(32) %1, i64 32, i1 false)
  %22 = load ptr, ptr %20, align 8, !tbaa !82
  %23 = getelementptr inbounds nuw i8, ptr %22, i64 24
  %24 = load ptr, ptr %23, align 8
  %25 = invoke noundef zeroext i1 %24(ptr noundef nonnull align 8 dereferenceable(88) %20, i64 %0, ptr noundef nonnull %6, ptr noundef nonnull align 4 dereferenceable(16) %2)
          to label %26 unwind label %27

26:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6)
  br label %66

27:                                               ; preds = %21, %19
  %28 = landingpad { ptr, i32 }
          cleanup
  br label %68

29:                                               ; preds = %18
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %8) #30
  invoke void @_ZN3fmt3v1112format_facetINSt3__16localeEEC2ERS3_(ptr noundef nonnull align 8 dereferenceable(88) %8, ptr noundef nonnull align 8 dereferenceable(8) %7)
          to label %30 unwind label %60

30:                                               ; preds = %29
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %5, ptr noundef nonnull align 16 dereferenceable(32) %1, i64 32, i1 false)
  %31 = load ptr, ptr %8, align 8, !tbaa !82
  %32 = getelementptr inbounds nuw i8, ptr %31, i64 24
  %33 = load ptr, ptr %32, align 8
  %34 = invoke noundef zeroext i1 %33(ptr noundef nonnull align 8 dereferenceable(88) %8, i64 %0, ptr noundef nonnull %5, ptr noundef nonnull align 4 dereferenceable(16) %2)
          to label %35 unwind label %62

35:                                               ; preds = %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5)
  store ptr getelementptr inbounds nuw inrange(-16, 32) (i8, ptr @_ZTVN3fmt3v1112format_facetINSt3__16localeEEE, i64 16), ptr %8, align 8, !tbaa !82
  %36 = getelementptr inbounds nuw i8, ptr %8, i64 64
  %37 = load i8, ptr %36, align 8
  %38 = and i8 %37, 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds nuw i8, ptr %8, i64 80
  %42 = load ptr, ptr %41, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %42) #34
  br label %43

43:                                               ; preds = %40, %35
  %44 = getelementptr inbounds nuw i8, ptr %8, i64 40
  %45 = load i8, ptr %44, align 8
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds nuw i8, ptr %8, i64 56
  %50 = load ptr, ptr %49, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %50) #34
  br label %51

51:                                               ; preds = %48, %43
  %52 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %53 = load i8, ptr %52, align 8
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds nuw i8, ptr %8, i64 32
  %58 = load ptr, ptr %57, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %58) #34
  br label %59

59:                                               ; preds = %51, %56
  call void @_ZNSt3__16locale5facetD2Ev(ptr noundef nonnull align 8 dereferenceable(88) %8) #30
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %8) #30
  br label %66

60:                                               ; preds = %29
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %64

62:                                               ; preds = %30
  %63 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v1112format_facetINSt3__16localeEED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %8) #30
  br label %64

64:                                               ; preds = %62, %60
  %65 = phi { ptr, i32 } [ %63, %62 ], [ %61, %60 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %8) #30
  br label %68

66:                                               ; preds = %26, %59
  %67 = phi i1 [ %34, %59 ], [ %25, %26 ]
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  ret i1 %67

68:                                               ; preds = %64, %27
  %69 = phi { ptr, i32 } [ %28, %27 ], [ %65, %64 ]
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  resume { ptr, i32 } %69
}

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, i64 %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #17 comdat {
  %4 = tail call i64 @_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, i64 %1, ptr noundef nonnull align 4 dereferenceable(16) %2)
  ret i64 %4
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112format_facetINSt3__16localeEEC2ERS3_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(8) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 -1, ptr %4, align 8, !tbaa !84
  store ptr getelementptr inbounds nuw inrange(-16, 32) (i8, ptr @_ZTVN3fmt3v1112format_facetINSt3__16localeEEE, i64 16), ptr %0, align 8, !tbaa !82
  %5 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %5, i8 0, i64 72, i1 false)
  %8 = invoke noundef nonnull align 8 dereferenceable(40) ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %1, ptr noundef nonnull align 4 dereferenceable(8) @_ZNSt3__18numpunctIcE2idE)
          to label %9 unwind label %45

9:                                                ; preds = %2
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #30
  %10 = load ptr, ptr %8, align 8, !tbaa !82, !noalias !87
  %11 = getelementptr inbounds nuw i8, ptr %10, i64 40
  %12 = load ptr, ptr %11, align 8, !noalias !87
  invoke void %12(ptr dead_on_unwind nonnull writable sret(%"class.std::__1::basic_string") align 8 %3, ptr noundef nonnull align 8 dereferenceable(40) %8)
          to label %13 unwind label %47

13:                                               ; preds = %9
  %14 = load i8, ptr %6, align 8
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %19 = load ptr, ptr %18, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %19) #34
  br label %20

20:                                               ; preds = %17, %13
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #30
  %21 = load i8, ptr %6, align 8
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %25 = load i64, ptr %24, align 8
  %26 = lshr i8 %21, 1
  %27 = zext nneg i8 %26 to i64
  %28 = select i1 %23, i64 %27, i64 %25
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %20
  %31 = load ptr, ptr %8, align 8, !tbaa !82
  %32 = getelementptr inbounds nuw i8, ptr %31, i64 32
  %33 = load ptr, ptr %32, align 8
  %34 = invoke noundef i8 %33(ptr noundef nonnull align 8 dereferenceable(40) %8)
          to label %35 unwind label %49

35:                                               ; preds = %30
  %36 = load i8, ptr %5, align 8
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %41 = load ptr, ptr %40, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %41) #34
  br label %42

42:                                               ; preds = %39, %35
  store i8 2, ptr %5, align 8
  %43 = getelementptr inbounds nuw i8, ptr %0, i64 17
  store i8 %34, ptr %43, align 1
  %44 = getelementptr inbounds nuw i8, ptr %0, i64 18
  store i8 0, ptr %44, align 2
  br label %51

45:                                               ; preds = %2
  %46 = landingpad { ptr, i32 }
          cleanup
  br label %52

47:                                               ; preds = %9
  %48 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #30
  br label %52

49:                                               ; preds = %30
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %52

51:                                               ; preds = %42, %20
  ret void

52:                                               ; preds = %49, %47, %45
  %53 = phi { ptr, i32 } [ %50, %49 ], [ %48, %47 ], [ %46, %45 ]
  %54 = load i8, ptr %7, align 8
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds nuw i8, ptr %0, i64 80
  %59 = load ptr, ptr %58, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %59) #34
  br label %60

60:                                               ; preds = %52, %57
  %61 = load i8, ptr %6, align 8
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %66 = load ptr, ptr %65, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %66) #34
  br label %67

67:                                               ; preds = %60, %64
  %68 = load i8, ptr %5, align 8
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %73 = load ptr, ptr %72, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %73) #34
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZNSt3__16locale5facetD2Ev(ptr noundef nonnull align 8 dereferenceable(12) %0) #30
  resume { ptr, i32 } %53
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112format_facetINSt3__16localeEED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #18 comdat align 2 {
  store ptr getelementptr inbounds nuw inrange(-16, 32) (i8, ptr @_ZTVN3fmt3v1112format_facetINSt3__16localeEEE, i64 16), ptr %0, align 8, !tbaa !82
  %2 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %3 = load i8, ptr %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 80
  %8 = load ptr, ptr %7, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %8) #34
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %11 = load i8, ptr %10, align 8
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %16 = load ptr, ptr %15, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %16) #34
  br label %17

17:                                               ; preds = %9, %14
  %18 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %19 = load i8, ptr %18, align 8
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %24) #34
  br label %25

25:                                               ; preds = %17, %22
  tail call void @_ZNSt3__16locale5facetD2Ev(ptr noundef nonnull align 8 dereferenceable(12) %0) #30
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

; Function Attrs: nounwind
declare dso_local void @_ZNSt3__16localeC1ERKS0_(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

; Function Attrs: nounwind
declare dso_local void @_ZNSt3__16localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #8

declare dso_local noundef zeroext i1 @_ZNKSt3__16locale9has_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 4 dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: noinline noreturn nounwind uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #19 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #30
  tail call void @_ZSt9terminatev() #33
  unreachable
}

declare dso_local ptr @__cxa_begin_catch(ptr) local_unnamed_addr

; Function Attrs: cold nofree noreturn
declare dso_local void @_ZSt9terminatev() local_unnamed_addr #20

declare dso_local noundef ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 4 dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt3__16locale5facetD2Ev(ptr noundef nonnull align 8 dereferenceable(12)) unnamed_addr #8

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112format_facetINSt3__16localeEED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #18 comdat align 2 {
  store ptr getelementptr inbounds nuw inrange(-16, 32) (i8, ptr @_ZTVN3fmt3v1112format_facetINSt3__16localeEEE, i64 16), ptr %0, align 8, !tbaa !82
  %2 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %3 = load i8, ptr %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 80
  %8 = load ptr, ptr %7, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %8) #34
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %11 = load i8, ptr %10, align 8
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %16 = load ptr, ptr %15, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %16) #34
  br label %17

17:                                               ; preds = %14, %9
  %18 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %19 = load i8, ptr %18, align 8
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %24) #34
  br label %25

25:                                               ; preds = %17, %22
  tail call void @_ZNSt3__16locale5facetD2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) #30
  tail call void @_ZdlPv(ptr noundef nonnull %0) #34
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt3__16locale5facet16__on_zero_sharedEv(ptr noundef nonnull align 8 dereferenceable(12)) unnamed_addr #8

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZNK3fmt3v1112format_facetINSt3__16localeEE6do_putENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsE(ptr noundef nonnull align 8 dereferenceable(88) %0, i64 %1, ptr noundef %2, ptr noundef nonnull align 4 dereferenceable(16) %3) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %5 = alloca %"struct.fmt::v11::detail::loc_writer", align 8
  %6 = inttoptr i64 %1 to ptr
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #30
  store ptr %6, ptr %5, align 8, !tbaa !31
  %7 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store ptr %3, ptr %7, align 8, !tbaa !91
  %8 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %9 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %10 = load i8, ptr %9, align 8
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i64 24, i1 false), !tbaa.struct !90
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %16 = load ptr, ptr %15, align 8, !tbaa !10
  %17 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %18 = load i64, ptr %17, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %16, i64 noundef %18)
  br label %19

19:                                               ; preds = %13, %14
  %20 = getelementptr inbounds nuw i8, ptr %5, i64 40
  %21 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %22 = load i8, ptr %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %21, i64 24, i1 false), !tbaa.struct !90
  br label %31

26:                                               ; preds = %19
  %27 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %28 = load ptr, ptr %27, align 8, !tbaa !10
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %30 = load i64, ptr %29, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef %28, i64 noundef %30)
          to label %31 unwind label %67

31:                                               ; preds = %25, %26
  %32 = getelementptr inbounds nuw i8, ptr %5, i64 64
  %33 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %34 = load i8, ptr %33, align 8
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %32, ptr noundef nonnull align 8 dereferenceable(24) %33, i64 24, i1 false), !tbaa.struct !90
  br label %43

38:                                               ; preds = %31
  %39 = getelementptr inbounds nuw i8, ptr %0, i64 80
  %40 = load ptr, ptr %39, align 8, !tbaa !10
  %41 = getelementptr inbounds nuw i8, ptr %0, i64 72
  %42 = load i64, ptr %41, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %32, ptr noundef %40, i64 noundef %42)
          to label %43 unwind label %69

43:                                               ; preds = %37, %38
  %44 = invoke noundef zeroext i1 @_ZN3fmt3v119loc_value5visitINS0_6detail10loc_writerIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %45 unwind label %85

45:                                               ; preds = %43
  %46 = load i8, ptr %32, align 8
  %47 = and i8 %46, 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds nuw i8, ptr %5, i64 80
  %51 = load ptr, ptr %50, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %51) #34
  br label %52

52:                                               ; preds = %49, %45
  %53 = load i8, ptr %20, align 8
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds nuw i8, ptr %5, i64 56
  %58 = load ptr, ptr %57, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %58) #34
  br label %59

59:                                               ; preds = %56, %52
  %60 = load i8, ptr %8, align 8
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds nuw i8, ptr %5, i64 32
  %65 = load ptr, ptr %64, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %65) #34
  br label %66

66:                                               ; preds = %59, %63
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #30
  ret i1 %44

67:                                               ; preds = %26
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %77

69:                                               ; preds = %38
  %70 = landingpad { ptr, i32 }
          cleanup
  %71 = load i8, ptr %20, align 8
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds nuw i8, ptr %5, i64 56
  %76 = load ptr, ptr %75, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %76) #34
  br label %77

77:                                               ; preds = %74, %69, %67
  %78 = phi { ptr, i32 } [ %68, %67 ], [ %70, %69 ], [ %70, %74 ]
  %79 = load i8, ptr %8, align 8
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds nuw i8, ptr %5, i64 32
  %84 = load ptr, ptr %83, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %84) #34
  br label %87

85:                                               ; preds = %43
  %86 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail10loc_writerIcED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5) #30
  br label %87

87:                                               ; preds = %82, %77, %85
  %88 = phi { ptr, i32 } [ %86, %85 ], [ %78, %77 ], [ %78, %82 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #30
  resume { ptr, i32 } %88
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #21

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(ptr noundef) local_unnamed_addr #22

; Function Attrs: mustprogress noreturn uwtable
define linkonce_odr dso_local void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB8ne200100Ev() local_unnamed_addr #23 comdat align 2 {
  tail call void @_ZNSt3__120__throw_length_errorB8ne200100EPKc(ptr noundef nonnull @.str.22) #31
  unreachable
}

; Function Attrs: inlinehint mustprogress noreturn uwtable
define linkonce_odr dso_local void @_ZNSt3__120__throw_length_errorB8ne200100EPKc(ptr noundef %0) local_unnamed_addr #6 comdat personality ptr @__gxx_personality_seh0 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 16) #30
  invoke void @_ZNSt12length_errorC2B8ne200100EPKc(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef %0)
          to label %3 unwind label %4

3:                                                ; preds = %1
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTISt12length_error, ptr nonnull @_ZNSt12length_errorD1Ev) #31
  unreachable

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %2) #30
  resume { ptr, i32 } %5
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt12length_errorC2B8ne200100EPKc(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNSt11logic_errorC2EPKc(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1)
  store ptr getelementptr inbounds nuw inrange(-16, 24) (i8, ptr @_ZTVSt12length_error, i64 16), ptr %0, align 8, !tbaa !82
  ret void
}

declare dso_local void @__cxa_free_exception(ptr) local_unnamed_addr

; Function Attrs: nounwind
declare dso_local void @_ZNSt12length_errorD1Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #8

declare dso_local void @_ZNSt11logic_errorC2EPKc(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) unnamed_addr #3

; Function Attrs: nobuiltin allocsize(0)
declare dso_local noundef nonnull ptr @_Znwy(i64 noundef) local_unnamed_addr #24

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v119loc_value5visitINS0_6detail10loc_writerIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) local_unnamed_addr #25 comdat align 2 {
  %3 = alloca i128, align 16
  %4 = alloca i128, align 16
  %5 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %6 = load i32, ptr %5, align 16, !tbaa !21
  switch i32 %6, label %25 [
    i32 6, label %22
    i32 1, label %7
    i32 2, label %10
    i32 3, label %13
    i32 4, label %16
    i32 5, label %19
  ]

7:                                                ; preds = %2
  %8 = load i32, ptr %0, align 16, !tbaa !10
  %9 = tail call noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIiTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %1, i32 noundef %8)
  br label %25

10:                                               ; preds = %2
  %11 = load i32, ptr %0, align 16, !tbaa !10
  %12 = tail call noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIjTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %1, i32 noundef %11)
  br label %25

13:                                               ; preds = %2
  %14 = load i64, ptr %0, align 16, !tbaa !10
  %15 = tail call noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIxTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %1, i64 noundef %14)
  br label %25

16:                                               ; preds = %2
  %17 = load i64, ptr %0, align 16, !tbaa !10
  %18 = tail call noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIyTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %1, i64 noundef %17)
  br label %25

19:                                               ; preds = %2
  %20 = load <2 x i64>, ptr %0, align 16, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store <2 x i64> %20, ptr %3, align 16, !tbaa !49
  %21 = call noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclInTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %25

22:                                               ; preds = %2
  %23 = load <2 x i64>, ptr %0, align 16, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  store <2 x i64> %23, ptr %4, align 16, !tbaa !49
  %24 = call noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIoTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %1, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  br label %25

25:                                               ; preds = %2, %7, %10, %13, %16, %19, %22
  %26 = phi i1 [ %24, %22 ], [ %21, %19 ], [ %18, %16 ], [ %15, %13 ], [ %12, %10 ], [ %9, %7 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail10loc_writerIcED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #18 comdat align 2 {
  %2 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %3 = load i8, ptr %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 80
  %8 = load ptr, ptr %7, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %8) #34
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %11 = load i8, ptr %10, align 8
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %16 = load ptr, ptr %15, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %16) #34
  br label %17

17:                                               ; preds = %9, %14
  %18 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %19 = load i8, ptr %18, align 8
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %24) #34
  br label %25

25:                                               ; preds = %17, %22
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIiTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %7 = load ptr, ptr %6, align 8, !tbaa !93
  %8 = icmp slt i32 %1, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = sub i32 0, %1
  br label %18

11:                                               ; preds = %2
  %12 = load i32, ptr %7, align 4, !tbaa !53
  %13 = lshr i32 %12, 10
  %14 = and i32 %13, 3
  %15 = zext nneg i32 %14 to i64
  %16 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !11
  br label %18

18:                                               ; preds = %9, %11
  %19 = phi i32 [ 16777261, %9 ], [ %17, %11 ]
  %20 = phi i32 [ %10, %9 ], [ %1, %11 ]
  %21 = zext i32 %20 to i64
  %22 = load ptr, ptr %0, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #30
  %23 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %24 = load i8, ptr %23, align 8
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %23, i64 24, i1 false), !tbaa.struct !90
  br label %33

28:                                               ; preds = %18
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %30 = load ptr, ptr %29, align 8, !tbaa !10
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %32 = load i64, ptr %31, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %30, i64 noundef %32)
  br label %33

33:                                               ; preds = %27, %28
  %34 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %35 = load i8, ptr %34, align 8
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %34, i64 24, i1 false), !tbaa.struct !90
  br label %44

39:                                               ; preds = %33
  %40 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %41 = load ptr, ptr %40, align 8, !tbaa !10
  %42 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %43 = load i64, ptr %42, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %41, i64 noundef %43)
          to label %44 unwind label %77

44:                                               ; preds = %38, %39
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %45 = getelementptr inbounds nuw i8, ptr %3, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %46 = ptrtoint ptr %22 to i64
  %47 = invoke i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %46, i64 noundef %21, i32 noundef %19, ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %48 unwind label %79

48:                                               ; preds = %44
  %49 = load i8, ptr %45, align 8
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds nuw i8, ptr %3, i64 40
  %54 = load ptr, ptr %53, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %54) #34
  br label %55

55:                                               ; preds = %52, %48
  %56 = load i8, ptr %3, align 8
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %61 = load ptr, ptr %60, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %61) #34
  br label %62

62:                                               ; preds = %55, %59
  %63 = load i8, ptr %5, align 8
  %64 = and i8 %63, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %68 = load ptr, ptr %67, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %68) #34
  br label %69

69:                                               ; preds = %62, %66
  %70 = load i8, ptr %4, align 8
  %71 = and i8 %70, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %75 = load ptr, ptr %74, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %75) #34
  br label %76

76:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  ret i1 true

77:                                               ; preds = %39
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %87

79:                                               ; preds = %44
  %80 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #30
  %81 = load i8, ptr %5, align 8
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %86 = load ptr, ptr %85, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %86) #34
  br label %87

87:                                               ; preds = %84, %79, %77
  %88 = phi { ptr, i32 } [ %78, %77 ], [ %80, %79 ], [ %80, %84 ]
  %89 = load i8, ptr %4, align 8
  %90 = and i8 %89, 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %94 = load ptr, ptr %93, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %94) #34
  br label %95

95:                                               ; preds = %87, %92
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  resume { ptr, i32 } %88
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIjTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %7 = load ptr, ptr %6, align 8, !tbaa !93
  %8 = load i32, ptr %7, align 4, !tbaa !53
  %9 = lshr i32 %8, 10
  %10 = and i32 %9, 3
  %11 = zext nneg i32 %10 to i64
  %12 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %11
  %13 = load i32, ptr %12, align 4, !tbaa !11
  %14 = zext i32 %1 to i64
  %15 = load ptr, ptr %0, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #30
  %16 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %17 = load i8, ptr %16, align 8
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %16, i64 24, i1 false), !tbaa.struct !90
  br label %26

21:                                               ; preds = %2
  %22 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %23 = load ptr, ptr %22, align 8, !tbaa !10
  %24 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %25 = load i64, ptr %24, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %23, i64 noundef %25)
  br label %26

26:                                               ; preds = %20, %21
  %27 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %28 = load i8, ptr %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %27, i64 24, i1 false), !tbaa.struct !90
  br label %37

32:                                               ; preds = %26
  %33 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %34 = load ptr, ptr %33, align 8, !tbaa !10
  %35 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %36 = load i64, ptr %35, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %34, i64 noundef %36)
          to label %37 unwind label %70

37:                                               ; preds = %31, %32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %38 = getelementptr inbounds nuw i8, ptr %3, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %38, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %39 = ptrtoint ptr %15 to i64
  %40 = invoke i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %39, i64 noundef %14, i32 noundef %13, ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %41 unwind label %72

41:                                               ; preds = %37
  %42 = load i8, ptr %38, align 8
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds nuw i8, ptr %3, i64 40
  %47 = load ptr, ptr %46, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %47) #34
  br label %48

48:                                               ; preds = %45, %41
  %49 = load i8, ptr %3, align 8
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %54 = load ptr, ptr %53, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %54) #34
  br label %55

55:                                               ; preds = %48, %52
  %56 = load i8, ptr %5, align 8
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %61 = load ptr, ptr %60, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %61) #34
  br label %62

62:                                               ; preds = %55, %59
  %63 = load i8, ptr %4, align 8
  %64 = and i8 %63, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %68 = load ptr, ptr %67, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %68) #34
  br label %69

69:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  ret i1 true

70:                                               ; preds = %32
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %80

72:                                               ; preds = %37
  %73 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #30
  %74 = load i8, ptr %5, align 8
  %75 = and i8 %74, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %79 = load ptr, ptr %78, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %79) #34
  br label %80

80:                                               ; preds = %77, %72, %70
  %81 = phi { ptr, i32 } [ %71, %70 ], [ %73, %72 ], [ %73, %77 ]
  %82 = load i8, ptr %4, align 8
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %87 = load ptr, ptr %86, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %87) #34
  br label %88

88:                                               ; preds = %80, %85
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  resume { ptr, i32 } %81
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIxTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %0, i64 noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %7 = load ptr, ptr %6, align 8, !tbaa !93
  %8 = icmp slt i64 %1, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = sub i64 0, %1
  br label %18

11:                                               ; preds = %2
  %12 = load i32, ptr %7, align 4, !tbaa !53
  %13 = lshr i32 %12, 10
  %14 = and i32 %13, 3
  %15 = zext nneg i32 %14 to i64
  %16 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !11, !noalias !97
  br label %18

18:                                               ; preds = %9, %11
  %19 = phi i32 [ 16777261, %9 ], [ %17, %11 ]
  %20 = phi i64 [ %10, %9 ], [ %1, %11 ]
  %21 = load ptr, ptr %0, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #30
  %22 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %23 = load i8, ptr %22, align 8
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %22, i64 24, i1 false), !tbaa.struct !90
  br label %32

27:                                               ; preds = %18
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %29 = load ptr, ptr %28, align 8, !tbaa !10
  %30 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %31 = load i64, ptr %30, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %29, i64 noundef %31)
  br label %32

32:                                               ; preds = %26, %27
  %33 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %34 = load i8, ptr %33, align 8
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %33, i64 24, i1 false), !tbaa.struct !90
  br label %43

38:                                               ; preds = %32
  %39 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %40 = load ptr, ptr %39, align 8, !tbaa !10
  %41 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %42 = load i64, ptr %41, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %40, i64 noundef %42)
          to label %43 unwind label %76

43:                                               ; preds = %37, %38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %44 = getelementptr inbounds nuw i8, ptr %3, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %45 = ptrtoint ptr %21 to i64
  %46 = invoke i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %45, i64 noundef %20, i32 noundef %19, ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %47 unwind label %78

47:                                               ; preds = %43
  %48 = load i8, ptr %44, align 8
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds nuw i8, ptr %3, i64 40
  %53 = load ptr, ptr %52, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %53) #34
  br label %54

54:                                               ; preds = %51, %47
  %55 = load i8, ptr %3, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %60 = load ptr, ptr %59, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %60) #34
  br label %61

61:                                               ; preds = %54, %58
  %62 = load i8, ptr %5, align 8
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %67 = load ptr, ptr %66, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %67) #34
  br label %68

68:                                               ; preds = %61, %65
  %69 = load i8, ptr %4, align 8
  %70 = and i8 %69, 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %74 = load ptr, ptr %73, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %74) #34
  br label %75

75:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  ret i1 true

76:                                               ; preds = %38
  %77 = landingpad { ptr, i32 }
          cleanup
  br label %86

78:                                               ; preds = %43
  %79 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #30
  %80 = load i8, ptr %5, align 8
  %81 = and i8 %80, 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %85 = load ptr, ptr %84, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %85) #34
  br label %86

86:                                               ; preds = %83, %78, %76
  %87 = phi { ptr, i32 } [ %77, %76 ], [ %79, %78 ], [ %79, %83 ]
  %88 = load i8, ptr %4, align 8
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %93 = load ptr, ptr %92, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %93) #34
  br label %94

94:                                               ; preds = %86, %91
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  resume { ptr, i32 } %87
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIyTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %0, i64 noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %7 = load ptr, ptr %6, align 8, !tbaa !93
  %8 = load i32, ptr %7, align 4, !tbaa !53
  %9 = lshr i32 %8, 10
  %10 = and i32 %9, 3
  %11 = zext nneg i32 %10 to i64
  %12 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %11
  %13 = load i32, ptr %12, align 4, !tbaa !11, !noalias !100
  %14 = load ptr, ptr %0, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #30
  %15 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %16 = load i8, ptr %15, align 8
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %15, i64 24, i1 false), !tbaa.struct !90
  br label %25

20:                                               ; preds = %2
  %21 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %22 = load ptr, ptr %21, align 8, !tbaa !10
  %23 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %24 = load i64, ptr %23, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %22, i64 noundef %24)
  br label %25

25:                                               ; preds = %19, %20
  %26 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %27 = load i8, ptr %26, align 8
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %26, i64 24, i1 false), !tbaa.struct !90
  br label %36

31:                                               ; preds = %25
  %32 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %33 = load ptr, ptr %32, align 8, !tbaa !10
  %34 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %35 = load i64, ptr %34, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %33, i64 noundef %35)
          to label %36 unwind label %69

36:                                               ; preds = %30, %31
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %37 = getelementptr inbounds nuw i8, ptr %3, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %37, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %38 = ptrtoint ptr %14 to i64
  %39 = invoke i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %38, i64 noundef %1, i32 noundef %13, ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %40 unwind label %71

40:                                               ; preds = %36
  %41 = load i8, ptr %37, align 8
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds nuw i8, ptr %3, i64 40
  %46 = load ptr, ptr %45, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %46) #34
  br label %47

47:                                               ; preds = %44, %40
  %48 = load i8, ptr %3, align 8
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %53 = load ptr, ptr %52, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %53) #34
  br label %54

54:                                               ; preds = %47, %51
  %55 = load i8, ptr %5, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %60 = load ptr, ptr %59, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %60) #34
  br label %61

61:                                               ; preds = %54, %58
  %62 = load i8, ptr %4, align 8
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %67 = load ptr, ptr %66, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %67) #34
  br label %68

68:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  ret i1 true

69:                                               ; preds = %31
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %79

71:                                               ; preds = %36
  %72 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #30
  %73 = load i8, ptr %5, align 8
  %74 = and i8 %73, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %78 = load ptr, ptr %77, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %78) #34
  br label %79

79:                                               ; preds = %76, %71, %69
  %80 = phi { ptr, i32 } [ %70, %69 ], [ %72, %71 ], [ %72, %76 ]
  %81 = load i8, ptr %4, align 8
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %86 = load ptr, ptr %85, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %86) #34
  br label %87

87:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  resume { ptr, i32 } %80
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclInTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i128, align 16
  %7 = load i128, ptr %1, align 16, !tbaa !49
  %8 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %9 = load ptr, ptr %8, align 8, !tbaa !93
  %10 = icmp slt i128 %7, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = sub i128 0, %7
  br label %20

13:                                               ; preds = %2
  %14 = load i32, ptr %9, align 4, !tbaa !53
  %15 = lshr i32 %14, 10
  %16 = and i32 %15, 3
  %17 = zext nneg i32 %16 to i64
  %18 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %17
  %19 = load i32, ptr %18, align 4, !tbaa !11, !noalias !103
  br label %20

20:                                               ; preds = %11, %13
  %21 = phi i32 [ 16777261, %11 ], [ %19, %13 ]
  %22 = phi i128 [ %12, %11 ], [ %7, %13 ]
  %23 = load ptr, ptr %0, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #30
  %24 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %25 = load i8, ptr %24, align 8
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %24, i64 24, i1 false), !tbaa.struct !90
  br label %34

29:                                               ; preds = %20
  %30 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %31 = load ptr, ptr %30, align 8, !tbaa !10
  %32 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %33 = load i64, ptr %32, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %31, i64 noundef %33)
  br label %34

34:                                               ; preds = %28, %29
  %35 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %36 = load i8, ptr %35, align 8
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %35, i64 24, i1 false), !tbaa.struct !90
  br label %45

40:                                               ; preds = %34
  %41 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %42 = load ptr, ptr %41, align 8, !tbaa !10
  %43 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %44 = load i64, ptr %43, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %42, i64 noundef %44)
          to label %45 unwind label %78

45:                                               ; preds = %39, %40
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %46 = getelementptr inbounds nuw i8, ptr %3, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %47 = ptrtoint ptr %23 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i128 %22, ptr %6, align 16, !tbaa !49
  %48 = invoke i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEocEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %47, ptr noundef nonnull %6, i32 noundef %21, ptr noundef nonnull align 4 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %49 unwind label %80

49:                                               ; preds = %45
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  %50 = load i8, ptr %46, align 8
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds nuw i8, ptr %3, i64 40
  %55 = load ptr, ptr %54, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %55) #34
  br label %56

56:                                               ; preds = %53, %49
  %57 = load i8, ptr %3, align 8
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %62 = load ptr, ptr %61, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %62) #34
  br label %63

63:                                               ; preds = %56, %60
  %64 = load i8, ptr %5, align 8
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %69 = load ptr, ptr %68, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %69) #34
  br label %70

70:                                               ; preds = %63, %67
  %71 = load i8, ptr %4, align 8
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %76 = load ptr, ptr %75, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %76) #34
  br label %77

77:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  ret i1 true

78:                                               ; preds = %40
  %79 = landingpad { ptr, i32 }
          cleanup
  br label %88

80:                                               ; preds = %45
  %81 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #30
  %82 = load i8, ptr %5, align 8
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %87 = load ptr, ptr %86, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %87) #34
  br label %88

88:                                               ; preds = %85, %80, %78
  %89 = phi { ptr, i32 } [ %79, %78 ], [ %81, %80 ], [ %81, %85 ]
  %90 = load i8, ptr %4, align 8
  %91 = and i8 %90, 1
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %95 = load ptr, ptr %94, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %95) #34
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  resume { ptr, i32 } %89
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail10loc_writerIcEclIoTnNSt3__19enable_ifIXsr10is_integerIT_EE5valueEiE4typeELi0EEEbS7_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i128, align 16
  %7 = load i128, ptr %1, align 16, !tbaa !49
  %8 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %9 = load ptr, ptr %8, align 8, !tbaa !93
  %10 = load i32, ptr %9, align 4, !tbaa !53
  %11 = lshr i32 %10, 10
  %12 = and i32 %11, 3
  %13 = zext nneg i32 %12 to i64
  %14 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %13
  %15 = load i32, ptr %14, align 4, !tbaa !11, !noalias !106
  %16 = load ptr, ptr %0, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %3) #30
  %17 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %18 = load i8, ptr %17, align 8
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %17, i64 24, i1 false), !tbaa.struct !90
  br label %27

22:                                               ; preds = %2
  %23 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %26 = load i64, ptr %25, align 8, !tbaa !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %24, i64 noundef %26)
  br label %27

27:                                               ; preds = %21, %22
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %29 = load i8, ptr %28, align 8
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %28, i64 24, i1 false), !tbaa.struct !90
  br label %38

33:                                               ; preds = %27
  %34 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %35 = load ptr, ptr %34, align 8, !tbaa !10
  %36 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %37 = load i64, ptr %36, align 8, !tbaa !10
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %35, i64 noundef %37)
          to label %38 unwind label %71

38:                                               ; preds = %32, %33
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)
  %39 = getelementptr inbounds nuw i8, ptr %3, i64 24
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !90
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false)
  %40 = ptrtoint ptr %16 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i128 %7, ptr %6, align 16, !tbaa !49
  %41 = invoke i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEocEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %40, ptr noundef nonnull %6, i32 noundef %15, ptr noundef nonnull align 4 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(48) %3)
          to label %42 unwind label %73

42:                                               ; preds = %38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  %43 = load i8, ptr %39, align 8
  %44 = and i8 %43, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds nuw i8, ptr %3, i64 40
  %48 = load ptr, ptr %47, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %48) #34
  br label %49

49:                                               ; preds = %46, %42
  %50 = load i8, ptr %3, align 8
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %55 = load ptr, ptr %54, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %55) #34
  br label %56

56:                                               ; preds = %49, %53
  %57 = load i8, ptr %5, align 8
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %62 = load ptr, ptr %61, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %62) #34
  br label %63

63:                                               ; preds = %56, %60
  %64 = load i8, ptr %4, align 8
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %69 = load ptr, ptr %68, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %69) #34
  br label %70

70:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  ret i1 true

71:                                               ; preds = %33
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %81

73:                                               ; preds = %38
  %74 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %3) #30
  %75 = load i8, ptr %5, align 8
  %76 = and i8 %75, 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %80 = load ptr, ptr %79, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %80) #34
  br label %81

81:                                               ; preds = %78, %73, %71
  %82 = phi { ptr, i32 } [ %72, %71 ], [ %74, %73 ], [ %74, %78 ]
  %83 = load i8, ptr %4, align 8
  %84 = and i8 %83, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %88 = load ptr, ptr %87, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %88) #34
  br label %89

89:                                               ; preds = %81, %86
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %3) #30
  resume { ptr, i32 } %82
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %0, i64 noundef %1, i32 noundef %2, ptr noundef nonnull align 4 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(48) %4) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca %class.anon.12, align 1
  %7 = alloca i32, align 4
  %8 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %9 = alloca %class.anon, align 8
  store i32 %2, ptr %7, align 4, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %8) #30
  %10 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %11 = getelementptr inbounds nuw i8, ptr %8, i64 24
  %12 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 0, ptr %12, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds nuw i8, ptr %8, i64 32
  store ptr %13, ptr %8, align 8, !tbaa !17
  store i64 500, ptr %10, align 8, !tbaa !18
  %14 = load i32, ptr %3, align 4, !tbaa !53
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 7
  switch i8 %16, label %17 [
    i8 0, label %21
    i8 3, label %21
    i8 4, label %36
    i8 5, label %79
    i8 6, label %120
    i8 7, label %163
  ]

17:                                               ; preds = %5
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1902, ptr noundef nonnull @.str.14) #31
          to label %18 unwind label %19

18:                                               ; preds = %17
  unreachable

19:                                               ; preds = %147, %163, %21, %17
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %244

21:                                               ; preds = %5, %5
  %22 = or i64 %1, 1
  %23 = call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %22, i1 true)
  %24 = xor i64 %23, 63
  %25 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !10
  %27 = zext i8 %26 to i32
  %28 = zext i8 %26 to i64
  %29 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !20
  %31 = icmp ult i64 %1, %30
  %32 = sext i1 %31 to i32
  %33 = add nsw i32 %32, %27
  %34 = ptrtoint ptr %8 to i64
  %35 = invoke i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %34, i64 noundef %1, i32 noundef %33)
          to label %171 unwind label %19

36:                                               ; preds = %5
  %37 = and i32 %14, 8192
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %36
  %40 = and i32 %14, 4096
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 30768, i32 22576
  %43 = icmp eq i32 %2, 0
  %44 = shl nuw nsw i32 %42, 8
  %45 = select i1 %43, i32 %42, i32 %44
  %46 = or i32 %45, %2
  %47 = add i32 %46, 33554432
  store i32 %47, ptr %7, align 4, !tbaa !11
  br label %48

48:                                               ; preds = %39, %36
  %49 = phi i32 [ %47, %39 ], [ %2, %36 ]
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ %1, %48 ], [ %54, %50 ]
  %52 = phi i32 [ 0, %48 ], [ %53, %50 ]
  %53 = add nuw nsw i32 %52, 1
  %54 = lshr i64 %51, 4
  %55 = icmp ult i64 %51, 16
  br i1 %55, label %56, label %50, !llvm.loop !65

56:                                               ; preds = %50
  %57 = and i32 %14, 4096
  %58 = icmp eq i32 %57, 0
  %59 = zext nneg i32 %53 to i64
  %60 = icmp samesign ugt i32 %52, 499
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = call i64 @llvm.umax.i64(i64 %59, i64 750)
  %63 = call ptr @malloc(i64 noundef %62) #32
  %64 = icmp eq ptr %63, null
  br i1 %64, label %147, label %65

65:                                               ; preds = %61
  store ptr %63, ptr %8, align 8, !tbaa !17
  store i64 %62, ptr %10, align 8, !tbaa !18
  br label %66

66:                                               ; preds = %56, %65
  %67 = phi ptr [ %63, %65 ], [ %13, %56 ]
  store i64 %59, ptr %12, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %59
  %69 = select i1 %58, ptr @.str.24, ptr @.str.23
  br label %70

70:                                               ; preds = %70, %66
  %71 = phi i64 [ %77, %70 ], [ %1, %66 ]
  %72 = phi ptr [ %76, %70 ], [ %68, %66 ]
  %73 = and i64 %71, 15
  %74 = getelementptr inbounds nuw i8, ptr %69, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !10
  %76 = getelementptr inbounds i8, ptr %72, i64 -1
  store i8 %75, ptr %76, align 1, !tbaa !10
  %77 = lshr i64 %71, 4
  %78 = icmp ult i64 %71, 16
  br i1 %78, label %171, label %70, !llvm.loop !109

79:                                               ; preds = %5, %79
  %80 = phi i64 [ %83, %79 ], [ %1, %5 ]
  %81 = phi i32 [ %82, %79 ], [ 0, %5 ]
  %82 = add nuw nsw i32 %81, 1
  %83 = lshr i64 %80, 3
  %84 = icmp ult i64 %80, 8
  br i1 %84, label %85, label %79, !llvm.loop !110

85:                                               ; preds = %79
  %86 = and i32 %14, 8192
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds nuw i8, ptr %3, i64 12
  %90 = load i32, ptr %89, align 4, !tbaa !55
  %91 = icmp sle i32 %90, %82
  %92 = icmp ne i64 %1, 0
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %99

94:                                               ; preds = %88
  %95 = icmp eq i32 %2, 0
  %96 = select i1 %95, i32 48, i32 12288
  %97 = or i32 %96, %2
  %98 = add i32 %97, 16777216
  store i32 %98, ptr %7, align 4, !tbaa !11
  br label %99

99:                                               ; preds = %94, %88, %85
  %100 = phi i32 [ %98, %94 ], [ %2, %88 ], [ %2, %85 ]
  %101 = zext nneg i32 %82 to i64
  %102 = icmp samesign ugt i32 %81, 499
  br i1 %102, label %103, label %108

103:                                              ; preds = %99
  %104 = call i64 @llvm.umax.i64(i64 %101, i64 750)
  %105 = call ptr @malloc(i64 noundef %104) #32
  %106 = icmp eq ptr %105, null
  br i1 %106, label %147, label %107

107:                                              ; preds = %103
  store ptr %105, ptr %8, align 8, !tbaa !17
  store i64 %104, ptr %10, align 8, !tbaa !18
  br label %108

108:                                              ; preds = %99, %107
  %109 = phi ptr [ %105, %107 ], [ %13, %99 ]
  store i64 %101, ptr %12, align 8, !tbaa !37
  %110 = getelementptr inbounds nuw i8, ptr %109, i64 %101
  br label %111

111:                                              ; preds = %111, %108
  %112 = phi i64 [ %118, %111 ], [ %1, %108 ]
  %113 = phi ptr [ %117, %111 ], [ %110, %108 ]
  %114 = trunc i64 %112 to i8
  %115 = and i8 %114, 7
  %116 = or disjoint i8 %115, 48
  %117 = getelementptr inbounds i8, ptr %113, i64 -1
  store i8 %116, ptr %117, align 1, !tbaa !10
  %118 = lshr i64 %112, 3
  %119 = icmp ult i64 %112, 8
  br i1 %119, label %171, label %111, !llvm.loop !109

120:                                              ; preds = %5
  %121 = and i32 %14, 8192
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %132, label %123

123:                                              ; preds = %120
  %124 = and i32 %14, 4096
  %125 = icmp eq i32 %124, 0
  %126 = select i1 %125, i32 25136, i32 16944
  %127 = icmp eq i32 %2, 0
  %128 = shl nuw nsw i32 %126, 8
  %129 = select i1 %127, i32 %126, i32 %128
  %130 = or i32 %129, %2
  %131 = add i32 %130, 33554432
  store i32 %131, ptr %7, align 4, !tbaa !11
  br label %132

132:                                              ; preds = %123, %120
  %133 = phi i32 [ %131, %123 ], [ %2, %120 ]
  br label %134

134:                                              ; preds = %134, %132
  %135 = phi i64 [ %1, %132 ], [ %138, %134 ]
  %136 = phi i32 [ 0, %132 ], [ %137, %134 ]
  %137 = add nuw nsw i32 %136, 1
  %138 = lshr i64 %135, 1
  %139 = icmp ult i64 %135, 2
  br i1 %139, label %140, label %134, !llvm.loop !111

140:                                              ; preds = %134
  %141 = zext nneg i32 %137 to i64
  %142 = icmp samesign ugt i32 %136, 499
  br i1 %142, label %143, label %151

143:                                              ; preds = %140
  %144 = call i64 @llvm.umax.i64(i64 %141, i64 750)
  %145 = call ptr @malloc(i64 noundef %144) #32
  %146 = icmp eq ptr %145, null
  br i1 %146, label %147, label %150

147:                                              ; preds = %143, %103, %61
  %148 = call ptr @__cxa_allocate_exception(i64 8) #30
  call void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %148) #30
  invoke void @__cxa_throw(ptr nonnull %148, ptr nonnull @_ZTISt9bad_alloc, ptr nonnull @_ZNSt9bad_allocD1Ev) #31
          to label %149 unwind label %19

149:                                              ; preds = %147
  unreachable

150:                                              ; preds = %143
  store ptr %145, ptr %8, align 8, !tbaa !17
  store i64 %144, ptr %10, align 8, !tbaa !18
  br label %151

151:                                              ; preds = %140, %150
  %152 = phi ptr [ %145, %150 ], [ %13, %140 ]
  store i64 %141, ptr %12, align 8, !tbaa !37
  %153 = getelementptr inbounds nuw i8, ptr %152, i64 %141
  br label %154

154:                                              ; preds = %154, %151
  %155 = phi i64 [ %161, %154 ], [ %1, %151 ]
  %156 = phi ptr [ %160, %154 ], [ %153, %151 ]
  %157 = trunc i64 %155 to i8
  %158 = and i8 %157, 1
  %159 = or disjoint i8 %158, 48
  %160 = getelementptr inbounds i8, ptr %156, i64 -1
  store i8 %159, ptr %160, align 1, !tbaa !10
  %161 = lshr i64 %155, 1
  %162 = icmp ult i64 %155, 2
  br i1 %162, label %171, label %154, !llvm.loop !109

163:                                              ; preds = %5
  %164 = trunc i64 %1 to i8
  %165 = and i32 %14, 7
  %166 = icmp eq i32 %165, 1
  %167 = zext i1 %166 to i8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #30
  store i8 %167, ptr %6, align 1, !tbaa !112
  %168 = getelementptr inbounds nuw i8, ptr %6, i64 1
  store i8 %164, ptr %168, align 1, !tbaa !115
  %169 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %3, i64 noundef 1, i64 noundef 1, ptr noundef nonnull align 1 dereferenceable(2) %6)
          to label %170 unwind label %19

170:                                              ; preds = %163
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #30
  br label %238

171:                                              ; preds = %154, %111, %70, %21
  %172 = phi i32 [ %2, %21 ], [ %49, %70 ], [ %100, %111 ], [ %133, %154 ]
  %173 = phi i32 [ %33, %21 ], [ %53, %70 ], [ %82, %111 ], [ %137, %154 ]
  %174 = icmp sgt i32 %173, -1
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %176 unwind label %234

176:                                              ; preds = %175
  unreachable

177:                                              ; preds = %171
  %178 = lshr i32 %172, 24
  %179 = add nuw i32 %178, %173
  %180 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %181 = load i8, ptr %180, align 8
  %182 = and i8 %181, 1
  %183 = icmp eq i8 %182, 0
  %184 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %185 = load i64, ptr %184, align 8
  %186 = lshr i8 %181, 1
  %187 = zext nneg i8 %186 to i64
  %188 = select i1 %183, i64 %187, i64 %185
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %226, label %190

190:                                              ; preds = %177
  %191 = load i8, ptr %4, align 8, !noalias !116
  %192 = and i8 %191, 1
  %193 = icmp eq i8 %192, 0
  %194 = getelementptr inbounds nuw i8, ptr %4, i64 1
  %195 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %196 = load ptr, ptr %195, align 8, !noalias !116
  %197 = select i1 %193, ptr %194, ptr %196
  %198 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %199 = load i64, ptr %198, align 8
  %200 = lshr i8 %191, 1
  %201 = zext nneg i8 %200 to i64
  %202 = select i1 %193, i64 %201, i64 %199
  %203 = getelementptr inbounds nuw i8, ptr %197, i64 %202
  %204 = getelementptr inbounds i8, ptr %203, i64 -1
  br label %205

205:                                              ; preds = %224, %190
  %206 = phi i32 [ 0, %190 ], [ %225, %224 ]
  %207 = phi ptr [ %197, %190 ], [ %220, %224 ]
  %208 = phi i32 [ 0, %190 ], [ %222, %224 ]
  %209 = icmp eq ptr %207, %203
  br i1 %209, label %210, label %212

210:                                              ; preds = %205
  %211 = load i8, ptr %204, align 1, !tbaa !10
  br label %218

212:                                              ; preds = %205
  %213 = load i8, ptr %207, align 1, !tbaa !10
  %214 = add i8 %213, -127
  %215 = icmp ult i8 %214, -126
  br i1 %215, label %226, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds nuw i8, ptr %207, i64 1
  br label %218

218:                                              ; preds = %216, %210
  %219 = phi i8 [ %213, %216 ], [ %211, %210 ]
  %220 = phi ptr [ %217, %216 ], [ %207, %210 ]
  %221 = sext i8 %219 to i32
  %222 = add nsw i32 %208, %221
  %223 = icmp sgt i32 %173, %222
  br i1 %223, label %224, label %226

224:                                              ; preds = %218
  %225 = add nuw nsw i32 %206, 1
  br label %205

226:                                              ; preds = %212, %218, %177
  %227 = phi i32 [ 0, %177 ], [ %206, %218 ], [ %206, %212 ]
  %228 = add i32 %179, %227
  %229 = zext i32 %228 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #30
  store ptr %7, ptr %9, align 8, !tbaa !119
  %230 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store ptr %4, ptr %230, align 8, !tbaa !121
  %231 = getelementptr inbounds nuw i8, ptr %9, i64 16
  store ptr %8, ptr %231, align 8, !tbaa !123
  %232 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEEZNS1_9write_intIS5_ycEET_S7_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS5_E_EESD_SD_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %3, i64 noundef %229, i64 noundef %229, ptr noundef nonnull align 8 dereferenceable(24) %9)
          to label %233 unwind label %236

233:                                              ; preds = %226
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #30
  br label %238

234:                                              ; preds = %175
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %244

236:                                              ; preds = %226
  %237 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #30
  br label %244

238:                                              ; preds = %170, %233
  %239 = phi i64 [ %232, %233 ], [ %169, %170 ]
  %240 = load ptr, ptr %8, align 8, !tbaa !17
  %241 = icmp eq ptr %240, %13
  br i1 %241, label %243, label %242

242:                                              ; preds = %238
  call void @free(ptr noundef %240)
  br label %243

243:                                              ; preds = %238, %242
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  ret i64 %239

244:                                              ; preds = %234, %236, %19
  %245 = phi { ptr, i32 } [ %20, %19 ], [ %237, %236 ], [ %235, %234 ]
  %246 = load ptr, ptr %8, align 8, !tbaa !17
  %247 = icmp eq ptr %246, %13
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  call void @free(ptr noundef %246)
  br label %249

249:                                              ; preds = %244, %248
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  resume { ptr, i32 } %245
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #18 comdat align 2 {
  %2 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %3 = load i8, ptr %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %8 = load ptr, ptr %7, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %8) #34
  br label %9

9:                                                ; preds = %1, %6
  %10 = load i8, ptr %0, align 8
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %15 = load ptr, ptr %14, align 8, !tbaa !10
  tail call void @_ZdlPv(ptr noundef %15) #34
  br label %16

16:                                               ; preds = %9, %13
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEEZNS1_9write_intIS5_ycEET_S7_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS5_E_EESD_SD_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.fmt::v11::basic_string_view", align 8
  %7 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %8 = load i32, ptr %7, align 4, !tbaa !125
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

11:                                               ; preds = %5
  %12 = zext nneg i32 %8 to i64
  %13 = tail call i64 @llvm.usub.sat.i64(i64 %12, i64 %3)
  %14 = load i32, ptr %1, align 4, !tbaa !53
  %15 = lshr i32 %14, 3
  %16 = and i32 %15, 7
  %17 = zext nneg i32 %16 to i64
  %18 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !10
  %20 = sext i8 %19 to i64
  %21 = and i64 %20, 4294967295
  %22 = lshr i64 %13, %21
  %23 = sub nsw i64 %13, %22
  %24 = lshr i32 %14, 15
  %25 = and i32 %24, 7
  %26 = zext nneg i32 %25 to i64
  %27 = mul nuw nsw i64 %13, %26
  %28 = inttoptr i64 %0 to ptr
  %29 = getelementptr inbounds nuw i8, ptr %28, i64 8
  %30 = load i64, ptr %29, align 8, !tbaa !37
  %31 = add i64 %30, %2
  %32 = add i64 %31, %27
  %33 = getelementptr inbounds nuw i8, ptr %28, i64 16
  %34 = load i64, ptr %33, align 8, !tbaa !18
  %35 = icmp ugt i64 %32, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %11
  %37 = getelementptr inbounds nuw i8, ptr %28, i64 24
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  tail call void %38(ptr noundef nonnull align 8 dereferenceable(32) %28, i64 noundef %32)
  br label %39

39:                                               ; preds = %11, %36
  %40 = icmp eq i64 %22, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %43 = inttoptr i64 %42 to ptr
  br label %44

44:                                               ; preds = %41, %39
  %45 = phi ptr [ %43, %41 ], [ %28, %39 ]
  %46 = phi i64 [ %42, %41 ], [ %0, %39 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  %47 = load ptr, ptr %4, align 8, !tbaa !126
  %48 = load i32, ptr %47, align 4, !tbaa !11
  %49 = and i32 %48, 16777215
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds nuw i8, ptr %45, i64 8
  %53 = getelementptr inbounds nuw i8, ptr %45, i64 16
  %54 = getelementptr inbounds nuw i8, ptr %45, i64 24
  br label %55

55:                                               ; preds = %66, %51
  %56 = phi i32 [ %49, %51 ], [ %71, %66 ]
  %57 = trunc i32 %56 to i8
  %58 = load i64, ptr %52, align 8, !tbaa !37
  %59 = add i64 %58, 1
  %60 = load i64, ptr %53, align 8, !tbaa !18
  %61 = icmp ugt i64 %59, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %55
  %63 = load ptr, ptr %54, align 8, !tbaa !13
  tail call void %63(ptr noundef nonnull align 8 dereferenceable(32) %45, i64 noundef %59)
  %64 = load i64, ptr %52, align 8, !tbaa !37
  %65 = add i64 %64, 1
  br label %66

66:                                               ; preds = %62, %55
  %67 = phi i64 [ %59, %55 ], [ %65, %62 ]
  %68 = phi i64 [ %58, %55 ], [ %64, %62 ]
  %69 = load ptr, ptr %45, align 8, !tbaa !17
  store i64 %67, ptr %52, align 8, !tbaa !37
  %70 = getelementptr inbounds nuw i8, ptr %69, i64 %68
  store i8 %57, ptr %70, align 1, !tbaa !10
  %71 = lshr i32 %56, 8
  %72 = icmp samesign ult i32 %56, 256
  br i1 %72, label %73, label %55, !llvm.loop !128

73:                                               ; preds = %66, %44
  %74 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %75 = load ptr, ptr %74, align 8, !tbaa !129
  %76 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %77 = load ptr, ptr %76, align 8, !tbaa !130
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = getelementptr inbounds nuw i8, ptr %77, i64 8
  %80 = load i64, ptr %79, align 8, !tbaa !37
  store ptr %78, ptr %6, align 8, !tbaa !38
  %81 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 %80, ptr %81, align 8, !tbaa !39
  %82 = call i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %75, i64 %46, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  %83 = icmp eq i64 %13, %22
  br i1 %83, label %86, label %84

84:                                               ; preds = %73
  %85 = call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %82, i64 noundef %23, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %86

86:                                               ; preds = %84, %73
  %87 = phi i64 [ %85, %84 ], [ %82, %73 ]
  ret i64 %87
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 1 dereferenceable(2) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.25, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load i8, ptr %4, align 1, !tbaa !112, !range !51, !noundef !52
  %47 = trunc nuw i8 %46 to i1
  %48 = getelementptr inbounds nuw i8, ptr %4, i64 1
  %49 = load i8, ptr %48, align 1, !tbaa !115
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = tail call i64 @_ZN3fmt3v116detail18write_escaped_charIcNS0_14basic_appenderIcEEEET0_S5_T_(i64 %45, i8 noundef %49)
  br label %69

52:                                               ; preds = %43
  %53 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %54 = load i64, ptr %53, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %57 = load i64, ptr %56, align 8, !tbaa !18
  %58 = icmp ugt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %52
  %60 = getelementptr inbounds nuw i8, ptr %44, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %55)
  %62 = load i64, ptr %53, align 8, !tbaa !37
  %63 = add i64 %62, 1
  br label %64

64:                                               ; preds = %59, %52
  %65 = phi i64 [ %55, %52 ], [ %63, %59 ]
  %66 = phi i64 [ %54, %52 ], [ %62, %59 ]
  %67 = load ptr, ptr %44, align 8, !tbaa !17
  store i64 %65, ptr %53, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %66
  store i8 %49, ptr %68, align 1, !tbaa !10
  br label %69

69:                                               ; preds = %50, %64
  %70 = phi i64 [ %51, %50 ], [ %45, %64 ]
  %71 = icmp eq i64 %12, %21
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %70, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %74

74:                                               ; preds = %72, %69
  %75 = phi i64 [ %73, %72 ], [ %70, %69 ]
  ret i64 %75
}

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %1, ptr noundef nonnull align 4 dereferenceable(8) %2) local_unnamed_addr #17 comdat {
  %4 = load i32, ptr %2, align 4, !tbaa !53
  %5 = lshr i32 %4, 15
  %6 = and i32 %5, 7
  %7 = zext nneg i32 %6 to i64
  %8 = icmp eq i32 %6, 1
  %9 = getelementptr inbounds nuw i8, ptr %2, i64 4
  br i1 %8, label %10, label %35

10:                                               ; preds = %3
  %11 = load i8, ptr %9, align 4, !tbaa !10
  %12 = inttoptr i64 %0 to ptr
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %155, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds nuw i8, ptr %12, i64 8
  %16 = getelementptr inbounds nuw i8, ptr %12, i64 16
  %17 = getelementptr inbounds nuw i8, ptr %12, i64 24
  br label %18

18:                                               ; preds = %28, %14
  %19 = phi i64 [ 0, %14 ], [ %33, %28 ]
  %20 = load i64, ptr %15, align 8, !tbaa !37
  %21 = add i64 %20, 1
  %22 = load i64, ptr %16, align 8, !tbaa !18
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  %25 = load ptr, ptr %17, align 8, !tbaa !13
  tail call void %25(ptr noundef nonnull align 8 dereferenceable(32) %12, i64 noundef %21)
  %26 = load i64, ptr %15, align 8, !tbaa !37
  %27 = add i64 %26, 1
  br label %28

28:                                               ; preds = %24, %18
  %29 = phi i64 [ %21, %18 ], [ %27, %24 ]
  %30 = phi i64 [ %20, %18 ], [ %26, %24 ]
  %31 = load ptr, ptr %12, align 8, !tbaa !17
  store i64 %29, ptr %15, align 8, !tbaa !37
  %32 = getelementptr inbounds nuw i8, ptr %31, i64 %30
  store i8 %11, ptr %32, align 1, !tbaa !10
  %33 = add nuw i64 %19, 1
  %34 = icmp eq i64 %33, %1
  br i1 %34, label %155, label %18, !llvm.loop !131

35:                                               ; preds = %3
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %155, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds nuw i8, ptr %2, i64 %7
  %39 = getelementptr inbounds nuw i8, ptr %38, i64 4
  %40 = inttoptr i64 %0 to ptr
  %41 = icmp eq i32 %6, 0
  %42 = ptrtoint ptr %39 to i64
  %43 = getelementptr inbounds nuw i8, ptr %40, i64 8
  %44 = getelementptr inbounds nuw i8, ptr %40, i64 16
  %45 = getelementptr inbounds nuw i8, ptr %40, i64 24
  br i1 %41, label %155, label %46

46:                                               ; preds = %37, %152
  %47 = phi i64 [ %153, %152 ], [ 0, %37 ]
  br label %48

48:                                               ; preds = %128, %46
  %49 = phi ptr [ %9, %46 ], [ %131, %128 ]
  %50 = ptrtoint ptr %49 to i64
  %51 = sub i64 %42, %50
  %52 = icmp sgt i64 %51, -1
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

54:                                               ; preds = %48
  %55 = load i64, ptr %43, align 8, !tbaa !37
  %56 = add i64 %55, %51
  %57 = load i64, ptr %44, align 8, !tbaa !18
  %58 = icmp ugt i64 %56, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = load ptr, ptr %45, align 8, !tbaa !13
  tail call void %60(ptr noundef nonnull align 8 dereferenceable(32) %40, i64 noundef %56)
  %61 = load i64, ptr %44, align 8, !tbaa !18
  %62 = load i64, ptr %43, align 8, !tbaa !37
  br label %63

63:                                               ; preds = %59, %54
  %64 = phi i64 [ %55, %54 ], [ %62, %59 ]
  %65 = phi i64 [ %57, %54 ], [ %61, %59 ]
  %66 = sub i64 %65, %64
  %67 = tail call i64 @llvm.umin.i64(i64 %66, i64 %51)
  %68 = load ptr, ptr %40, align 8, !tbaa !17
  %69 = ptrtoint ptr %68 to i64
  %70 = getelementptr inbounds nuw i8, ptr %68, i64 %64
  %71 = icmp eq i64 %67, 0
  br i1 %71, label %128, label %72

72:                                               ; preds = %63
  %73 = icmp ult i64 %67, 4
  br i1 %73, label %74, label %91

74:                                               ; preds = %111, %124, %91, %72
  %75 = phi i64 [ %98, %111 ], [ 0, %72 ], [ 0, %91 ], [ %116, %124 ]
  %76 = and i64 %67, 3
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %74, %78
  %79 = phi i64 [ %84, %78 ], [ %75, %74 ]
  %80 = phi i64 [ %85, %78 ], [ 0, %74 ]
  %81 = getelementptr inbounds nuw i8, ptr %49, i64 %79
  %82 = load i8, ptr %81, align 1, !tbaa !10
  %83 = getelementptr inbounds nuw i8, ptr %70, i64 %79
  store i8 %82, ptr %83, align 1, !tbaa !10
  %84 = add nuw i64 %79, 1
  %85 = add i64 %80, 1
  %86 = icmp eq i64 %85, %76
  br i1 %86, label %87, label %78, !llvm.loop !132

87:                                               ; preds = %78, %74
  %88 = phi i64 [ %75, %74 ], [ %84, %78 ]
  %89 = sub nsw i64 %75, %67
  %90 = icmp ugt i64 %89, -4
  br i1 %90, label %126, label %133

91:                                               ; preds = %72
  %92 = add i64 %64, %69
  %93 = sub i64 %92, %50
  %94 = icmp ult i64 %93, 32
  br i1 %94, label %74, label %95

95:                                               ; preds = %91
  %96 = icmp ult i64 %67, 32
  br i1 %96, label %114, label %97

97:                                               ; preds = %95
  %98 = and i64 %67, 9223372036854775776
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %107, %99 ]
  %101 = getelementptr inbounds nuw i8, ptr %49, i64 %100
  %102 = getelementptr inbounds nuw i8, ptr %101, i64 16
  %103 = load <16 x i8>, ptr %101, align 1, !tbaa !10
  %104 = load <16 x i8>, ptr %102, align 1, !tbaa !10
  %105 = getelementptr inbounds nuw i8, ptr %70, i64 %100
  %106 = getelementptr inbounds nuw i8, ptr %105, i64 16
  store <16 x i8> %103, ptr %105, align 1, !tbaa !10
  store <16 x i8> %104, ptr %106, align 1, !tbaa !10
  %107 = add nuw i64 %100, 32
  %108 = icmp eq i64 %107, %98
  br i1 %108, label %109, label %99, !llvm.loop !133

109:                                              ; preds = %99
  %110 = icmp eq i64 %67, %98
  br i1 %110, label %126, label %111

111:                                              ; preds = %109
  %112 = and i64 %67, 28
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %74, label %114

114:                                              ; preds = %111, %95
  %115 = phi i64 [ %98, %111 ], [ 0, %95 ]
  %116 = and i64 %67, 9223372036854775804
  br label %117

117:                                              ; preds = %117, %114
  %118 = phi i64 [ %115, %114 ], [ %122, %117 ]
  %119 = getelementptr inbounds nuw i8, ptr %49, i64 %118
  %120 = load <4 x i8>, ptr %119, align 1, !tbaa !10
  %121 = getelementptr inbounds nuw i8, ptr %70, i64 %118
  store <4 x i8> %120, ptr %121, align 1, !tbaa !10
  %122 = add nuw i64 %118, 4
  %123 = icmp eq i64 %122, %116
  br i1 %123, label %124, label %117, !llvm.loop !134

124:                                              ; preds = %117
  %125 = icmp eq i64 %67, %116
  br i1 %125, label %126, label %74

126:                                              ; preds = %87, %133, %124, %109
  %127 = load i64, ptr %43, align 8, !tbaa !37
  br label %128

128:                                              ; preds = %126, %63
  %129 = phi i64 [ %127, %126 ], [ %64, %63 ]
  %130 = add i64 %129, %67
  store i64 %130, ptr %43, align 8, !tbaa !37
  %131 = getelementptr inbounds nuw i8, ptr %49, i64 %67
  %132 = icmp eq ptr %131, %39
  br i1 %132, label %152, label %48, !llvm.loop !77

133:                                              ; preds = %87, %133
  %134 = phi i64 [ %150, %133 ], [ %88, %87 ]
  %135 = getelementptr inbounds nuw i8, ptr %49, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !10
  %137 = getelementptr inbounds nuw i8, ptr %70, i64 %134
  store i8 %136, ptr %137, align 1, !tbaa !10
  %138 = add nuw i64 %134, 1
  %139 = getelementptr inbounds nuw i8, ptr %49, i64 %138
  %140 = load i8, ptr %139, align 1, !tbaa !10
  %141 = getelementptr inbounds nuw i8, ptr %70, i64 %138
  store i8 %140, ptr %141, align 1, !tbaa !10
  %142 = add nuw i64 %134, 2
  %143 = getelementptr inbounds nuw i8, ptr %49, i64 %142
  %144 = load i8, ptr %143, align 1, !tbaa !10
  %145 = getelementptr inbounds nuw i8, ptr %70, i64 %142
  store i8 %144, ptr %145, align 1, !tbaa !10
  %146 = add nuw i64 %134, 3
  %147 = getelementptr inbounds nuw i8, ptr %49, i64 %146
  %148 = load i8, ptr %147, align 1, !tbaa !10
  %149 = getelementptr inbounds nuw i8, ptr %70, i64 %146
  store i8 %148, ptr %149, align 1, !tbaa !10
  %150 = add nuw i64 %134, 4
  %151 = icmp eq i64 %150, %67
  br i1 %151, label %126, label %133, !llvm.loop !135

152:                                              ; preds = %128
  %153 = add nuw i64 %47, 1
  %154 = icmp eq i64 %153, %1
  br i1 %154, label %155, label %46, !llvm.loop !136

155:                                              ; preds = %152, %28, %37, %35, %10
  ret i64 %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail18write_escaped_charIcNS0_14basic_appenderIcEEEET0_S5_T_(i64 %0, i8 noundef %1) local_unnamed_addr #0 comdat {
  %3 = alloca [1 x i8], align 1
  %4 = alloca %"struct.fmt::v11::detail::find_escape_result", align 8
  %5 = inttoptr i64 %0 to ptr
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #30
  store i8 %1, ptr %3, align 1, !tbaa !10
  %6 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %7 = load i64, ptr %6, align 8, !tbaa !37
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %10 = load i64, ptr %9, align 8, !tbaa !18
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  tail call void %14(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %8)
  %15 = load i64, ptr %6, align 8, !tbaa !37
  %16 = add i64 %15, 1
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i64 [ %8, %2 ], [ %16, %12 ]
  %19 = phi i64 [ %7, %2 ], [ %15, %12 ]
  %20 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %18, ptr %6, align 8, !tbaa !37
  %21 = getelementptr inbounds nuw i8, ptr %20, i64 %19
  store i8 39, ptr %21, align 1, !tbaa !10
  %22 = sext i8 %1 to i32
  %23 = icmp ult i8 %1, 32
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  switch i8 %1, label %25 [
    i8 127, label %28
    i8 92, label %28
    i8 34, label %28
  ]

25:                                               ; preds = %24
  %26 = tail call noundef zeroext i1 @_ZN3fmt3v116detail12is_printableEj(i32 noundef %22)
  %27 = xor i1 %26, true
  br label %28

28:                                               ; preds = %17, %24, %24, %24, %25
  %29 = phi i1 [ %27, %25 ], [ true, %24 ], [ true, %24 ], [ true, %24 ], [ true, %17 ]
  %30 = icmp ne i8 %1, 34
  %31 = and i1 %30, %29
  %32 = icmp eq i8 %1, 39
  %33 = or i1 %32, %31
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #30
  store ptr %3, ptr %4, align 8, !tbaa !137
  %35 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %36 = getelementptr inbounds nuw i8, ptr %3, i64 1
  store ptr %36, ptr %35, align 8, !tbaa !139
  %37 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 %22, ptr %37, align 8, !tbaa !140
  %38 = call i64 @_ZN3fmt3v116detail16write_escaped_cpINS0_14basic_appenderIcEEcEET_S5_RKNS1_18find_escape_resultIT0_EE(i64 %0, ptr noundef nonnull align 8 dereferenceable(24) %4)
  %39 = inttoptr i64 %38 to ptr
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #30
  br label %55

40:                                               ; preds = %28
  %41 = load i64, ptr %6, align 8, !tbaa !37
  %42 = add i64 %41, 1
  %43 = load i64, ptr %9, align 8, !tbaa !18
  %44 = icmp ugt i64 %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  tail call void %47(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %42)
  %48 = load i64, ptr %6, align 8, !tbaa !37
  %49 = add i64 %48, 1
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi i64 [ %42, %40 ], [ %49, %45 ]
  %52 = phi i64 [ %41, %40 ], [ %48, %45 ]
  %53 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %51, ptr %6, align 8, !tbaa !37
  %54 = getelementptr inbounds nuw i8, ptr %53, i64 %52
  store i8 %1, ptr %54, align 1, !tbaa !10
  br label %55

55:                                               ; preds = %50, %34
  %56 = phi ptr [ %39, %34 ], [ %5, %50 ]
  %57 = getelementptr inbounds nuw i8, ptr %56, i64 8
  %58 = load i64, ptr %57, align 8, !tbaa !37
  %59 = add i64 %58, 1
  %60 = getelementptr inbounds nuw i8, ptr %56, i64 16
  %61 = load i64, ptr %60, align 8, !tbaa !18
  %62 = icmp ugt i64 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds nuw i8, ptr %56, i64 24
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  call void %65(ptr noundef nonnull align 8 dereferenceable(32) %56, i64 noundef %59)
  %66 = load i64, ptr %57, align 8, !tbaa !37
  %67 = add i64 %66, 1
  br label %68

68:                                               ; preds = %55, %63
  %69 = phi i64 [ %59, %55 ], [ %67, %63 ]
  %70 = phi i64 [ %58, %55 ], [ %66, %63 ]
  %71 = ptrtoint ptr %56 to i64
  %72 = load ptr, ptr %56, align 8, !tbaa !17
  store i64 %69, ptr %57, align 8, !tbaa !37
  %73 = getelementptr inbounds nuw i8, ptr %72, i64 %70
  store i8 39, ptr %73, align 1, !tbaa !10
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #30
  ret i64 %71
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail16write_escaped_cpINS0_14basic_appenderIcEEcEET_S5_RKNS1_18find_escape_resultIT0_EE(i64 %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #0 comdat {
  %3 = inttoptr i64 %0 to ptr
  %4 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %5 = load i32, ptr %4, align 8, !tbaa !140
  switch i32 %5, label %75 [
    i32 10, label %6
    i32 13, label %23
    i32 9, label %40
    i32 34, label %57
    i32 39, label %57
    i32 92, label %57
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %8 = load i64, ptr %7, align 8, !tbaa !37
  %9 = add i64 %8, 1
  %10 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %11 = load i64, ptr %10, align 8, !tbaa !18
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %6
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  tail call void %15(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %9)
  %16 = load i64, ptr %7, align 8, !tbaa !37
  %17 = add i64 %16, 1
  br label %18

18:                                               ; preds = %6, %13
  %19 = phi i64 [ %9, %6 ], [ %17, %13 ]
  %20 = phi i64 [ %8, %6 ], [ %16, %13 ]
  %21 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %19, ptr %7, align 8, !tbaa !37
  %22 = getelementptr inbounds nuw i8, ptr %21, i64 %20
  store i8 92, ptr %22, align 1, !tbaa !10
  br label %106

23:                                               ; preds = %2
  %24 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %25 = load i64, ptr %24, align 8, !tbaa !37
  %26 = add i64 %25, 1
  %27 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %28 = load i64, ptr %27, align 8, !tbaa !18
  %29 = icmp ugt i64 %26, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %32 = load ptr, ptr %31, align 8, !tbaa !13
  tail call void %32(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %26)
  %33 = load i64, ptr %24, align 8, !tbaa !37
  %34 = add i64 %33, 1
  br label %35

35:                                               ; preds = %23, %30
  %36 = phi i64 [ %26, %23 ], [ %34, %30 ]
  %37 = phi i64 [ %25, %23 ], [ %33, %30 ]
  %38 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %36, ptr %24, align 8, !tbaa !37
  %39 = getelementptr inbounds nuw i8, ptr %38, i64 %37
  store i8 92, ptr %39, align 1, !tbaa !10
  br label %106

40:                                               ; preds = %2
  %41 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %42 = load i64, ptr %41, align 8, !tbaa !37
  %43 = add i64 %42, 1
  %44 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %45 = load i64, ptr %44, align 8, !tbaa !18
  %46 = icmp ugt i64 %43, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %49 = load ptr, ptr %48, align 8, !tbaa !13
  tail call void %49(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %43)
  %50 = load i64, ptr %41, align 8, !tbaa !37
  %51 = add i64 %50, 1
  br label %52

52:                                               ; preds = %40, %47
  %53 = phi i64 [ %43, %40 ], [ %51, %47 ]
  %54 = phi i64 [ %42, %40 ], [ %50, %47 ]
  %55 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %53, ptr %41, align 8, !tbaa !37
  %56 = getelementptr inbounds nuw i8, ptr %55, i64 %54
  store i8 92, ptr %56, align 1, !tbaa !10
  br label %106

57:                                               ; preds = %2, %2, %2
  %58 = trunc i32 %5 to i8
  %59 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %60 = load i64, ptr %59, align 8, !tbaa !37
  %61 = add i64 %60, 1
  %62 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %63 = load i64, ptr %62, align 8, !tbaa !18
  %64 = icmp ugt i64 %61, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %57
  %66 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %67 = load ptr, ptr %66, align 8, !tbaa !13
  tail call void %67(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %61)
  %68 = load i64, ptr %59, align 8, !tbaa !37
  %69 = add i64 %68, 1
  br label %70

70:                                               ; preds = %57, %65
  %71 = phi i64 [ %61, %57 ], [ %69, %65 ]
  %72 = phi i64 [ %60, %57 ], [ %68, %65 ]
  %73 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %71, ptr %59, align 8, !tbaa !37
  %74 = getelementptr inbounds nuw i8, ptr %73, i64 %72
  store i8 92, ptr %74, align 1, !tbaa !10
  br label %106

75:                                               ; preds = %2
  %76 = icmp ult i32 %5, 256
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = tail call i64 @_ZN3fmt3v116detail15write_codepointILy2EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %0, i8 noundef 120, i32 noundef %5)
  br label %124

79:                                               ; preds = %75
  %80 = icmp ult i32 %5, 65536
  br i1 %80, label %81, label %83

81:                                               ; preds = %79
  %82 = tail call i64 @_ZN3fmt3v116detail15write_codepointILy4EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %0, i8 noundef 117, i32 noundef %5)
  br label %124

83:                                               ; preds = %79
  %84 = icmp ult i32 %5, 1114112
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = tail call i64 @_ZN3fmt3v116detail15write_codepointILy8EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %0, i8 noundef 85, i32 noundef %5)
  br label %124

87:                                               ; preds = %83
  %88 = load ptr, ptr %1, align 8, !tbaa !137
  %89 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %90 = load ptr, ptr %89, align 8, !tbaa !139
  %91 = ptrtoint ptr %90 to i64
  %92 = ptrtoint ptr %88 to i64
  %93 = sub i64 %91, %92
  %94 = icmp sgt i64 %93, -1
  br i1 %94, label %95, label %97

95:                                               ; preds = %87
  %96 = icmp eq ptr %88, %90
  br i1 %96, label %124, label %98

97:                                               ; preds = %87
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

98:                                               ; preds = %95, %98
  %99 = phi ptr [ %104, %98 ], [ %88, %95 ]
  %100 = phi i64 [ %103, %98 ], [ %0, %95 ]
  %101 = load i8, ptr %99, align 1, !tbaa !10
  %102 = zext i8 %101 to i32
  %103 = tail call i64 @_ZN3fmt3v116detail15write_codepointILy2EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %100, i8 noundef 120, i32 noundef %102)
  %104 = getelementptr inbounds nuw i8, ptr %99, i64 1
  %105 = icmp eq ptr %104, %90
  br i1 %105, label %124, label %98

106:                                              ; preds = %70, %52, %35, %18
  %107 = phi i8 [ %58, %70 ], [ 116, %52 ], [ 114, %35 ], [ 110, %18 ]
  %108 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %109 = load i64, ptr %108, align 8, !tbaa !37
  %110 = add i64 %109, 1
  %111 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %112 = load i64, ptr %111, align 8, !tbaa !18
  %113 = icmp ugt i64 %110, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %106
  %115 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %116 = load ptr, ptr %115, align 8, !tbaa !13
  tail call void %116(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %110)
  %117 = load i64, ptr %108, align 8, !tbaa !37
  %118 = add i64 %117, 1
  br label %119

119:                                              ; preds = %106, %114
  %120 = phi i64 [ %110, %106 ], [ %118, %114 ]
  %121 = phi i64 [ %109, %106 ], [ %117, %114 ]
  %122 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %120, ptr %108, align 8, !tbaa !37
  %123 = getelementptr inbounds nuw i8, ptr %122, i64 %121
  store i8 %107, ptr %123, align 1, !tbaa !10
  br label %124

124:                                              ; preds = %98, %95, %119, %85, %81, %77
  %125 = phi i64 [ %78, %77 ], [ %82, %81 ], [ %86, %85 ], [ %0, %119 ], [ %0, %95 ], [ %103, %98 ]
  ret i64 %125
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN3fmt3v116detail12is_printableEj(i32 noundef %0) local_unnamed_addr #5 comdat {
  %2 = icmp ult i32 %0, 65536
  br i1 %2, label %3, label %61

3:                                                ; preds = %1
  %4 = lshr i32 %0, 8
  %5 = trunc i32 %0 to i8
  br label %6

6:                                                ; preds = %32, %3
  %7 = phi i32 [ 0, %3 ], [ %14, %32 ]
  %8 = phi i64 [ 0, %3 ], [ %33, %32 ]
  %9 = getelementptr inbounds nuw %"struct.fmt::v11::detail::singleton", ptr @_ZZN3fmt3v116detail12is_printableEjE11singletons0, i64 %8
  %10 = load i8, ptr %9, align 2, !tbaa !10
  %11 = getelementptr inbounds nuw i8, ptr %9, i64 1
  %12 = load i8, ptr %11, align 1, !tbaa !10
  %13 = zext i8 %12 to i32
  %14 = add nuw nsw i32 %7, %13
  %15 = zext i8 %10 to i32
  %16 = icmp samesign ult i32 %4, %15
  br i1 %16, label %35, label %17

17:                                               ; preds = %6
  %18 = icmp eq i32 %4, %15
  %19 = icmp ne i8 %12, 0
  %20 = select i1 %18, i1 %19, i1 false
  br i1 %20, label %21, label %32

21:                                               ; preds = %17
  %22 = zext nneg i32 %7 to i64
  %23 = zext nneg i32 %14 to i64
  br label %27

24:                                               ; preds = %27
  %25 = add nuw nsw i64 %28, 1
  %26 = icmp samesign ult i64 %25, %23
  br i1 %26, label %27, label %32, !llvm.loop !141

27:                                               ; preds = %24, %21
  %28 = phi i64 [ %22, %21 ], [ %25, %24 ]
  %29 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE17singletons0_lower, i64 %28
  %30 = load i8, ptr %29, align 1, !tbaa !10
  %31 = icmp eq i8 %30, %5
  br i1 %31, label %143, label %24

32:                                               ; preds = %24, %17
  %33 = add nuw nsw i64 %8, 1
  %34 = icmp eq i64 %33, 41
  br i1 %34, label %35, label %6, !llvm.loop !142

35:                                               ; preds = %32, %6
  br label %36

36:                                               ; preds = %35, %57
  %37 = phi i64 [ %59, %57 ], [ 0, %35 ]
  %38 = phi i1 [ %58, %57 ], [ true, %35 ]
  %39 = phi i32 [ %55, %57 ], [ %0, %35 ]
  %40 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal0, i64 %37
  %41 = load i8, ptr %40, align 1, !tbaa !10
  %42 = zext i8 %41 to i32
  %43 = icmp sgt i8 %41, -1
  br i1 %43, label %52, label %44

44:                                               ; preds = %36
  %45 = shl nuw nsw i32 %42, 8
  %46 = and i32 %45, 32512
  %47 = add nuw nsw i64 %37, 1
  %48 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal0, i64 %47
  %49 = load i8, ptr %48, align 1, !tbaa !10
  %50 = zext i8 %49 to i32
  %51 = or disjoint i32 %46, %50
  br label %52

52:                                               ; preds = %44, %36
  %53 = phi i64 [ %47, %44 ], [ %37, %36 ]
  %54 = phi i32 [ %51, %44 ], [ %42, %36 ]
  %55 = sub nsw i32 %39, %54
  %56 = icmp sgt i32 %55, -1
  br i1 %56, label %57, label %143

57:                                               ; preds = %52
  %58 = xor i1 %38, true
  %59 = add i64 %53, 1
  %60 = icmp ult i64 %59, 309
  br i1 %60, label %36, label %143, !llvm.loop !143

61:                                               ; preds = %1
  %62 = icmp ult i32 %0, 131072
  br i1 %62, label %63, label %122

63:                                               ; preds = %61
  %64 = and i32 %0, 65535
  %65 = lshr i32 %64, 8
  %66 = trunc i32 %0 to i8
  br label %67

67:                                               ; preds = %93, %63
  %68 = phi i32 [ 0, %63 ], [ %75, %93 ]
  %69 = phi i64 [ 0, %63 ], [ %94, %93 ]
  %70 = getelementptr inbounds nuw %"struct.fmt::v11::detail::singleton", ptr @_ZZN3fmt3v116detail12is_printableEjE11singletons1, i64 %69
  %71 = load i8, ptr %70, align 2, !tbaa !10
  %72 = getelementptr inbounds nuw i8, ptr %70, i64 1
  %73 = load i8, ptr %72, align 1, !tbaa !10
  %74 = zext i8 %73 to i32
  %75 = add nuw nsw i32 %68, %74
  %76 = zext i8 %71 to i32
  %77 = icmp samesign ult i32 %65, %76
  br i1 %77, label %96, label %78

78:                                               ; preds = %67
  %79 = icmp eq i32 %65, %76
  %80 = icmp ne i8 %73, 0
  %81 = select i1 %79, i1 %80, i1 false
  br i1 %81, label %82, label %93

82:                                               ; preds = %78
  %83 = zext nneg i32 %68 to i64
  %84 = zext nneg i32 %75 to i64
  br label %88

85:                                               ; preds = %88
  %86 = add nuw nsw i64 %89, 1
  %87 = icmp samesign ult i64 %86, %84
  br i1 %87, label %88, label %93, !llvm.loop !141

88:                                               ; preds = %85, %82
  %89 = phi i64 [ %83, %82 ], [ %86, %85 ]
  %90 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE17singletons1_lower, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !10
  %92 = icmp eq i8 %91, %66
  br i1 %92, label %143, label %85

93:                                               ; preds = %85, %78
  %94 = add nuw nsw i64 %69, 1
  %95 = icmp eq i64 %94, 38
  br i1 %95, label %96, label %67, !llvm.loop !142

96:                                               ; preds = %93, %67
  br label %97

97:                                               ; preds = %96, %118
  %98 = phi i64 [ %120, %118 ], [ 0, %96 ]
  %99 = phi i1 [ %119, %118 ], [ true, %96 ]
  %100 = phi i32 [ %116, %118 ], [ %64, %96 ]
  %101 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal1, i64 %98
  %102 = load i8, ptr %101, align 1, !tbaa !10
  %103 = zext i8 %102 to i32
  %104 = icmp sgt i8 %102, -1
  br i1 %104, label %113, label %105

105:                                              ; preds = %97
  %106 = shl nuw nsw i32 %103, 8
  %107 = and i32 %106, 32512
  %108 = add nuw nsw i64 %98, 1
  %109 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal1, i64 %108
  %110 = load i8, ptr %109, align 1, !tbaa !10
  %111 = zext i8 %110 to i32
  %112 = or disjoint i32 %107, %111
  br label %113

113:                                              ; preds = %105, %97
  %114 = phi i64 [ %108, %105 ], [ %98, %97 ]
  %115 = phi i32 [ %112, %105 ], [ %103, %97 ]
  %116 = sub nsw i32 %100, %115
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %118, label %143

118:                                              ; preds = %113
  %119 = xor i1 %99, true
  %120 = add i64 %114, 1
  %121 = icmp ult i64 %120, 419
  br i1 %121, label %97, label %143, !llvm.loop !143

122:                                              ; preds = %61
  %123 = insertelement <4 x i32> poison, i32 %0, i64 0
  %124 = shufflevector <4 x i32> %123, <4 x i32> poison, <4 x i32> zeroinitializer
  %125 = add <4 x i32> %124, <i32 -173790, i32 -177973, i32 -183970, i32 -191457>
  %126 = and i32 %0, -2
  %127 = icmp ne i32 %126, 178206
  %128 = icmp ult <4 x i32> %125, <i32 34, i32 11, i32 14, i32 3103>
  %129 = add i32 %0, -196608
  %130 = icmp ult i32 %129, -1506
  %131 = add i32 %0, -917760
  %132 = icmp ult i32 %131, -716213
  %133 = add i32 %0, -1114112
  %134 = icmp ult i32 %133, -196112
  %135 = bitcast <4 x i1> %128 to i4
  %136 = icmp eq i4 %135, 0
  %137 = and i1 %136, %130
  %138 = and i1 %132, %134
  %139 = and i1 %137, %138
  %140 = and i1 %139, %127
  %141 = icmp ult i32 %0, 1114112
  %142 = and i1 %141, %140
  br label %143

143:                                              ; preds = %88, %118, %113, %27, %57, %52, %122
  %144 = phi i1 [ %142, %122 ], [ %38, %52 ], [ %58, %57 ], [ false, %27 ], [ %99, %113 ], [ %119, %118 ], [ false, %88 ]
  ret i1 %144
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail15write_codepointILy2EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %0, i8 noundef %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca [2 x i8], align 2
  %5 = inttoptr i64 %0 to ptr
  %6 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %7 = load i64, ptr %6, align 8, !tbaa !37
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %10 = load i64, ptr %9, align 8, !tbaa !18
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  tail call void %14(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %8)
  %15 = load i64, ptr %6, align 8, !tbaa !37
  %16 = add i64 %15, 1
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi i64 [ %8, %3 ], [ %16, %12 ]
  %19 = phi i64 [ %7, %3 ], [ %15, %12 ]
  %20 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %18, ptr %6, align 8, !tbaa !37
  %21 = getelementptr inbounds nuw i8, ptr %20, i64 %19
  store i8 92, ptr %21, align 1, !tbaa !10
  %22 = load i64, ptr %6, align 8, !tbaa !37
  %23 = add i64 %22, 1
  %24 = load i64, ptr %9, align 8, !tbaa !18
  %25 = icmp ugt i64 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %17
  %27 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  tail call void %28(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %23)
  %29 = load i64, ptr %6, align 8, !tbaa !37
  %30 = add i64 %29, 1
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi i64 [ %23, %17 ], [ %30, %26 ]
  %33 = phi i64 [ %22, %17 ], [ %29, %26 ]
  %34 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %32, ptr %6, align 8, !tbaa !37
  %35 = getelementptr inbounds nuw i8, ptr %34, i64 %33
  store i8 %1, ptr %35, align 1, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %4) #30
  store i16 12336, ptr %4, align 2
  %36 = getelementptr inbounds nuw i8, ptr %4, i64 2
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i32 [ %45, %37 ], [ %2, %31 ]
  %39 = phi ptr [ %44, %37 ], [ %36, %31 ]
  %40 = and i32 %38, 15
  %41 = zext nneg i32 %40 to i64
  %42 = getelementptr inbounds nuw i8, ptr @.str.24, i64 %41
  %43 = load i8, ptr %42, align 1, !tbaa !10
  %44 = getelementptr inbounds i8, ptr %39, i64 -1
  store i8 %43, ptr %44, align 1, !tbaa !10
  %45 = lshr i32 %38, 4
  %46 = icmp ult i32 %38, 16
  br i1 %46, label %47, label %37, !llvm.loop !144

47:                                               ; preds = %37
  %48 = getelementptr inbounds nuw i8, ptr %5, i64 24
  br label %49

49:                                               ; preds = %74, %47
  %50 = phi i64 [ 0, %47 ], [ %77, %74 ]
  %51 = getelementptr i8, ptr %4, i64 %50
  %52 = sub nsw i64 2, %50
  %53 = icmp slt i64 %50, 3
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

55:                                               ; preds = %49
  %56 = load i64, ptr %6, align 8, !tbaa !37
  %57 = add i64 %56, %52
  %58 = load i64, ptr %9, align 8, !tbaa !18
  %59 = icmp ugt i64 %57, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = load ptr, ptr %48, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %57)
  %62 = load i64, ptr %9, align 8, !tbaa !18
  %63 = load i64, ptr %6, align 8, !tbaa !37
  br label %64

64:                                               ; preds = %60, %55
  %65 = phi i64 [ %56, %55 ], [ %63, %60 ]
  %66 = phi i64 [ %58, %55 ], [ %62, %60 ]
  %67 = sub i64 %66, %65
  %68 = tail call i64 @llvm.umin.i64(i64 %67, i64 %52)
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = load ptr, ptr %5, align 8, !tbaa !17
  %72 = getelementptr i8, ptr %71, i64 %65
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %72, ptr align 1 %51, i64 %68, i1 false), !tbaa !10
  %73 = load i64, ptr %6, align 8, !tbaa !37
  br label %74

74:                                               ; preds = %70, %64
  %75 = phi i64 [ %73, %70 ], [ %65, %64 ]
  %76 = add i64 %75, %68
  store i64 %76, ptr %6, align 8, !tbaa !37
  %77 = add nuw nsw i64 %68, %50
  %78 = icmp eq i64 %77, 2
  br i1 %78, label %79, label %49, !llvm.loop !77

79:                                               ; preds = %74
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %4) #30
  ret i64 %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail15write_codepointILy4EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %0, i8 noundef %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca [4 x i8], align 4
  %5 = inttoptr i64 %0 to ptr
  %6 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %7 = load i64, ptr %6, align 8, !tbaa !37
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %10 = load i64, ptr %9, align 8, !tbaa !18
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  tail call void %14(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %8)
  %15 = load i64, ptr %6, align 8, !tbaa !37
  %16 = add i64 %15, 1
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi i64 [ %8, %3 ], [ %16, %12 ]
  %19 = phi i64 [ %7, %3 ], [ %15, %12 ]
  %20 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %18, ptr %6, align 8, !tbaa !37
  %21 = getelementptr inbounds nuw i8, ptr %20, i64 %19
  store i8 92, ptr %21, align 1, !tbaa !10
  %22 = load i64, ptr %6, align 8, !tbaa !37
  %23 = add i64 %22, 1
  %24 = load i64, ptr %9, align 8, !tbaa !18
  %25 = icmp ugt i64 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %17
  %27 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  tail call void %28(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %23)
  %29 = load i64, ptr %6, align 8, !tbaa !37
  %30 = add i64 %29, 1
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi i64 [ %23, %17 ], [ %30, %26 ]
  %33 = phi i64 [ %22, %17 ], [ %29, %26 ]
  %34 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %32, ptr %6, align 8, !tbaa !37
  %35 = getelementptr inbounds nuw i8, ptr %34, i64 %33
  store i8 %1, ptr %35, align 1, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #30
  store i32 808464432, ptr %4, align 4
  %36 = getelementptr inbounds nuw i8, ptr %4, i64 4
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i32 [ %45, %37 ], [ %2, %31 ]
  %39 = phi ptr [ %44, %37 ], [ %36, %31 ]
  %40 = and i32 %38, 15
  %41 = zext nneg i32 %40 to i64
  %42 = getelementptr inbounds nuw i8, ptr @.str.24, i64 %41
  %43 = load i8, ptr %42, align 1, !tbaa !10
  %44 = getelementptr inbounds i8, ptr %39, i64 -1
  store i8 %43, ptr %44, align 1, !tbaa !10
  %45 = lshr i32 %38, 4
  %46 = icmp ult i32 %38, 16
  br i1 %46, label %47, label %37, !llvm.loop !144

47:                                               ; preds = %37
  %48 = getelementptr inbounds nuw i8, ptr %5, i64 24
  br label %49

49:                                               ; preds = %74, %47
  %50 = phi i64 [ 0, %47 ], [ %77, %74 ]
  %51 = getelementptr i8, ptr %4, i64 %50
  %52 = sub nsw i64 4, %50
  %53 = icmp slt i64 %50, 5
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

55:                                               ; preds = %49
  %56 = load i64, ptr %6, align 8, !tbaa !37
  %57 = add i64 %56, %52
  %58 = load i64, ptr %9, align 8, !tbaa !18
  %59 = icmp ugt i64 %57, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = load ptr, ptr %48, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %57)
  %62 = load i64, ptr %9, align 8, !tbaa !18
  %63 = load i64, ptr %6, align 8, !tbaa !37
  br label %64

64:                                               ; preds = %60, %55
  %65 = phi i64 [ %56, %55 ], [ %63, %60 ]
  %66 = phi i64 [ %58, %55 ], [ %62, %60 ]
  %67 = sub i64 %66, %65
  %68 = tail call i64 @llvm.umin.i64(i64 %67, i64 %52)
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = load ptr, ptr %5, align 8, !tbaa !17
  %72 = getelementptr i8, ptr %71, i64 %65
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %72, ptr align 1 %51, i64 %68, i1 false), !tbaa !10
  %73 = load i64, ptr %6, align 8, !tbaa !37
  br label %74

74:                                               ; preds = %70, %64
  %75 = phi i64 [ %73, %70 ], [ %65, %64 ]
  %76 = add i64 %75, %68
  store i64 %76, ptr %6, align 8, !tbaa !37
  %77 = add nuw nsw i64 %68, %50
  %78 = icmp eq i64 %77, 4
  br i1 %78, label %79, label %49, !llvm.loop !77

79:                                               ; preds = %74
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #30
  ret i64 %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail15write_codepointILy8EcNS0_14basic_appenderIcEEEET1_S5_cj(i64 %0, i8 noundef %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = alloca [8 x i8], align 8
  %5 = inttoptr i64 %0 to ptr
  %6 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %7 = load i64, ptr %6, align 8, !tbaa !37
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %10 = load i64, ptr %9, align 8, !tbaa !18
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  tail call void %14(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %8)
  %15 = load i64, ptr %6, align 8, !tbaa !37
  %16 = add i64 %15, 1
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi i64 [ %8, %3 ], [ %16, %12 ]
  %19 = phi i64 [ %7, %3 ], [ %15, %12 ]
  %20 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %18, ptr %6, align 8, !tbaa !37
  %21 = getelementptr inbounds nuw i8, ptr %20, i64 %19
  store i8 92, ptr %21, align 1, !tbaa !10
  %22 = load i64, ptr %6, align 8, !tbaa !37
  %23 = add i64 %22, 1
  %24 = load i64, ptr %9, align 8, !tbaa !18
  %25 = icmp ugt i64 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %17
  %27 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %28 = load ptr, ptr %27, align 8, !tbaa !13
  tail call void %28(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %23)
  %29 = load i64, ptr %6, align 8, !tbaa !37
  %30 = add i64 %29, 1
  br label %31

31:                                               ; preds = %17, %26
  %32 = phi i64 [ %23, %17 ], [ %30, %26 ]
  %33 = phi i64 [ %22, %17 ], [ %29, %26 ]
  %34 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %32, ptr %6, align 8, !tbaa !37
  %35 = getelementptr inbounds nuw i8, ptr %34, i64 %33
  store i8 %1, ptr %35, align 1, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #30
  store i64 3472328296227680304, ptr %4, align 8
  %36 = getelementptr inbounds nuw i8, ptr %4, i64 8
  br label %37

37:                                               ; preds = %37, %31
  %38 = phi i32 [ %45, %37 ], [ %2, %31 ]
  %39 = phi ptr [ %44, %37 ], [ %36, %31 ]
  %40 = and i32 %38, 15
  %41 = zext nneg i32 %40 to i64
  %42 = getelementptr inbounds nuw i8, ptr @.str.24, i64 %41
  %43 = load i8, ptr %42, align 1, !tbaa !10
  %44 = getelementptr inbounds i8, ptr %39, i64 -1
  store i8 %43, ptr %44, align 1, !tbaa !10
  %45 = lshr i32 %38, 4
  %46 = icmp ult i32 %38, 16
  br i1 %46, label %47, label %37, !llvm.loop !144

47:                                               ; preds = %37
  %48 = getelementptr inbounds nuw i8, ptr %5, i64 24
  br label %49

49:                                               ; preds = %74, %47
  %50 = phi i64 [ 0, %47 ], [ %77, %74 ]
  %51 = getelementptr i8, ptr %4, i64 %50
  %52 = sub nsw i64 8, %50
  %53 = icmp slt i64 %50, 9
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

55:                                               ; preds = %49
  %56 = load i64, ptr %6, align 8, !tbaa !37
  %57 = add i64 %56, %52
  %58 = load i64, ptr %9, align 8, !tbaa !18
  %59 = icmp ugt i64 %57, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = load ptr, ptr %48, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %57)
  %62 = load i64, ptr %9, align 8, !tbaa !18
  %63 = load i64, ptr %6, align 8, !tbaa !37
  br label %64

64:                                               ; preds = %60, %55
  %65 = phi i64 [ %56, %55 ], [ %63, %60 ]
  %66 = phi i64 [ %58, %55 ], [ %62, %60 ]
  %67 = sub i64 %66, %65
  %68 = tail call i64 @llvm.umin.i64(i64 %67, i64 %52)
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = load ptr, ptr %5, align 8, !tbaa !17
  %72 = getelementptr i8, ptr %71, i64 %65
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %72, ptr align 1 %51, i64 %68, i1 false), !tbaa !10
  %73 = load i64, ptr %6, align 8, !tbaa !37
  br label %74

74:                                               ; preds = %70, %64
  %75 = phi i64 [ %73, %70 ], [ %65, %64 ]
  %76 = add i64 %75, %68
  store i64 %76, ptr %6, align 8, !tbaa !37
  %77 = add nuw nsw i64 %68, %50
  %78 = icmp eq i64 %77, 8
  br i1 %78, label %79, label %49, !llvm.loop !77

79:                                               ; preds = %74
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #30
  ret i64 %0
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %0, i64 %1, ptr noundef %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %4 = alloca %"class.fmt::v11::basic_memory_buffer.13", align 8
  %5 = inttoptr i64 %1 to ptr
  %6 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %7 = load i64, ptr %6, align 8, !tbaa !39
  %8 = trunc i64 %7 to i32
  call void @llvm.lifetime.start.p0(i64 2040, ptr nonnull %4) #30
  %9 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %11 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIiLy500ENS0_6detail9allocatorIiEEE4growERNS2_6bufferIiEEy, ptr %10, align 8, !tbaa !145
  %12 = getelementptr inbounds nuw i8, ptr %4, i64 32
  store ptr %12, ptr %4, align 8, !tbaa !147
  store i64 500, ptr %9, align 8, !tbaa !148
  store i64 1, ptr %11, align 8, !tbaa !149
  store i32 0, ptr %12, align 8, !tbaa !11
  %13 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %14 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %15 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %16 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %17 = load i8, ptr %15, align 8
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  %20 = load i64, ptr %16, align 8
  %21 = lshr i8 %17, 1
  %22 = zext nneg i8 %21 to i64
  %23 = select i1 %19, i64 %22, i64 %20
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %95, label %25

25:                                               ; preds = %3
  %26 = load i8, ptr %0, align 8, !noalias !150
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  %29 = load ptr, ptr %13, align 8, !noalias !150
  %30 = select i1 %28, ptr %14, ptr %29
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 8
  br label %32

32:                                               ; preds = %25, %77
  %33 = phi ptr [ %12, %25 ], [ %78, %77 ]
  %34 = phi i64 [ 1, %25 ], [ %79, %77 ]
  %35 = phi i32 [ 0, %25 ], [ %61, %77 ]
  %36 = phi ptr [ %30, %25 ], [ %59, %77 ]
  %37 = load i8, ptr %0, align 8
  %38 = and i8 %37, 1
  %39 = icmp eq i8 %38, 0
  %40 = load ptr, ptr %13, align 8
  %41 = select i1 %39, ptr %14, ptr %40
  %42 = load i64, ptr %31, align 8
  %43 = lshr i8 %37, 1
  %44 = zext nneg i8 %43 to i64
  %45 = select i1 %39, i64 %44, i64 %42
  %46 = getelementptr inbounds nuw i8, ptr %41, i64 %45
  %47 = icmp eq ptr %36, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %32
  %49 = getelementptr inbounds i8, ptr %46, i64 -1
  %50 = load i8, ptr %49, align 1, !tbaa !10
  br label %57

51:                                               ; preds = %32
  %52 = load i8, ptr %36, align 1, !tbaa !10
  %53 = add i8 %52, -127
  %54 = icmp ult i8 %53, -126
  br i1 %54, label %90, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds nuw i8, ptr %36, i64 1
  br label %57

57:                                               ; preds = %48, %55
  %58 = phi i8 [ %50, %48 ], [ %52, %55 ]
  %59 = phi ptr [ %36, %48 ], [ %56, %55 ]
  %60 = sext i8 %58 to i32
  %61 = add nsw i32 %35, %60
  %62 = icmp ne i32 %61, 0
  %63 = icmp slt i32 %61, %8
  %64 = and i1 %62, %63
  br i1 %64, label %67, label %90

65:                                               ; preds = %71
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %274

67:                                               ; preds = %57
  %68 = add i64 %34, 1
  %69 = load i64, ptr %9, align 8, !tbaa !148
  %70 = icmp ugt i64 %68, %69
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = load ptr, ptr %10, align 8, !tbaa !145
  invoke void %72(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %68)
          to label %73 unwind label %65

73:                                               ; preds = %71
  %74 = load i64, ptr %11, align 8, !tbaa !149
  %75 = add i64 %74, 1
  %76 = load ptr, ptr %4, align 8, !tbaa !147
  br label %77

77:                                               ; preds = %73, %67
  %78 = phi ptr [ %33, %67 ], [ %76, %73 ]
  %79 = phi i64 [ %68, %67 ], [ %75, %73 ]
  %80 = phi i64 [ %34, %67 ], [ %74, %73 ]
  store i64 %79, ptr %11, align 8, !tbaa !149
  %81 = getelementptr inbounds nuw i32, ptr %78, i64 %80
  store i32 %61, ptr %81, align 4, !tbaa !11
  %82 = load i8, ptr %15, align 8
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  %85 = load i64, ptr %16, align 8
  %86 = lshr i8 %82, 1
  %87 = zext nneg i8 %86 to i64
  %88 = select i1 %84, i64 %87, i64 %85
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %32

90:                                               ; preds = %51, %77, %57
  %91 = phi ptr [ %33, %51 ], [ %78, %77 ], [ %33, %57 ]
  %92 = phi i64 [ %34, %51 ], [ %79, %77 ], [ %34, %57 ]
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, -1
  br label %95

95:                                               ; preds = %90, %3
  %96 = phi ptr [ %91, %90 ], [ %12, %3 ]
  %97 = phi i32 [ %94, %90 ], [ 0, %3 ]
  %98 = icmp sgt i32 %8, 0
  br i1 %98, label %99, label %108

99:                                               ; preds = %95
  %100 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %101 = getelementptr inbounds nuw i8, ptr %0, i64 25
  %102 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %103 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %104 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %105 = and i64 %7, 2147483647
  br label %113

106:                                              ; preds = %265
  %107 = load ptr, ptr %4, align 8, !tbaa !147
  br label %108

108:                                              ; preds = %106, %95
  %109 = phi ptr [ %107, %106 ], [ %96, %95 ]
  %110 = icmp eq ptr %109, %12
  br i1 %110, label %112, label %111

111:                                              ; preds = %108
  call void @free(ptr noundef %109)
  br label %112

112:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0(i64 2040, ptr nonnull %4) #30
  ret i64 %1

113:                                              ; preds = %99, %265
  %114 = phi i64 [ 0, %99 ], [ %270, %265 ]
  %115 = phi i32 [ %97, %99 ], [ %252, %265 ]
  %116 = sub i64 %7, %114
  %117 = load ptr, ptr %4, align 8, !tbaa !147
  %118 = sext i32 %115 to i64
  %119 = getelementptr inbounds i32, ptr %117, i64 %118
  %120 = load i32, ptr %119, align 4, !tbaa !11
  %121 = trunc i64 %116 to i32
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %251

123:                                              ; preds = %113
  %124 = load i8, ptr %15, align 8
  %125 = and i8 %124, 1
  %126 = icmp eq i8 %125, 0
  %127 = load ptr, ptr %100, align 8
  %128 = select i1 %126, ptr %101, ptr %127
  %129 = load i64, ptr %16, align 8
  %130 = lshr i8 %124, 1
  %131 = zext nneg i8 %130 to i64
  %132 = select i1 %126, i64 %131, i64 %129
  %133 = getelementptr inbounds nuw i8, ptr %128, i64 %132
  %134 = icmp samesign eq i64 %132, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %123
  %136 = add nsw i32 %115, -1
  br label %251

137:                                              ; preds = %123
  %138 = ptrtoint ptr %133 to i64
  br label %139

139:                                              ; preds = %221, %137
  %140 = phi ptr [ %128, %137 ], [ %224, %221 ]
  %141 = ptrtoint ptr %140 to i64
  %142 = sub i64 %138, %141
  %143 = icmp sgt i64 %142, -1
  br i1 %143, label %146, label %144

144:                                              ; preds = %139
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %145 unwind label %247

145:                                              ; preds = %144
  unreachable

146:                                              ; preds = %139
  %147 = load i64, ptr %102, align 8, !tbaa !37
  %148 = add i64 %147, %142
  %149 = load i64, ptr %103, align 8, !tbaa !18
  %150 = icmp ugt i64 %148, %149
  br i1 %150, label %151, label %156

151:                                              ; preds = %146
  %152 = load ptr, ptr %104, align 8, !tbaa !13
  invoke void %152(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %148)
          to label %153 unwind label %245

153:                                              ; preds = %151
  %154 = load i64, ptr %103, align 8, !tbaa !18
  %155 = load i64, ptr %102, align 8, !tbaa !37
  br label %156

156:                                              ; preds = %153, %146
  %157 = phi i64 [ %147, %146 ], [ %155, %153 ]
  %158 = phi i64 [ %149, %146 ], [ %154, %153 ]
  %159 = sub i64 %158, %157
  %160 = call i64 @llvm.umin.i64(i64 %159, i64 %142)
  %161 = load ptr, ptr %5, align 8, !tbaa !17
  %162 = ptrtoint ptr %161 to i64
  %163 = getelementptr inbounds nuw i8, ptr %161, i64 %157
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %221, label %165

165:                                              ; preds = %156
  %166 = icmp ult i64 %160, 4
  br i1 %166, label %167, label %184

167:                                              ; preds = %204, %217, %184, %165
  %168 = phi i64 [ %191, %204 ], [ 0, %165 ], [ 0, %184 ], [ %209, %217 ]
  %169 = and i64 %160, 3
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %167, %171
  %172 = phi i64 [ %177, %171 ], [ %168, %167 ]
  %173 = phi i64 [ %178, %171 ], [ 0, %167 ]
  %174 = getelementptr inbounds nuw i8, ptr %140, i64 %172
  %175 = load i8, ptr %174, align 1, !tbaa !10
  %176 = getelementptr inbounds nuw i8, ptr %163, i64 %172
  store i8 %175, ptr %176, align 1, !tbaa !10
  %177 = add nuw i64 %172, 1
  %178 = add i64 %173, 1
  %179 = icmp eq i64 %178, %169
  br i1 %179, label %180, label %171, !llvm.loop !153

180:                                              ; preds = %171, %167
  %181 = phi i64 [ %168, %167 ], [ %177, %171 ]
  %182 = sub nsw i64 %168, %160
  %183 = icmp ugt i64 %182, -4
  br i1 %183, label %219, label %226

184:                                              ; preds = %165
  %185 = add i64 %157, %162
  %186 = sub i64 %185, %141
  %187 = icmp ult i64 %186, 32
  br i1 %187, label %167, label %188

188:                                              ; preds = %184
  %189 = icmp ult i64 %160, 32
  br i1 %189, label %207, label %190

190:                                              ; preds = %188
  %191 = and i64 %160, 9223372036854775776
  br label %192

192:                                              ; preds = %192, %190
  %193 = phi i64 [ 0, %190 ], [ %200, %192 ]
  %194 = getelementptr inbounds nuw i8, ptr %140, i64 %193
  %195 = getelementptr inbounds nuw i8, ptr %194, i64 16
  %196 = load <16 x i8>, ptr %194, align 1, !tbaa !10
  %197 = load <16 x i8>, ptr %195, align 1, !tbaa !10
  %198 = getelementptr inbounds nuw i8, ptr %163, i64 %193
  %199 = getelementptr inbounds nuw i8, ptr %198, i64 16
  store <16 x i8> %196, ptr %198, align 1, !tbaa !10
  store <16 x i8> %197, ptr %199, align 1, !tbaa !10
  %200 = add nuw i64 %193, 32
  %201 = icmp eq i64 %200, %191
  br i1 %201, label %202, label %192, !llvm.loop !154

202:                                              ; preds = %192
  %203 = icmp eq i64 %160, %191
  br i1 %203, label %219, label %204

204:                                              ; preds = %202
  %205 = and i64 %160, 28
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %167, label %207

207:                                              ; preds = %204, %188
  %208 = phi i64 [ %191, %204 ], [ 0, %188 ]
  %209 = and i64 %160, 9223372036854775804
  br label %210

210:                                              ; preds = %210, %207
  %211 = phi i64 [ %208, %207 ], [ %215, %210 ]
  %212 = getelementptr inbounds nuw i8, ptr %140, i64 %211
  %213 = load <4 x i8>, ptr %212, align 1, !tbaa !10
  %214 = getelementptr inbounds nuw i8, ptr %163, i64 %211
  store <4 x i8> %213, ptr %214, align 1, !tbaa !10
  %215 = add nuw i64 %211, 4
  %216 = icmp eq i64 %215, %209
  br i1 %216, label %217, label %210, !llvm.loop !155

217:                                              ; preds = %210
  %218 = icmp eq i64 %160, %209
  br i1 %218, label %219, label %167

219:                                              ; preds = %180, %226, %217, %202
  %220 = load i64, ptr %102, align 8, !tbaa !37
  br label %221

221:                                              ; preds = %219, %156
  %222 = phi i64 [ %220, %219 ], [ %157, %156 ]
  %223 = add i64 %222, %160
  store i64 %223, ptr %102, align 8, !tbaa !37
  %224 = getelementptr inbounds nuw i8, ptr %140, i64 %160
  %225 = icmp eq ptr %224, %133
  br i1 %225, label %249, label %139, !llvm.loop !77

226:                                              ; preds = %180, %226
  %227 = phi i64 [ %243, %226 ], [ %181, %180 ]
  %228 = getelementptr inbounds nuw i8, ptr %140, i64 %227
  %229 = load i8, ptr %228, align 1, !tbaa !10
  %230 = getelementptr inbounds nuw i8, ptr %163, i64 %227
  store i8 %229, ptr %230, align 1, !tbaa !10
  %231 = add nuw i64 %227, 1
  %232 = getelementptr inbounds nuw i8, ptr %140, i64 %231
  %233 = load i8, ptr %232, align 1, !tbaa !10
  %234 = getelementptr inbounds nuw i8, ptr %163, i64 %231
  store i8 %233, ptr %234, align 1, !tbaa !10
  %235 = add nuw i64 %227, 2
  %236 = getelementptr inbounds nuw i8, ptr %140, i64 %235
  %237 = load i8, ptr %236, align 1, !tbaa !10
  %238 = getelementptr inbounds nuw i8, ptr %163, i64 %235
  store i8 %237, ptr %238, align 1, !tbaa !10
  %239 = add nuw i64 %227, 3
  %240 = getelementptr inbounds nuw i8, ptr %140, i64 %239
  %241 = load i8, ptr %240, align 1, !tbaa !10
  %242 = getelementptr inbounds nuw i8, ptr %163, i64 %239
  store i8 %241, ptr %242, align 1, !tbaa !10
  %243 = add nuw i64 %227, 4
  %244 = icmp eq i64 %243, %160
  br i1 %244, label %219, label %226, !llvm.loop !156

245:                                              ; preds = %151
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %274

247:                                              ; preds = %144
  %248 = landingpad { ptr, i32 }
          cleanup
  br label %274

249:                                              ; preds = %221
  %250 = add nsw i32 %115, -1
  br label %251

251:                                              ; preds = %249, %113, %135
  %252 = phi i32 [ %250, %249 ], [ %136, %135 ], [ %115, %113 ]
  %253 = load ptr, ptr %2, align 8, !tbaa !38
  %254 = getelementptr inbounds nuw i8, ptr %253, i64 %114
  %255 = load i8, ptr %254, align 1, !tbaa !10
  %256 = load i64, ptr %102, align 8, !tbaa !37
  %257 = add i64 %256, 1
  %258 = load i64, ptr %103, align 8, !tbaa !18
  %259 = icmp ugt i64 %257, %258
  br i1 %259, label %260, label %265

260:                                              ; preds = %251
  %261 = load ptr, ptr %104, align 8, !tbaa !13
  invoke void %261(ptr noundef nonnull align 8 dereferenceable(32) %5, i64 noundef %257)
          to label %262 unwind label %272

262:                                              ; preds = %260
  %263 = load i64, ptr %102, align 8, !tbaa !37
  %264 = add i64 %263, 1
  br label %265

265:                                              ; preds = %262, %251
  %266 = phi i64 [ %257, %251 ], [ %264, %262 ]
  %267 = phi i64 [ %256, %251 ], [ %263, %262 ]
  %268 = load ptr, ptr %5, align 8, !tbaa !17
  store i64 %266, ptr %102, align 8, !tbaa !37
  %269 = getelementptr inbounds nuw i8, ptr %268, i64 %267
  store i8 %255, ptr %269, align 1, !tbaa !10
  %270 = add nuw nsw i64 %114, 1
  %271 = icmp eq i64 %270, %105
  br i1 %271, label %106, label %113, !llvm.loop !157

272:                                              ; preds = %260
  %273 = landingpad { ptr, i32 }
          cleanup
  br label %274

274:                                              ; preds = %245, %247, %65, %272
  %275 = phi { ptr, i32 } [ %66, %65 ], [ %273, %272 ], [ %246, %245 ], [ %248, %247 ]
  %276 = load ptr, ptr %4, align 8, !tbaa !147
  %277 = icmp eq ptr %276, %12
  br i1 %277, label %279, label %278

278:                                              ; preds = %274
  call void @free(ptr noundef %276)
  br label %279

279:                                              ; preds = %274, %278
  call void @llvm.lifetime.end.p0(i64 2040, ptr nonnull %4) #30
  resume { ptr, i32 } %275
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1119basic_memory_bufferIiLy500ENS0_6detail9allocatorIiEEE4growERNS2_6bufferIiEEy(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1) #0 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %4 = load i64, ptr %3, align 8, !tbaa !148
  %5 = lshr i64 %4, 1
  %6 = add i64 %5, %4
  %7 = icmp ugt i64 %1, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = icmp ugt i64 %6, 4611686018427387903
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = tail call noundef i64 @llvm.umax.i64(i64 %1, i64 4611686018427387903)
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i64 [ %11, %10 ], [ %1, %2 ]
  %14 = icmp ugt i64 %13, 4611686018427387903
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 746, ptr noundef nonnull @.str.14) #31
  unreachable

16:                                               ; preds = %8, %12
  %17 = phi i64 [ %13, %12 ], [ %6, %8 ]
  %18 = load ptr, ptr %0, align 8, !tbaa !147
  %19 = shl nuw i64 %17, 2
  %20 = tail call ptr @malloc(i64 noundef %19) #32
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call ptr @__cxa_allocate_exception(i64 8) #30
  tail call void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %23) #30
  tail call void @__cxa_throw(ptr nonnull %23, ptr nonnull @_ZTISt9bad_alloc, ptr nonnull @_ZNSt9bad_allocD1Ev) #31
  unreachable

24:                                               ; preds = %16
  %25 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %26 = load i64, ptr %25, align 8, !tbaa !149
  %27 = icmp ule i64 %26, %17
  tail call void @llvm.assume(i1 %27)
  %28 = shl i64 %26, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %20, ptr align 4 %18, i64 %28, i1 false)
  store ptr %20, ptr %0, align 8, !tbaa !147
  store i64 %17, ptr %3, align 8, !tbaa !148
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %30 = icmp eq ptr %18, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void @free(ptr noundef %18)
  br label %32

32:                                               ; preds = %31, %24
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEocEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EE(i64 %0, ptr noundef %1, i32 noundef %2, ptr noundef nonnull align 4 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(48) %4) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca %class.anon.12, align 1
  %7 = alloca i32, align 4
  %8 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %9 = alloca i128, align 16
  %10 = alloca %class.anon.21, align 8
  %11 = load i128, ptr %1, align 16, !tbaa !49
  store i32 %2, ptr %7, align 4, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %8) #30
  %12 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %13 = getelementptr inbounds nuw i8, ptr %8, i64 24
  %14 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 0, ptr %14, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds nuw i8, ptr %8, i64 32
  store ptr %15, ptr %8, align 8, !tbaa !17
  store i64 500, ptr %12, align 8, !tbaa !18
  %16 = load i32, ptr %3, align 4, !tbaa !53
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 7
  switch i8 %18, label %19 [
    i8 0, label %23
    i8 3, label %23
    i8 4, label %48
    i8 5, label %92
    i8 6, label %133
    i8 7, label %176
  ]

19:                                               ; preds = %5
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1902, ptr noundef nonnull @.str.14) #31
          to label %20 unwind label %21

20:                                               ; preds = %19
  unreachable

21:                                               ; preds = %160, %176, %43, %19
  %22 = landingpad { ptr, i32 }
          cleanup
  br label %257

23:                                               ; preds = %5, %5
  %24 = icmp ult i128 %11, 10
  br i1 %24, label %43, label %25

25:                                               ; preds = %23, %39
  %26 = phi i32 [ %41, %39 ], [ 1, %23 ]
  %27 = phi i128 [ %40, %39 ], [ %11, %23 ]
  %28 = icmp ult i128 %27, 100
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = add nuw nsw i32 %26, 1
  br label %43

31:                                               ; preds = %25
  %32 = icmp ult i128 %27, 1000
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = add nuw nsw i32 %26, 2
  br label %43

35:                                               ; preds = %31
  %36 = icmp ult i128 %27, 10000
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = add nuw nsw i32 %26, 3
  br label %43

39:                                               ; preds = %35
  %40 = udiv i128 %27, 10000
  %41 = add nuw nsw i32 %26, 4
  %42 = icmp ult i128 %27, 100000
  br i1 %42, label %43, label %25, !llvm.loop !80

43:                                               ; preds = %39, %37, %33, %29, %23
  %44 = phi i32 [ %30, %29 ], [ %34, %33 ], [ %38, %37 ], [ 1, %23 ], [ %41, %39 ]
  %45 = ptrtoint ptr %8 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #30
  store i128 %11, ptr %9, align 16, !tbaa !49
  %46 = invoke i64 @_ZN3fmt3v116detail14format_decimalIcoNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %45, ptr noundef nonnull %9, i32 noundef %44)
          to label %47 unwind label %21

47:                                               ; preds = %43
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #30
  br label %184

48:                                               ; preds = %5
  %49 = and i32 %16, 8192
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %48
  %52 = and i32 %16, 4096
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 30768, i32 22576
  %55 = icmp eq i32 %2, 0
  %56 = shl nuw nsw i32 %54, 8
  %57 = select i1 %55, i32 %54, i32 %56
  %58 = or i32 %57, %2
  %59 = add i32 %58, 33554432
  store i32 %59, ptr %7, align 4, !tbaa !11
  br label %60

60:                                               ; preds = %51, %48
  %61 = phi i32 [ %59, %51 ], [ %2, %48 ]
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i128 [ %11, %60 ], [ %66, %62 ]
  %64 = phi i32 [ 0, %60 ], [ %65, %62 ]
  %65 = add nuw nsw i32 %64, 1
  %66 = lshr i128 %63, 4
  %67 = icmp ult i128 %63, 16
  br i1 %67, label %68, label %62, !llvm.loop !158

68:                                               ; preds = %62
  %69 = and i32 %16, 4096
  %70 = icmp eq i32 %69, 0
  %71 = zext nneg i32 %65 to i64
  %72 = icmp samesign ugt i32 %64, 499
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = call i64 @llvm.umax.i64(i64 %71, i64 750)
  %75 = call ptr @malloc(i64 noundef %74) #32
  %76 = icmp eq ptr %75, null
  br i1 %76, label %160, label %77

77:                                               ; preds = %73
  store ptr %75, ptr %8, align 8, !tbaa !17
  store i64 %74, ptr %12, align 8, !tbaa !18
  br label %78

78:                                               ; preds = %68, %77
  %79 = phi ptr [ %75, %77 ], [ %15, %68 ]
  store i64 %71, ptr %14, align 8, !tbaa !37
  %80 = getelementptr inbounds nuw i8, ptr %79, i64 %71
  %81 = select i1 %70, ptr @.str.24, ptr @.str.23
  br label %82

82:                                               ; preds = %82, %78
  %83 = phi i128 [ %90, %82 ], [ %11, %78 ]
  %84 = phi ptr [ %89, %82 ], [ %80, %78 ]
  %85 = trunc i128 %83 to i64
  %86 = and i64 %85, 15
  %87 = getelementptr inbounds nuw i8, ptr %81, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !10
  %89 = getelementptr inbounds i8, ptr %84, i64 -1
  store i8 %88, ptr %89, align 1, !tbaa !10
  %90 = lshr i128 %83, 4
  %91 = icmp ult i128 %83, 16
  br i1 %91, label %184, label %82, !llvm.loop !159

92:                                               ; preds = %5, %92
  %93 = phi i128 [ %96, %92 ], [ %11, %5 ]
  %94 = phi i32 [ %95, %92 ], [ 0, %5 ]
  %95 = add nuw nsw i32 %94, 1
  %96 = lshr i128 %93, 3
  %97 = icmp ult i128 %93, 8
  br i1 %97, label %98, label %92, !llvm.loop !160

98:                                               ; preds = %92
  %99 = and i32 %16, 8192
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds nuw i8, ptr %3, i64 12
  %103 = load i32, ptr %102, align 4, !tbaa !55
  %104 = icmp sle i32 %103, %95
  %105 = icmp ne i128 %11, 0
  %106 = select i1 %104, i1 %105, i1 false
  br i1 %106, label %107, label %112

107:                                              ; preds = %101
  %108 = icmp eq i32 %2, 0
  %109 = select i1 %108, i32 48, i32 12288
  %110 = or i32 %109, %2
  %111 = add i32 %110, 16777216
  store i32 %111, ptr %7, align 4, !tbaa !11
  br label %112

112:                                              ; preds = %107, %101, %98
  %113 = phi i32 [ %111, %107 ], [ %2, %101 ], [ %2, %98 ]
  %114 = zext nneg i32 %95 to i64
  %115 = icmp samesign ugt i32 %94, 499
  br i1 %115, label %116, label %121

116:                                              ; preds = %112
  %117 = call i64 @llvm.umax.i64(i64 %114, i64 750)
  %118 = call ptr @malloc(i64 noundef %117) #32
  %119 = icmp eq ptr %118, null
  br i1 %119, label %160, label %120

120:                                              ; preds = %116
  store ptr %118, ptr %8, align 8, !tbaa !17
  store i64 %117, ptr %12, align 8, !tbaa !18
  br label %121

121:                                              ; preds = %112, %120
  %122 = phi ptr [ %118, %120 ], [ %15, %112 ]
  store i64 %114, ptr %14, align 8, !tbaa !37
  %123 = getelementptr inbounds nuw i8, ptr %122, i64 %114
  br label %124

124:                                              ; preds = %124, %121
  %125 = phi i128 [ %131, %124 ], [ %11, %121 ]
  %126 = phi ptr [ %130, %124 ], [ %123, %121 ]
  %127 = trunc i128 %125 to i8
  %128 = and i8 %127, 7
  %129 = or disjoint i8 %128, 48
  %130 = getelementptr inbounds i8, ptr %126, i64 -1
  store i8 %129, ptr %130, align 1, !tbaa !10
  %131 = lshr i128 %125, 3
  %132 = icmp ult i128 %125, 8
  br i1 %132, label %184, label %124, !llvm.loop !159

133:                                              ; preds = %5
  %134 = and i32 %16, 8192
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %133
  %137 = and i32 %16, 4096
  %138 = icmp eq i32 %137, 0
  %139 = select i1 %138, i32 25136, i32 16944
  %140 = icmp eq i32 %2, 0
  %141 = shl nuw nsw i32 %139, 8
  %142 = select i1 %140, i32 %139, i32 %141
  %143 = or i32 %142, %2
  %144 = add i32 %143, 33554432
  store i32 %144, ptr %7, align 4, !tbaa !11
  br label %145

145:                                              ; preds = %136, %133
  %146 = phi i32 [ %144, %136 ], [ %2, %133 ]
  br label %147

147:                                              ; preds = %147, %145
  %148 = phi i128 [ %11, %145 ], [ %151, %147 ]
  %149 = phi i32 [ 0, %145 ], [ %150, %147 ]
  %150 = add nuw nsw i32 %149, 1
  %151 = lshr i128 %148, 1
  %152 = icmp ult i128 %148, 2
  br i1 %152, label %153, label %147, !llvm.loop !161

153:                                              ; preds = %147
  %154 = zext nneg i32 %150 to i64
  %155 = icmp samesign ugt i32 %149, 499
  br i1 %155, label %156, label %164

156:                                              ; preds = %153
  %157 = call i64 @llvm.umax.i64(i64 %154, i64 750)
  %158 = call ptr @malloc(i64 noundef %157) #32
  %159 = icmp eq ptr %158, null
  br i1 %159, label %160, label %163

160:                                              ; preds = %156, %116, %73
  %161 = call ptr @__cxa_allocate_exception(i64 8) #30
  call void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %161) #30
  invoke void @__cxa_throw(ptr nonnull %161, ptr nonnull @_ZTISt9bad_alloc, ptr nonnull @_ZNSt9bad_allocD1Ev) #31
          to label %162 unwind label %21

162:                                              ; preds = %160
  unreachable

163:                                              ; preds = %156
  store ptr %158, ptr %8, align 8, !tbaa !17
  store i64 %157, ptr %12, align 8, !tbaa !18
  br label %164

164:                                              ; preds = %153, %163
  %165 = phi ptr [ %158, %163 ], [ %15, %153 ]
  store i64 %154, ptr %14, align 8, !tbaa !37
  %166 = getelementptr inbounds nuw i8, ptr %165, i64 %154
  br label %167

167:                                              ; preds = %167, %164
  %168 = phi i128 [ %174, %167 ], [ %11, %164 ]
  %169 = phi ptr [ %173, %167 ], [ %166, %164 ]
  %170 = trunc i128 %168 to i8
  %171 = and i8 %170, 1
  %172 = or disjoint i8 %171, 48
  %173 = getelementptr inbounds i8, ptr %169, i64 -1
  store i8 %172, ptr %173, align 1, !tbaa !10
  %174 = lshr i128 %168, 1
  %175 = icmp ult i128 %168, 2
  br i1 %175, label %184, label %167, !llvm.loop !159

176:                                              ; preds = %5
  %177 = trunc i128 %11 to i8
  %178 = and i32 %16, 7
  %179 = icmp eq i32 %178, 1
  %180 = zext i1 %179 to i8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #30
  store i8 %180, ptr %6, align 1, !tbaa !112
  %181 = getelementptr inbounds nuw i8, ptr %6, i64 1
  store i8 %177, ptr %181, align 1, !tbaa !115
  %182 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %3, i64 noundef 1, i64 noundef 1, ptr noundef nonnull align 1 dereferenceable(2) %6)
          to label %183 unwind label %21

183:                                              ; preds = %176
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #30
  br label %251

184:                                              ; preds = %167, %124, %82, %47
  %185 = phi i32 [ %2, %47 ], [ %61, %82 ], [ %113, %124 ], [ %146, %167 ]
  %186 = phi i32 [ %44, %47 ], [ %65, %82 ], [ %95, %124 ], [ %150, %167 ]
  %187 = icmp sgt i32 %186, -1
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %189 unwind label %247

189:                                              ; preds = %188
  unreachable

190:                                              ; preds = %184
  %191 = lshr i32 %185, 24
  %192 = add nuw i32 %191, %186
  %193 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %194 = load i8, ptr %193, align 8
  %195 = and i8 %194, 1
  %196 = icmp eq i8 %195, 0
  %197 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %198 = load i64, ptr %197, align 8
  %199 = lshr i8 %194, 1
  %200 = zext nneg i8 %199 to i64
  %201 = select i1 %196, i64 %200, i64 %198
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %239, label %203

203:                                              ; preds = %190
  %204 = load i8, ptr %4, align 8, !noalias !162
  %205 = and i8 %204, 1
  %206 = icmp eq i8 %205, 0
  %207 = getelementptr inbounds nuw i8, ptr %4, i64 1
  %208 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %209 = load ptr, ptr %208, align 8, !noalias !162
  %210 = select i1 %206, ptr %207, ptr %209
  %211 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %212 = load i64, ptr %211, align 8
  %213 = lshr i8 %204, 1
  %214 = zext nneg i8 %213 to i64
  %215 = select i1 %206, i64 %214, i64 %212
  %216 = getelementptr inbounds nuw i8, ptr %210, i64 %215
  %217 = getelementptr inbounds i8, ptr %216, i64 -1
  br label %218

218:                                              ; preds = %237, %203
  %219 = phi i32 [ 0, %203 ], [ %238, %237 ]
  %220 = phi ptr [ %210, %203 ], [ %233, %237 ]
  %221 = phi i32 [ 0, %203 ], [ %235, %237 ]
  %222 = icmp eq ptr %220, %216
  br i1 %222, label %223, label %225

223:                                              ; preds = %218
  %224 = load i8, ptr %217, align 1, !tbaa !10
  br label %231

225:                                              ; preds = %218
  %226 = load i8, ptr %220, align 1, !tbaa !10
  %227 = add i8 %226, -127
  %228 = icmp ult i8 %227, -126
  br i1 %228, label %239, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds nuw i8, ptr %220, i64 1
  br label %231

231:                                              ; preds = %229, %223
  %232 = phi i8 [ %226, %229 ], [ %224, %223 ]
  %233 = phi ptr [ %230, %229 ], [ %220, %223 ]
  %234 = sext i8 %232 to i32
  %235 = add nsw i32 %221, %234
  %236 = icmp sgt i32 %186, %235
  br i1 %236, label %237, label %239

237:                                              ; preds = %231
  %238 = add nuw nsw i32 %219, 1
  br label %218

239:                                              ; preds = %225, %231, %190
  %240 = phi i32 [ 0, %190 ], [ %219, %231 ], [ %219, %225 ]
  %241 = add i32 %192, %240
  %242 = zext i32 %241 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #30
  store ptr %7, ptr %10, align 8, !tbaa !119
  %243 = getelementptr inbounds nuw i8, ptr %10, i64 8
  store ptr %4, ptr %243, align 8, !tbaa !121
  %244 = getelementptr inbounds nuw i8, ptr %10, i64 16
  store ptr %8, ptr %244, align 8, !tbaa !123
  %245 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEEZNS1_9write_intIS5_ocEET_S7_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS5_E_EESD_SD_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %3, i64 noundef %242, i64 noundef %242, ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %246 unwind label %249

246:                                              ; preds = %239
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #30
  br label %251

247:                                              ; preds = %188
  %248 = landingpad { ptr, i32 }
          cleanup
  br label %257

249:                                              ; preds = %239
  %250 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #30
  br label %257

251:                                              ; preds = %183, %246
  %252 = phi i64 [ %245, %246 ], [ %182, %183 ]
  %253 = load ptr, ptr %8, align 8, !tbaa !17
  %254 = icmp eq ptr %253, %15
  br i1 %254, label %256, label %255

255:                                              ; preds = %251
  call void @free(ptr noundef %253)
  br label %256

256:                                              ; preds = %251, %255
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  ret i64 %252

257:                                              ; preds = %247, %249, %21
  %258 = phi { ptr, i32 } [ %22, %21 ], [ %250, %249 ], [ %248, %247 ]
  %259 = load ptr, ptr %8, align 8, !tbaa !17
  %260 = icmp eq ptr %259, %15
  br i1 %260, label %262, label %261

261:                                              ; preds = %257
  call void @free(ptr noundef %259)
  br label %262

262:                                              ; preds = %257, %261
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  resume { ptr, i32 } %258
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEEZNS1_9write_intIS5_ocEET_S7_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS5_E_EESD_SD_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.fmt::v11::basic_string_view", align 8
  %7 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %8 = load i32, ptr %7, align 4, !tbaa !125
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

11:                                               ; preds = %5
  %12 = zext nneg i32 %8 to i64
  %13 = tail call i64 @llvm.usub.sat.i64(i64 %12, i64 %3)
  %14 = load i32, ptr %1, align 4, !tbaa !53
  %15 = lshr i32 %14, 3
  %16 = and i32 %15, 7
  %17 = zext nneg i32 %16 to i64
  %18 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !10
  %20 = sext i8 %19 to i64
  %21 = and i64 %20, 4294967295
  %22 = lshr i64 %13, %21
  %23 = sub nsw i64 %13, %22
  %24 = lshr i32 %14, 15
  %25 = and i32 %24, 7
  %26 = zext nneg i32 %25 to i64
  %27 = mul nuw nsw i64 %13, %26
  %28 = inttoptr i64 %0 to ptr
  %29 = getelementptr inbounds nuw i8, ptr %28, i64 8
  %30 = load i64, ptr %29, align 8, !tbaa !37
  %31 = add i64 %30, %2
  %32 = add i64 %31, %27
  %33 = getelementptr inbounds nuw i8, ptr %28, i64 16
  %34 = load i64, ptr %33, align 8, !tbaa !18
  %35 = icmp ugt i64 %32, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %11
  %37 = getelementptr inbounds nuw i8, ptr %28, i64 24
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  tail call void %38(ptr noundef nonnull align 8 dereferenceable(32) %28, i64 noundef %32)
  br label %39

39:                                               ; preds = %11, %36
  %40 = icmp eq i64 %22, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %43 = inttoptr i64 %42 to ptr
  br label %44

44:                                               ; preds = %41, %39
  %45 = phi ptr [ %43, %41 ], [ %28, %39 ]
  %46 = phi i64 [ %42, %41 ], [ %0, %39 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  %47 = load ptr, ptr %4, align 8, !tbaa !165
  %48 = load i32, ptr %47, align 4, !tbaa !11
  %49 = and i32 %48, 16777215
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds nuw i8, ptr %45, i64 8
  %53 = getelementptr inbounds nuw i8, ptr %45, i64 16
  %54 = getelementptr inbounds nuw i8, ptr %45, i64 24
  br label %55

55:                                               ; preds = %66, %51
  %56 = phi i32 [ %49, %51 ], [ %71, %66 ]
  %57 = trunc i32 %56 to i8
  %58 = load i64, ptr %52, align 8, !tbaa !37
  %59 = add i64 %58, 1
  %60 = load i64, ptr %53, align 8, !tbaa !18
  %61 = icmp ugt i64 %59, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %55
  %63 = load ptr, ptr %54, align 8, !tbaa !13
  tail call void %63(ptr noundef nonnull align 8 dereferenceable(32) %45, i64 noundef %59)
  %64 = load i64, ptr %52, align 8, !tbaa !37
  %65 = add i64 %64, 1
  br label %66

66:                                               ; preds = %62, %55
  %67 = phi i64 [ %59, %55 ], [ %65, %62 ]
  %68 = phi i64 [ %58, %55 ], [ %64, %62 ]
  %69 = load ptr, ptr %45, align 8, !tbaa !17
  store i64 %67, ptr %52, align 8, !tbaa !37
  %70 = getelementptr inbounds nuw i8, ptr %69, i64 %68
  store i8 %57, ptr %70, align 1, !tbaa !10
  %71 = lshr i32 %56, 8
  %72 = icmp samesign ult i32 %56, 256
  br i1 %72, label %73, label %55, !llvm.loop !167

73:                                               ; preds = %66, %44
  %74 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %75 = load ptr, ptr %74, align 8, !tbaa !168
  %76 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %77 = load ptr, ptr %76, align 8, !tbaa !169
  %78 = load ptr, ptr %77, align 8, !tbaa !17
  %79 = getelementptr inbounds nuw i8, ptr %77, i64 8
  %80 = load i64, ptr %79, align 8, !tbaa !37
  store ptr %78, ptr %6, align 8, !tbaa !38
  %81 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 %80, ptr %81, align 8, !tbaa !39
  %82 = call i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %75, i64 %46, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  %83 = icmp eq i64 %13, %22
  br i1 %83, label %86, label %84

84:                                               ; preds = %73
  %85 = call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %82, i64 noundef %23, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %86

86:                                               ; preds = %84, %73
  %87 = phi i64 [ %85, %84 ], [ %82, %73 ]
  ret i64 %87
}

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #17 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %4 = icmp ult i64 %2, 23
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %7 = trunc nuw i64 %2 to i8
  %8 = shl nuw nsw i8 %7, 1
  store i8 %8, ptr %0, align 8
  br label %21

9:                                                ; preds = %3
  %10 = icmp ugt i64 %2, -9
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB8ne200100Ev() #31
  unreachable

12:                                               ; preds = %9
  %13 = or i64 %2, 7
  %14 = icmp eq i64 %13, 23
  %15 = add nuw i64 %13, 1
  %16 = select i1 %14, i64 26, i64 %15
  %17 = tail call noalias noundef nonnull ptr @_Znwy(i64 noundef %16) #35, !noalias !170
  %18 = getelementptr inbounds nuw i8, ptr %0, i64 16
  store ptr %17, ptr %18, align 8, !tbaa !10
  %19 = or disjoint i64 %16, 1
  store i64 %19, ptr %0, align 8
  %20 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i64 %2, ptr %20, align 8, !tbaa !10
  br label %21

21:                                               ; preds = %12, %5
  %22 = phi ptr [ %6, %5 ], [ %17, %12 ]
  %23 = add nuw i64 %2, 1
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %22, ptr noundef nonnull align 1 dereferenceable(1) %1, i64 %23, i1 false)
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, i64 %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #5 comdat {
  %4 = alloca %class.anon.12, align 1
  %5 = alloca [32 x i8], align 16
  %6 = ptrtoint ptr %5 to i64
  %7 = alloca %class.anon.28, align 8
  %8 = trunc i64 %1 to i32
  %9 = lshr i64 %1, 32
  %10 = trunc nuw i64 %9 to i32
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #30
  %11 = getelementptr inbounds nuw i8, ptr %5, i64 32
  %12 = load i32, ptr %2, align 4, !tbaa !53
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 7
  switch i8 %14, label %15 [
    i8 0, label %16
    i8 3, label %16
    i8 4, label %62
    i8 5, label %87
    i8 6, label %113
    i8 7, label %135
  ]

15:                                               ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2030, ptr noundef nonnull @.str.14) #31
  unreachable

16:                                               ; preds = %3, %3
  %17 = or i32 %8, 1
  %18 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %17, i1 true)
  %19 = xor i32 %18, 31
  %20 = zext nneg i32 %19 to i64
  %21 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %20
  %22 = load i64, ptr %21, align 8, !tbaa !20
  %23 = and i64 %1, 4294967295
  %24 = add i64 %22, %23
  %25 = lshr i64 %24, 32
  %26 = trunc nuw i64 %25 to i32
  %27 = icmp sgt i32 %26, 32
  br i1 %27, label %28, label %29

28:                                               ; preds = %16
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

29:                                               ; preds = %16
  %30 = icmp ugt i32 %8, 99
  br i1 %30, label %31, label %44

31:                                               ; preds = %29, %31
  %32 = phi i32 [ %34, %31 ], [ 32, %29 ]
  %33 = phi i32 [ %42, %31 ], [ %8, %29 ]
  %34 = add i32 %32, -2
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds nuw i8, ptr %5, i64 %35
  %37 = urem i32 %33, 100
  %38 = shl nuw nsw i32 %37, 1
  %39 = zext nneg i32 %38 to i64
  %40 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %39
  %41 = load i16, ptr %40, align 2
  store i16 %41, ptr %36, align 2
  %42 = udiv i32 %33, 100
  %43 = icmp ugt i32 %33, 9999
  br i1 %43, label %31, label %44, !llvm.loop !70

44:                                               ; preds = %31, %29
  %45 = phi i32 [ %8, %29 ], [ %42, %31 ]
  %46 = phi i32 [ 32, %29 ], [ %34, %31 ]
  %47 = icmp samesign ugt i32 %45, 9
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = add i32 %46, -2
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds nuw i8, ptr %5, i64 %50
  %52 = shl nuw nsw i32 %45, 1
  %53 = zext nneg i32 %52 to i64
  %54 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %53
  %55 = load i16, ptr %54, align 2
  store i16 %55, ptr %51, align 1
  br label %142

56:                                               ; preds = %44
  %57 = trunc nuw i32 %45 to i8
  %58 = or disjoint i8 %57, 48
  %59 = add i32 %46, -1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds nuw i8, ptr %5, i64 %60
  store i8 %58, ptr %61, align 1, !tbaa !10
  br label %142

62:                                               ; preds = %3
  %63 = and i32 %12, 4096
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, ptr @.str.24, ptr @.str.23
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i32 [ %75, %66 ], [ %8, %62 ]
  %68 = phi i64 [ %73, %66 ], [ 32, %62 ]
  %69 = and i32 %67, 15
  %70 = zext nneg i32 %69 to i64
  %71 = getelementptr inbounds nuw i8, ptr %65, i64 %70
  %72 = load i8, ptr %71, align 1, !tbaa !10
  %73 = add nsw i64 %68, -1
  %74 = getelementptr inbounds i8, ptr %5, i64 %73
  store i8 %72, ptr %74, align 1, !tbaa !10
  %75 = lshr i32 %67, 4
  %76 = icmp ult i32 %67, 16
  br i1 %76, label %77, label %66, !llvm.loop !144

77:                                               ; preds = %66
  %78 = and i32 %12, 8192
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %142, label %80

80:                                               ; preds = %77
  %81 = select i1 %64, i32 30768, i32 22576
  %82 = icmp ult i64 %1, 4294967296
  %83 = shl nuw nsw i32 %81, 8
  %84 = select i1 %82, i32 %81, i32 %83
  %85 = or i32 %84, %10
  %86 = add i32 %85, 33554432
  br label %142

87:                                               ; preds = %3, %87
  %88 = phi i32 [ %95, %87 ], [ %8, %3 ]
  %89 = phi i64 [ %93, %87 ], [ 32, %3 ]
  %90 = trunc i32 %88 to i8
  %91 = and i8 %90, 7
  %92 = or disjoint i8 %91, 48
  %93 = add nsw i64 %89, -1
  %94 = getelementptr inbounds i8, ptr %5, i64 %93
  store i8 %92, ptr %94, align 1, !tbaa !10
  %95 = lshr i32 %88, 3
  %96 = icmp ult i32 %88, 8
  br i1 %96, label %97, label %87, !llvm.loop !144

97:                                               ; preds = %87
  %98 = and i32 %12, 8192
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %142, label %100

100:                                              ; preds = %97
  %101 = sub nsw i64 33, %89
  %102 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %103 = load i32, ptr %102, align 4, !tbaa !55
  %104 = sext i32 %103 to i64
  %105 = icmp sge i64 %101, %104
  %106 = icmp ne i32 %8, 0
  %107 = select i1 %105, i1 %106, i1 false
  br i1 %107, label %108, label %142

108:                                              ; preds = %100
  %109 = icmp ult i64 %1, 4294967296
  %110 = select i1 %109, i32 48, i32 12288
  %111 = or i32 %110, %10
  %112 = add i32 %111, 16777216
  br label %142

113:                                              ; preds = %3, %113
  %114 = phi i32 [ %121, %113 ], [ %8, %3 ]
  %115 = phi i64 [ %119, %113 ], [ 32, %3 ]
  %116 = trunc i32 %114 to i8
  %117 = and i8 %116, 1
  %118 = or disjoint i8 %117, 48
  %119 = add nsw i64 %115, -1
  %120 = getelementptr inbounds i8, ptr %5, i64 %119
  store i8 %118, ptr %120, align 1, !tbaa !10
  %121 = lshr i32 %114, 1
  %122 = icmp ult i32 %114, 2
  br i1 %122, label %123, label %113, !llvm.loop !144

123:                                              ; preds = %113
  %124 = and i32 %12, 8192
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %142, label %126

126:                                              ; preds = %123
  %127 = and i32 %12, 4096
  %128 = icmp eq i32 %127, 0
  %129 = select i1 %128, i32 25136, i32 16944
  %130 = icmp ult i64 %1, 4294967296
  %131 = shl nuw nsw i32 %129, 8
  %132 = select i1 %130, i32 %129, i32 %131
  %133 = or i32 %132, %10
  %134 = add i32 %133, 33554432
  br label %142

135:                                              ; preds = %3
  %136 = trunc i64 %1 to i8
  %137 = and i32 %12, 7
  %138 = icmp eq i32 %137, 1
  %139 = zext i1 %138 to i8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %4) #30
  store i8 %139, ptr %4, align 1, !tbaa !112
  %140 = getelementptr inbounds nuw i8, ptr %4, i64 1
  store i8 %136, ptr %140, align 1, !tbaa !115
  %141 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef 1, i64 noundef 1, ptr noundef nonnull align 1 dereferenceable(2) %4)
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %4) #30
  br label %331

142:                                              ; preds = %56, %48, %97, %100, %108, %123, %126, %77, %80
  %143 = phi i32 [ %134, %126 ], [ %10, %123 ], [ %112, %108 ], [ %10, %100 ], [ %10, %97 ], [ %86, %80 ], [ %10, %77 ], [ %10, %48 ], [ %10, %56 ]
  %144 = phi i64 [ %119, %126 ], [ %119, %123 ], [ %93, %108 ], [ %93, %100 ], [ %93, %97 ], [ %73, %80 ], [ %73, %77 ], [ %50, %48 ], [ %60, %56 ]
  %145 = getelementptr inbounds i8, ptr %5, i64 %144
  %146 = trunc i64 %144 to i32
  %147 = sub i32 32, %146
  %148 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %149 = load i32, ptr %148, align 4, !tbaa !125
  %150 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %151 = load i32, ptr %150, align 4, !tbaa !55
  %152 = add nsw i32 %151, 1
  %153 = or i32 %152, %149
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %304

155:                                              ; preds = %142
  %156 = icmp sgt i32 %147, -1
  br i1 %156, label %158, label %157

157:                                              ; preds = %155
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

158:                                              ; preds = %155
  %159 = lshr i32 %143, 24
  %160 = add nuw i32 %147, %159
  %161 = zext i32 %160 to i64
  %162 = inttoptr i64 %0 to ptr
  %163 = getelementptr inbounds nuw i8, ptr %162, i64 8
  %164 = load i64, ptr %163, align 8, !tbaa !37
  %165 = add i64 %164, %161
  %166 = getelementptr inbounds nuw i8, ptr %162, i64 16
  %167 = load i64, ptr %166, align 8, !tbaa !18
  %168 = icmp ugt i64 %165, %167
  br i1 %168, label %169, label %172

169:                                              ; preds = %158
  %170 = getelementptr inbounds nuw i8, ptr %162, i64 24
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  call void %171(ptr noundef nonnull align 8 dereferenceable(32) %162, i64 noundef %165)
  br label %172

172:                                              ; preds = %158, %169
  %173 = and i32 %143, 16777215
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds nuw i8, ptr %162, i64 24
  br label %286

177:                                              ; preds = %297, %172
  %178 = icmp eq i64 %144, 32
  br i1 %178, label %331, label %179

179:                                              ; preds = %177
  %180 = getelementptr inbounds nuw i8, ptr %162, i64 24
  br label %181

181:                                              ; preds = %262, %179
  %182 = phi i64 [ %144, %179 ], [ %265, %262 ]
  %183 = getelementptr inbounds i8, ptr %5, i64 %182
  %184 = sub nsw i64 32, %182
  %185 = icmp slt i64 %182, 33
  br i1 %185, label %187, label %186

186:                                              ; preds = %181
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

187:                                              ; preds = %181
  %188 = load i64, ptr %163, align 8, !tbaa !37
  %189 = add i64 %188, %184
  %190 = load i64, ptr %166, align 8, !tbaa !18
  %191 = icmp ugt i64 %189, %190
  br i1 %191, label %192, label %196

192:                                              ; preds = %187
  %193 = load ptr, ptr %180, align 8, !tbaa !13
  call void %193(ptr noundef nonnull align 8 dereferenceable(32) %162, i64 noundef %189)
  %194 = load i64, ptr %166, align 8, !tbaa !18
  %195 = load i64, ptr %163, align 8, !tbaa !37
  br label %196

196:                                              ; preds = %192, %187
  %197 = phi i64 [ %188, %187 ], [ %195, %192 ]
  %198 = phi i64 [ %190, %187 ], [ %194, %192 ]
  %199 = sub i64 %198, %197
  %200 = call i64 @llvm.umin.i64(i64 %199, i64 %184)
  %201 = load ptr, ptr %162, align 8, !tbaa !17
  %202 = ptrtoint ptr %201 to i64
  %203 = getelementptr inbounds nuw i8, ptr %201, i64 %197
  %204 = icmp eq i64 %200, 0
  br i1 %204, label %262, label %205

205:                                              ; preds = %196
  %206 = icmp ult i64 %200, 4
  br i1 %206, label %207, label %224

207:                                              ; preds = %245, %258, %224, %205
  %208 = phi i64 [ %232, %245 ], [ 0, %205 ], [ 0, %224 ], [ %250, %258 ]
  %209 = and i64 %200, 3
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %220, label %211

211:                                              ; preds = %207, %211
  %212 = phi i64 [ %217, %211 ], [ %208, %207 ]
  %213 = phi i64 [ %218, %211 ], [ 0, %207 ]
  %214 = getelementptr inbounds nuw i8, ptr %183, i64 %212
  %215 = load i8, ptr %214, align 1, !tbaa !10
  %216 = getelementptr inbounds nuw i8, ptr %203, i64 %212
  store i8 %215, ptr %216, align 1, !tbaa !10
  %217 = add nuw i64 %212, 1
  %218 = add i64 %213, 1
  %219 = icmp eq i64 %218, %209
  br i1 %219, label %220, label %211, !llvm.loop !173

220:                                              ; preds = %211, %207
  %221 = phi i64 [ %208, %207 ], [ %217, %211 ]
  %222 = sub i64 %208, %200
  %223 = icmp ugt i64 %222, -4
  br i1 %223, label %260, label %267

224:                                              ; preds = %205
  %225 = add i64 %197, %202
  %226 = add i64 %182, %6
  %227 = sub i64 %225, %226
  %228 = icmp ult i64 %227, 32
  br i1 %228, label %207, label %229

229:                                              ; preds = %224
  %230 = icmp ult i64 %200, 32
  br i1 %230, label %248, label %231

231:                                              ; preds = %229
  %232 = and i64 %200, -32
  br label %233

233:                                              ; preds = %233, %231
  %234 = phi i64 [ 0, %231 ], [ %241, %233 ]
  %235 = getelementptr inbounds nuw i8, ptr %183, i64 %234
  %236 = getelementptr inbounds nuw i8, ptr %235, i64 16
  %237 = load <16 x i8>, ptr %235, align 1, !tbaa !10
  %238 = load <16 x i8>, ptr %236, align 1, !tbaa !10
  %239 = getelementptr inbounds nuw i8, ptr %203, i64 %234
  %240 = getelementptr inbounds nuw i8, ptr %239, i64 16
  store <16 x i8> %237, ptr %239, align 1, !tbaa !10
  store <16 x i8> %238, ptr %240, align 1, !tbaa !10
  %241 = add nuw i64 %234, 32
  %242 = icmp eq i64 %241, %232
  br i1 %242, label %243, label %233, !llvm.loop !174

243:                                              ; preds = %233
  %244 = icmp eq i64 %200, %232
  br i1 %244, label %260, label %245

245:                                              ; preds = %243
  %246 = and i64 %200, 28
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %207, label %248

248:                                              ; preds = %245, %229
  %249 = phi i64 [ %232, %245 ], [ 0, %229 ]
  %250 = and i64 %200, -4
  br label %251

251:                                              ; preds = %251, %248
  %252 = phi i64 [ %249, %248 ], [ %256, %251 ]
  %253 = getelementptr inbounds nuw i8, ptr %183, i64 %252
  %254 = load <4 x i8>, ptr %253, align 1, !tbaa !10
  %255 = getelementptr inbounds nuw i8, ptr %203, i64 %252
  store <4 x i8> %254, ptr %255, align 1, !tbaa !10
  %256 = add nuw i64 %252, 4
  %257 = icmp eq i64 %256, %250
  br i1 %257, label %258, label %251, !llvm.loop !175

258:                                              ; preds = %251
  %259 = icmp eq i64 %200, %250
  br i1 %259, label %260, label %207

260:                                              ; preds = %220, %267, %258, %243
  %261 = load i64, ptr %163, align 8, !tbaa !37
  br label %262

262:                                              ; preds = %260, %196
  %263 = phi i64 [ %261, %260 ], [ %197, %196 ]
  %264 = add i64 %263, %200
  store i64 %264, ptr %163, align 8, !tbaa !37
  %265 = add nsw i64 %200, %182
  %266 = icmp eq i64 %265, 32
  br i1 %266, label %331, label %181, !llvm.loop !77

267:                                              ; preds = %220, %267
  %268 = phi i64 [ %284, %267 ], [ %221, %220 ]
  %269 = getelementptr inbounds nuw i8, ptr %183, i64 %268
  %270 = load i8, ptr %269, align 1, !tbaa !10
  %271 = getelementptr inbounds nuw i8, ptr %203, i64 %268
  store i8 %270, ptr %271, align 1, !tbaa !10
  %272 = add nuw i64 %268, 1
  %273 = getelementptr inbounds nuw i8, ptr %183, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !10
  %275 = getelementptr inbounds nuw i8, ptr %203, i64 %272
  store i8 %274, ptr %275, align 1, !tbaa !10
  %276 = add nuw i64 %268, 2
  %277 = getelementptr inbounds nuw i8, ptr %183, i64 %276
  %278 = load i8, ptr %277, align 1, !tbaa !10
  %279 = getelementptr inbounds nuw i8, ptr %203, i64 %276
  store i8 %278, ptr %279, align 1, !tbaa !10
  %280 = add nuw i64 %268, 3
  %281 = getelementptr inbounds nuw i8, ptr %183, i64 %280
  %282 = load i8, ptr %281, align 1, !tbaa !10
  %283 = getelementptr inbounds nuw i8, ptr %203, i64 %280
  store i8 %282, ptr %283, align 1, !tbaa !10
  %284 = add nuw i64 %268, 4
  %285 = icmp eq i64 %284, %200
  br i1 %285, label %260, label %267, !llvm.loop !176

286:                                              ; preds = %175, %297
  %287 = phi i32 [ %173, %175 ], [ %302, %297 ]
  %288 = trunc i32 %287 to i8
  %289 = load i64, ptr %163, align 8, !tbaa !37
  %290 = add i64 %289, 1
  %291 = load i64, ptr %166, align 8, !tbaa !18
  %292 = icmp ugt i64 %290, %291
  br i1 %292, label %293, label %297

293:                                              ; preds = %286
  %294 = load ptr, ptr %176, align 8, !tbaa !13
  call void %294(ptr noundef nonnull align 8 dereferenceable(32) %162, i64 noundef %290)
  %295 = load i64, ptr %163, align 8, !tbaa !37
  %296 = add i64 %295, 1
  br label %297

297:                                              ; preds = %286, %293
  %298 = phi i64 [ %290, %286 ], [ %296, %293 ]
  %299 = phi i64 [ %289, %286 ], [ %295, %293 ]
  %300 = load ptr, ptr %162, align 8, !tbaa !17
  store i64 %298, ptr %163, align 8, !tbaa !37
  %301 = getelementptr inbounds nuw i8, ptr %300, i64 %299
  store i8 %288, ptr %301, align 1, !tbaa !10
  %302 = lshr i32 %287, 8
  %303 = icmp samesign ult i32 %287, 256
  br i1 %303, label %177, label %286, !llvm.loop !177

304:                                              ; preds = %142
  %305 = lshr i32 %143, 24
  %306 = icmp sgt i32 %147, -1
  br i1 %306, label %308, label %307

307:                                              ; preds = %304
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

308:                                              ; preds = %304
  %309 = add nuw i32 %147, %305
  %310 = and i32 %12, 56
  %311 = icmp eq i32 %310, 32
  br i1 %311, label %312, label %318

312:                                              ; preds = %308
  %313 = icmp sgt i32 %149, -1
  br i1 %313, label %315, label %314

314:                                              ; preds = %312
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

315:                                              ; preds = %312
  %316 = call i32 @llvm.usub.sat.i32(i32 %149, i32 %309)
  %317 = call i32 @llvm.umax.i32(i32 %149, i32 %309)
  br label %323

318:                                              ; preds = %308
  %319 = icmp sgt i32 %151, %147
  br i1 %319, label %320, label %323

320:                                              ; preds = %318
  %321 = add nuw i32 %151, %305
  %322 = sub nsw i32 %151, %147
  br label %323

323:                                              ; preds = %315, %318, %320
  %324 = phi i32 [ %322, %320 ], [ 0, %318 ], [ %316, %315 ]
  %325 = phi i32 [ %321, %320 ], [ %309, %318 ], [ %317, %315 ]
  %326 = zext i32 %325 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #30
  store i32 %143, ptr %7, align 8, !tbaa !178
  %327 = getelementptr inbounds nuw i8, ptr %7, i64 4
  store i32 %324, ptr %327, align 4, !tbaa !180
  %328 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store ptr %145, ptr %328, align 8, !tbaa !181
  %329 = getelementptr inbounds nuw i8, ptr %7, i64 16
  store ptr %11, ptr %329, align 8, !tbaa !182
  %330 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_jEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %326, i64 noundef %326, ptr noundef nonnull align 8 dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #30
  br label %331

331:                                              ; preds = %262, %177, %323, %135
  %332 = phi i64 [ %141, %135 ], [ %330, %323 ], [ %0, %177 ], [ %0, %262 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #30
  ret i64 %332
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_jEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load i32, ptr %0, align 8, !tbaa !178
  %5 = and i32 %4, 16777215
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %9 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %152

11:                                               ; preds = %163, %2
  %12 = getelementptr inbounds nuw i8, ptr %0, i64 4
  %13 = load i32, ptr %12, align 4, !tbaa !180
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %17 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %19

19:                                               ; preds = %29, %15
  %20 = phi i32 [ 0, %15 ], [ %34, %29 ]
  %21 = load i64, ptr %16, align 8, !tbaa !37
  %22 = add i64 %21, 1
  %23 = load i64, ptr %17, align 8, !tbaa !18
  %24 = icmp ugt i64 %22, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %26(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %22)
  %27 = load i64, ptr %16, align 8, !tbaa !37
  %28 = add i64 %27, 1
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i64 [ %22, %19 ], [ %28, %25 ]
  %31 = phi i64 [ %21, %19 ], [ %27, %25 ]
  %32 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %30, ptr %16, align 8, !tbaa !37
  %33 = getelementptr inbounds nuw i8, ptr %32, i64 %31
  store i8 48, ptr %33, align 1, !tbaa !10
  %34 = add nuw i32 %20, 1
  %35 = icmp eq i32 %34, %13
  br i1 %35, label %36, label %19, !llvm.loop !183

36:                                               ; preds = %29, %11
  %37 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %38 = load ptr, ptr %37, align 8, !tbaa !181
  %39 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %40 = load ptr, ptr %39, align 8, !tbaa !182
  %41 = icmp eq ptr %38, %40
  br i1 %41, label %151, label %42

42:                                               ; preds = %36
  %43 = ptrtoint ptr %40 to i64
  %44 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %45 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %46 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %47

47:                                               ; preds = %127, %42
  %48 = phi ptr [ %38, %42 ], [ %130, %127 ]
  %49 = ptrtoint ptr %48 to i64
  %50 = sub i64 %43, %49
  %51 = icmp sgt i64 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

53:                                               ; preds = %47
  %54 = load i64, ptr %44, align 8, !tbaa !37
  %55 = add i64 %54, %50
  %56 = load i64, ptr %45, align 8, !tbaa !18
  %57 = icmp ugt i64 %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = load ptr, ptr %46, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %55)
  %60 = load i64, ptr %45, align 8, !tbaa !18
  %61 = load i64, ptr %44, align 8, !tbaa !37
  br label %62

62:                                               ; preds = %58, %53
  %63 = phi i64 [ %54, %53 ], [ %61, %58 ]
  %64 = phi i64 [ %56, %53 ], [ %60, %58 ]
  %65 = sub i64 %64, %63
  %66 = tail call i64 @llvm.umin.i64(i64 %65, i64 %50)
  %67 = load ptr, ptr %3, align 8, !tbaa !17
  %68 = ptrtoint ptr %67 to i64
  %69 = getelementptr inbounds nuw i8, ptr %67, i64 %63
  %70 = icmp eq i64 %66, 0
  br i1 %70, label %127, label %71

71:                                               ; preds = %62
  %72 = icmp ult i64 %66, 4
  br i1 %72, label %73, label %90

73:                                               ; preds = %110, %123, %90, %71
  %74 = phi i64 [ %97, %110 ], [ 0, %71 ], [ 0, %90 ], [ %115, %123 ]
  %75 = and i64 %66, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %73, %77
  %78 = phi i64 [ %83, %77 ], [ %74, %73 ]
  %79 = phi i64 [ %84, %77 ], [ 0, %73 ]
  %80 = getelementptr inbounds nuw i8, ptr %48, i64 %78
  %81 = load i8, ptr %80, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %69, i64 %78
  store i8 %81, ptr %82, align 1, !tbaa !10
  %83 = add nuw i64 %78, 1
  %84 = add i64 %79, 1
  %85 = icmp eq i64 %84, %75
  br i1 %85, label %86, label %77, !llvm.loop !184

86:                                               ; preds = %77, %73
  %87 = phi i64 [ %74, %73 ], [ %83, %77 ]
  %88 = sub nsw i64 %74, %66
  %89 = icmp ugt i64 %88, -4
  br i1 %89, label %125, label %132

90:                                               ; preds = %71
  %91 = add i64 %63, %68
  %92 = sub i64 %91, %49
  %93 = icmp ult i64 %92, 32
  br i1 %93, label %73, label %94

94:                                               ; preds = %90
  %95 = icmp ult i64 %66, 32
  br i1 %95, label %113, label %96

96:                                               ; preds = %94
  %97 = and i64 %66, 9223372036854775776
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %106, %98 ]
  %100 = getelementptr inbounds nuw i8, ptr %48, i64 %99
  %101 = getelementptr inbounds nuw i8, ptr %100, i64 16
  %102 = load <16 x i8>, ptr %100, align 1, !tbaa !10
  %103 = load <16 x i8>, ptr %101, align 1, !tbaa !10
  %104 = getelementptr inbounds nuw i8, ptr %69, i64 %99
  %105 = getelementptr inbounds nuw i8, ptr %104, i64 16
  store <16 x i8> %102, ptr %104, align 1, !tbaa !10
  store <16 x i8> %103, ptr %105, align 1, !tbaa !10
  %106 = add nuw i64 %99, 32
  %107 = icmp eq i64 %106, %97
  br i1 %107, label %108, label %98, !llvm.loop !185

108:                                              ; preds = %98
  %109 = icmp eq i64 %66, %97
  br i1 %109, label %125, label %110

110:                                              ; preds = %108
  %111 = and i64 %66, 28
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %73, label %113

113:                                              ; preds = %110, %94
  %114 = phi i64 [ %97, %110 ], [ 0, %94 ]
  %115 = and i64 %66, 9223372036854775804
  br label %116

116:                                              ; preds = %116, %113
  %117 = phi i64 [ %114, %113 ], [ %121, %116 ]
  %118 = getelementptr inbounds nuw i8, ptr %48, i64 %117
  %119 = load <4 x i8>, ptr %118, align 1, !tbaa !10
  %120 = getelementptr inbounds nuw i8, ptr %69, i64 %117
  store <4 x i8> %119, ptr %120, align 1, !tbaa !10
  %121 = add nuw i64 %117, 4
  %122 = icmp eq i64 %121, %115
  br i1 %122, label %123, label %116, !llvm.loop !186

123:                                              ; preds = %116
  %124 = icmp eq i64 %66, %115
  br i1 %124, label %125, label %73

125:                                              ; preds = %86, %132, %123, %108
  %126 = load i64, ptr %44, align 8, !tbaa !37
  br label %127

127:                                              ; preds = %125, %62
  %128 = phi i64 [ %126, %125 ], [ %63, %62 ]
  %129 = add i64 %128, %66
  store i64 %129, ptr %44, align 8, !tbaa !37
  %130 = getelementptr inbounds nuw i8, ptr %48, i64 %66
  %131 = icmp eq ptr %130, %40
  br i1 %131, label %151, label %47, !llvm.loop !77

132:                                              ; preds = %86, %132
  %133 = phi i64 [ %149, %132 ], [ %87, %86 ]
  %134 = getelementptr inbounds nuw i8, ptr %48, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !10
  %136 = getelementptr inbounds nuw i8, ptr %69, i64 %133
  store i8 %135, ptr %136, align 1, !tbaa !10
  %137 = add nuw i64 %133, 1
  %138 = getelementptr inbounds nuw i8, ptr %48, i64 %137
  %139 = load i8, ptr %138, align 1, !tbaa !10
  %140 = getelementptr inbounds nuw i8, ptr %69, i64 %137
  store i8 %139, ptr %140, align 1, !tbaa !10
  %141 = add nuw i64 %133, 2
  %142 = getelementptr inbounds nuw i8, ptr %48, i64 %141
  %143 = load i8, ptr %142, align 1, !tbaa !10
  %144 = getelementptr inbounds nuw i8, ptr %69, i64 %141
  store i8 %143, ptr %144, align 1, !tbaa !10
  %145 = add nuw i64 %133, 3
  %146 = getelementptr inbounds nuw i8, ptr %48, i64 %145
  %147 = load i8, ptr %146, align 1, !tbaa !10
  %148 = getelementptr inbounds nuw i8, ptr %69, i64 %145
  store i8 %147, ptr %148, align 1, !tbaa !10
  %149 = add nuw i64 %133, 4
  %150 = icmp eq i64 %149, %66
  br i1 %150, label %125, label %132, !llvm.loop !187

151:                                              ; preds = %127, %36
  ret i64 %1

152:                                              ; preds = %7, %163
  %153 = phi i32 [ %5, %7 ], [ %168, %163 ]
  %154 = trunc i32 %153 to i8
  %155 = load i64, ptr %8, align 8, !tbaa !37
  %156 = add i64 %155, 1
  %157 = load i64, ptr %9, align 8, !tbaa !18
  %158 = icmp ugt i64 %156, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %152
  %160 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void %160(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %156)
  %161 = load i64, ptr %8, align 8, !tbaa !37
  %162 = add i64 %161, 1
  br label %163

163:                                              ; preds = %152, %159
  %164 = phi i64 [ %156, %152 ], [ %162, %159 ]
  %165 = phi i64 [ %155, %152 ], [ %161, %159 ]
  %166 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %164, ptr %8, align 8, !tbaa !37
  %167 = getelementptr inbounds nuw i8, ptr %166, i64 %165
  store i8 %154, ptr %167, align 1, !tbaa !10
  %168 = lshr i32 %153, 8
  %169 = icmp samesign ult i32 %153, 256
  br i1 %169, label %11, label %152, !llvm.loop !188
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_1ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(16) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.25, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load ptr, ptr %4, align 8, !tbaa !38
  %47 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %48 = load i64, ptr %47, align 8, !tbaa !39
  %49 = getelementptr inbounds nuw i8, ptr %46, i64 %48
  %50 = icmp samesign eq i64 %48, 0
  br i1 %50, label %160, label %51

51:                                               ; preds = %43
  %52 = ptrtoint ptr %49 to i64
  %53 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %54 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %55 = getelementptr inbounds nuw i8, ptr %44, i64 24
  br label %56

56:                                               ; preds = %136, %51
  %57 = phi ptr [ %46, %51 ], [ %139, %136 ]
  %58 = ptrtoint ptr %57 to i64
  %59 = sub i64 %52, %58
  %60 = icmp sgt i64 %59, -1
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

62:                                               ; preds = %56
  %63 = load i64, ptr %53, align 8, !tbaa !37
  %64 = add i64 %63, %59
  %65 = load i64, ptr %54, align 8, !tbaa !18
  %66 = icmp ugt i64 %64, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %62
  %68 = load ptr, ptr %55, align 8, !tbaa !13
  tail call void %68(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %64)
  %69 = load i64, ptr %54, align 8, !tbaa !18
  %70 = load i64, ptr %53, align 8, !tbaa !37
  br label %71

71:                                               ; preds = %67, %62
  %72 = phi i64 [ %63, %62 ], [ %70, %67 ]
  %73 = phi i64 [ %65, %62 ], [ %69, %67 ]
  %74 = sub i64 %73, %72
  %75 = tail call i64 @llvm.umin.i64(i64 %74, i64 %59)
  %76 = load ptr, ptr %44, align 8, !tbaa !17
  %77 = ptrtoint ptr %76 to i64
  %78 = getelementptr inbounds nuw i8, ptr %76, i64 %72
  %79 = icmp eq i64 %75, 0
  br i1 %79, label %136, label %80

80:                                               ; preds = %71
  %81 = icmp ult i64 %75, 4
  br i1 %81, label %82, label %99

82:                                               ; preds = %119, %132, %99, %80
  %83 = phi i64 [ %106, %119 ], [ 0, %80 ], [ 0, %99 ], [ %124, %132 ]
  %84 = and i64 %75, 3
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %82, %86
  %87 = phi i64 [ %92, %86 ], [ %83, %82 ]
  %88 = phi i64 [ %93, %86 ], [ 0, %82 ]
  %89 = getelementptr inbounds nuw i8, ptr %57, i64 %87
  %90 = load i8, ptr %89, align 1, !tbaa !10
  %91 = getelementptr inbounds nuw i8, ptr %78, i64 %87
  store i8 %90, ptr %91, align 1, !tbaa !10
  %92 = add nuw i64 %87, 1
  %93 = add i64 %88, 1
  %94 = icmp eq i64 %93, %84
  br i1 %94, label %95, label %86, !llvm.loop !189

95:                                               ; preds = %86, %82
  %96 = phi i64 [ %83, %82 ], [ %92, %86 ]
  %97 = sub nsw i64 %83, %75
  %98 = icmp ugt i64 %97, -4
  br i1 %98, label %134, label %141

99:                                               ; preds = %80
  %100 = add i64 %72, %77
  %101 = sub i64 %100, %58
  %102 = icmp ult i64 %101, 32
  br i1 %102, label %82, label %103

103:                                              ; preds = %99
  %104 = icmp ult i64 %75, 32
  br i1 %104, label %122, label %105

105:                                              ; preds = %103
  %106 = and i64 %75, 9223372036854775776
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %115, %107 ]
  %109 = getelementptr inbounds nuw i8, ptr %57, i64 %108
  %110 = getelementptr inbounds nuw i8, ptr %109, i64 16
  %111 = load <16 x i8>, ptr %109, align 1, !tbaa !10
  %112 = load <16 x i8>, ptr %110, align 1, !tbaa !10
  %113 = getelementptr inbounds nuw i8, ptr %78, i64 %108
  %114 = getelementptr inbounds nuw i8, ptr %113, i64 16
  store <16 x i8> %111, ptr %113, align 1, !tbaa !10
  store <16 x i8> %112, ptr %114, align 1, !tbaa !10
  %115 = add nuw i64 %108, 32
  %116 = icmp eq i64 %115, %106
  br i1 %116, label %117, label %107, !llvm.loop !190

117:                                              ; preds = %107
  %118 = icmp eq i64 %75, %106
  br i1 %118, label %134, label %119

119:                                              ; preds = %117
  %120 = and i64 %75, 28
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %82, label %122

122:                                              ; preds = %119, %103
  %123 = phi i64 [ %106, %119 ], [ 0, %103 ]
  %124 = and i64 %75, 9223372036854775804
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ %123, %122 ], [ %130, %125 ]
  %127 = getelementptr inbounds nuw i8, ptr %57, i64 %126
  %128 = load <4 x i8>, ptr %127, align 1, !tbaa !10
  %129 = getelementptr inbounds nuw i8, ptr %78, i64 %126
  store <4 x i8> %128, ptr %129, align 1, !tbaa !10
  %130 = add nuw i64 %126, 4
  %131 = icmp eq i64 %130, %124
  br i1 %131, label %132, label %125, !llvm.loop !191

132:                                              ; preds = %125
  %133 = icmp eq i64 %75, %124
  br i1 %133, label %134, label %82

134:                                              ; preds = %95, %141, %132, %117
  %135 = load i64, ptr %53, align 8, !tbaa !37
  br label %136

136:                                              ; preds = %134, %71
  %137 = phi i64 [ %135, %134 ], [ %72, %71 ]
  %138 = add i64 %137, %75
  store i64 %138, ptr %53, align 8, !tbaa !37
  %139 = getelementptr inbounds nuw i8, ptr %57, i64 %75
  %140 = icmp eq ptr %139, %49
  br i1 %140, label %160, label %56, !llvm.loop !77

141:                                              ; preds = %95, %141
  %142 = phi i64 [ %158, %141 ], [ %96, %95 ]
  %143 = getelementptr inbounds nuw i8, ptr %57, i64 %142
  %144 = load i8, ptr %143, align 1, !tbaa !10
  %145 = getelementptr inbounds nuw i8, ptr %78, i64 %142
  store i8 %144, ptr %145, align 1, !tbaa !10
  %146 = add nuw i64 %142, 1
  %147 = getelementptr inbounds nuw i8, ptr %57, i64 %146
  %148 = load i8, ptr %147, align 1, !tbaa !10
  %149 = getelementptr inbounds nuw i8, ptr %78, i64 %146
  store i8 %148, ptr %149, align 1, !tbaa !10
  %150 = add nuw i64 %142, 2
  %151 = getelementptr inbounds nuw i8, ptr %57, i64 %150
  %152 = load i8, ptr %151, align 1, !tbaa !10
  %153 = getelementptr inbounds nuw i8, ptr %78, i64 %150
  store i8 %152, ptr %153, align 1, !tbaa !10
  %154 = add nuw i64 %142, 3
  %155 = getelementptr inbounds nuw i8, ptr %57, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !10
  %157 = getelementptr inbounds nuw i8, ptr %78, i64 %154
  store i8 %156, ptr %157, align 1, !tbaa !10
  %158 = add nuw i64 %142, 4
  %159 = icmp eq i64 %158, %75
  br i1 %159, label %134, label %141, !llvm.loop !192

160:                                              ; preds = %136, %43
  %161 = icmp eq i64 %12, %21
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %45, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %164

164:                                              ; preds = %162, %160
  %165 = phi i64 [ %163, %162 ], [ %45, %160 ]
  ret i64 %165
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local i64 @strlen(ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEfTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_(i64 %0, float noundef %1) local_unnamed_addr #0 comdat {
  %3 = alloca %class.anon.30, align 8
  %4 = alloca %"struct.fmt::v11::format_specs", align 4
  %5 = alloca %"struct.fmt::v11::format_specs", align 4
  %6 = alloca %"struct.fmt::v11::detail::dragonbox::decimal_fp", align 8
  %7 = bitcast float %1 to i32
  %8 = lshr i32 %7, 31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %4, ptr noundef nonnull align 4 dereferenceable(16) @__const._ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_.specs, i64 16, i1 false)
  %9 = and i32 %7, 2139095040
  %10 = icmp eq i32 %9, 2139095040
  br i1 %10, label %11, label %31

11:                                               ; preds = %2
  %12 = fcmp uno float %1, 0.000000e+00
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %5, ptr noundef nonnull align 4 dereferenceable(16) @__const._ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_.specs, i64 16, i1 false)
  %13 = load i32, ptr %5, align 4, !tbaa !53
  %14 = and i32 %13, 229376
  %15 = icmp eq i32 %14, 32768
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = getelementptr inbounds nuw i8, ptr %5, i64 4
  %18 = load i8, ptr %17, align 4, !tbaa !10
  %19 = icmp eq i8 %18, 48
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i8 32, ptr %17, align 4, !tbaa !10
  br label %21

21:                                               ; preds = %11, %16, %20
  %22 = and i32 %13, 4096
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, ptr @.str.28, ptr @.str.27
  %25 = select i1 %23, ptr @.str.30, ptr @.str.29
  %26 = select i1 %12, ptr %24, ptr %25
  %27 = icmp sgt i32 %7, -1
  %28 = select i1 %27, i64 3, i64 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store i32 %8, ptr %3, align 8, !tbaa !193
  %29 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store ptr %26, ptr %29, align 8, !tbaa !196
  %30 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %5, i64 noundef %28, i64 noundef %28, ptr noundef nonnull align 8 dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %34

31:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #30
  %32 = tail call i64 @_ZN3fmt3v116detail9dragonbox10to_decimalIfEENS2_10decimal_fpIT_EES5_(float noundef %1) #30
  store i64 %32, ptr %6, align 8
  %33 = call i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 4 dereferenceable(8) %6, ptr noundef nonnull align 4 dereferenceable(16) %4, i32 noundef %8, i32 noundef 7, i64 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #30
  br label %34

34:                                               ; preds = %31, %21
  %35 = phi i64 [ %30, %21 ], [ %33, %31 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  ret i64 %35
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9dragonbox10to_decimalIfEENS2_10decimal_fpIT_EES5_(float noundef %0) local_unnamed_addr #26 comdat personality ptr @__gxx_personality_seh0 {
  %2 = bitcast float %0 to i32
  %3 = and i32 %2, 8388607
  %4 = lshr i32 %2, 23
  %5 = and i32 %4, 255
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = add nsw i32 %5, -150
  %9 = icmp eq i32 %3, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %7
  %11 = tail call i64 @_ZN3fmt3v116detail9dragonbox21shorter_interval_caseIfEENS2_10decimal_fpIT_EEi(i32 noundef %8) #30
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc nuw i64 %13 to i32
  br label %176

15:                                               ; preds = %1
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %176, label %19

17:                                               ; preds = %7
  %18 = or disjoint i32 %3, 8388608
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i32 [ %18, %17 ], [ %3, %15 ]
  %21 = phi i32 [ %8, %17 ], [ -149, %15 ]
  %22 = mul nsw i32 %21, 315653
  %23 = ashr i32 %22, 20
  %24 = sub nsw i32 1, %23
  %25 = sub nsw i32 32, %23
  %26 = zext nneg i32 %25 to i64
  %27 = getelementptr inbounds nuw [78 x i64], ptr @_ZZN3fmt3v116detail9dragonbox14cache_accessorIfE16get_cached_powerEiE18pow10_significands, i64 0, i64 %26
  %28 = load i64, ptr %27, align 8, !tbaa !20
  %29 = mul nsw i32 %24, 1741647
  %30 = ashr i32 %29, 19
  %31 = add nsw i32 %30, %21
  %32 = sub nsw i32 63, %31
  %33 = zext nneg i32 %32 to i64
  %34 = lshr i64 %28, %33
  %35 = trunc i64 %34 to i32
  %36 = shl nuw nsw i32 %20, 1
  %37 = or disjoint i32 %36, 1
  %38 = shl i32 %37, %31
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i64 %40 to i128
  %42 = zext i64 %28 to i128
  %43 = mul nuw i128 %41, %42
  %44 = lshr i128 %43, 64
  %45 = trunc nuw i128 %44 to i64
  %46 = lshr i64 %45, 32
  %47 = and i64 %45, 4294967295
  %48 = icmp ne i64 %47, 0
  %49 = trunc nuw i64 %46 to i32
  %50 = mul nuw nsw i64 %46, 1374389535
  %51 = lshr i64 %50, 37
  %52 = trunc nuw nsw i64 %51 to i32
  %53 = mul i32 %52, -100
  %54 = add i32 %53, %49
  %55 = icmp ult i32 %54, %35
  br i1 %55, label %56, label %64

56:                                               ; preds = %19
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %58, label %95

58:                                               ; preds = %56
  %59 = and i32 %2, 1
  %60 = icmp eq i32 %59, 0
  %61 = or i1 %60, %48
  br i1 %61, label %95, label %62

62:                                               ; preds = %58
  %63 = add nsw i32 %52, -1
  br label %124

64:                                               ; preds = %19
  %65 = icmp ugt i32 %54, %35
  br i1 %65, label %124, label %66

66:                                               ; preds = %64
  %67 = add nsw i32 %36, -1
  %68 = icmp sgt i32 %31, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = icmp samesign ult i32 %31, 64
  br i1 %70, label %77, label %71

71:                                               ; preds = %69, %66
  %72 = phi i32 [ 334, %66 ], [ 335, %69 ]
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef %72, ptr noundef nonnull @.str.14) #31
          to label %73 unwind label %74

73:                                               ; preds = %71
  unreachable

74:                                               ; preds = %71
  %75 = landingpad { ptr, i32 }
          catch ptr null
  %76 = extractvalue { ptr, i32 } %75, 0
  tail call void @__clang_call_terminate(ptr %76) #33
  unreachable

77:                                               ; preds = %69
  %78 = zext nneg i32 %67 to i64
  %79 = mul i64 %28, %78
  %80 = sub nuw nsw i32 64, %31
  %81 = zext nneg i32 %80 to i64
  %82 = lshr i64 %79, %81
  %83 = trunc i64 %82 to i32
  %84 = and i32 %83, 1
  %85 = sub nsw i32 32, %31
  %86 = zext nneg i32 %85 to i64
  %87 = shl i64 4294967295, %86
  %88 = and i64 %87, %79
  %89 = icmp eq i64 %88, 0
  %90 = and i32 %20, 1
  %91 = xor i32 %90, 1
  %92 = select i1 %89, i32 %91, i32 0
  %93 = or i32 %92, %84
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %124, label %95

95:                                               ; preds = %77, %56, %58
  %96 = add nsw i32 %23, 1
  %97 = icmp ult i64 %45, 429496729600
  br i1 %97, label %102, label %98

98:                                               ; preds = %95
  %99 = mul i32 %52, -1030792151
  %100 = tail call i32 @llvm.fshl.i32(i32 %99, i32 %99, i32 30)
  %101 = icmp ugt i32 %100, 42949672
  br i1 %101, label %111, label %104

102:                                              ; preds = %95
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 1154, ptr noundef nonnull @.str.14) #31
          to label %103 unwind label %121

103:                                              ; preds = %102
  unreachable

104:                                              ; preds = %98, %104
  %105 = phi i32 [ %109, %104 ], [ %100, %98 ]
  %106 = phi i32 [ %107, %104 ], [ 0, %98 ]
  %107 = add nuw nsw i32 %106, 2
  %108 = mul i32 %105, -1030792151
  %109 = tail call i32 @llvm.fshl.i32(i32 %108, i32 %108, i32 30)
  %110 = icmp ugt i32 %109, 42949672
  br i1 %110, label %111, label %104

111:                                              ; preds = %104, %98
  %112 = phi i32 [ %52, %98 ], [ %105, %104 ]
  %113 = phi i32 [ 0, %98 ], [ %107, %104 ]
  %114 = mul i32 %112, -858993459
  %115 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %114, i32 31)
  %116 = icmp ult i32 %115, 429496730
  %117 = select i1 %116, i32 %115, i32 %112
  %118 = zext i1 %116 to i32
  %119 = or i32 %113, %118
  %120 = add nsw i32 %96, %119
  br label %176

121:                                              ; preds = %102
  %122 = landingpad { ptr, i32 }
          catch ptr null
  %123 = extractvalue { ptr, i32 } %122, 0
  tail call void @__clang_call_terminate(ptr %123) #33
  unreachable

124:                                              ; preds = %77, %64, %62
  %125 = phi i32 [ %63, %62 ], [ %52, %64 ], [ %52, %77 ]
  %126 = phi i32 [ 100, %62 ], [ %54, %64 ], [ %54, %77 ]
  %127 = lshr i32 %35, 1
  %128 = sub i32 %126, %127
  %129 = add i32 %128, 5
  %130 = icmp ult i32 %129, 101
  br i1 %130, label %136, label %131

131:                                              ; preds = %124
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 237, ptr noundef nonnull @.str.34) #31
          to label %132 unwind label %133

132:                                              ; preds = %131
  unreachable

133:                                              ; preds = %131
  %134 = landingpad { ptr, i32 }
          catch ptr null
  %135 = extractvalue { ptr, i32 } %134, 0
  tail call void @__clang_call_terminate(ptr %135) #33
  unreachable

136:                                              ; preds = %124
  %137 = mul nsw i32 %125, 10
  %138 = mul nuw nsw i32 %129, 6554
  %139 = and i32 %138, 65534
  %140 = icmp samesign ult i32 %139, 6554
  %141 = lshr i32 %138, 16
  %142 = add nsw i32 %141, %137
  br i1 %140, label %143, label %176

143:                                              ; preds = %136
  %144 = icmp sgt i32 %31, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %143
  %146 = icmp samesign ult i32 %31, 64
  br i1 %146, label %153, label %147

147:                                              ; preds = %145, %143
  %148 = phi i32 [ 334, %143 ], [ 335, %145 ]
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef %148, ptr noundef nonnull @.str.14) #31
          to label %149 unwind label %150

149:                                              ; preds = %147
  unreachable

150:                                              ; preds = %147
  %151 = landingpad { ptr, i32 }
          catch ptr null
  %152 = extractvalue { ptr, i32 } %151, 0
  tail call void @__clang_call_terminate(ptr %152) #33
  unreachable

153:                                              ; preds = %145
  %154 = zext nneg i32 %36 to i64
  %155 = mul i64 %28, %154
  %156 = sub nuw nsw i32 64, %31
  %157 = zext nneg i32 %156 to i64
  %158 = lshr i64 %155, %157
  %159 = trunc i64 %158 to i32
  %160 = xor i32 %128, %159
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %153
  %164 = add nsw i32 %142, -1
  br label %176

165:                                              ; preds = %153
  %166 = sub nsw i32 32, %31
  %167 = zext nneg i32 %166 to i64
  %168 = shl i64 4294967295, %167
  %169 = and i64 %168, %155
  %170 = icmp eq i64 %169, 0
  %171 = and i32 %138, 65536
  %172 = icmp ne i32 %171, 0
  %173 = and i1 %170, %172
  %174 = sext i1 %173 to i32
  %175 = add nsw i32 %142, %174
  br label %176

176:                                              ; preds = %165, %111, %163, %136, %15, %10
  %177 = phi i32 [ %12, %10 ], [ 0, %15 ], [ %117, %111 ], [ %164, %163 ], [ %142, %136 ], [ %175, %165 ]
  %178 = phi i32 [ %14, %10 ], [ 0, %15 ], [ %120, %111 ], [ %23, %163 ], [ %23, %136 ], [ %23, %165 ]
  %179 = zext i32 %178 to i64
  %180 = shl nuw i64 %179, 32
  %181 = zext i32 %177 to i64
  %182 = or disjoint i64 %180, %181
  ret i64 %182
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(16) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.25, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load i32, ptr %4, align 8, !tbaa !193
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %68, label %48

48:                                               ; preds = %43
  %49 = shl nsw i32 %46, 3
  %50 = lshr i32 539700480, %49
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %53 = load i64, ptr %52, align 8, !tbaa !37
  %54 = add i64 %53, 1
  %55 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %56 = load i64, ptr %55, align 8, !tbaa !18
  %57 = icmp ugt i64 %54, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds nuw i8, ptr %44, i64 24
  %60 = load ptr, ptr %59, align 8, !tbaa !13
  tail call void %60(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %54)
  %61 = load i64, ptr %52, align 8, !tbaa !37
  %62 = add i64 %61, 1
  br label %63

63:                                               ; preds = %58, %48
  %64 = phi i64 [ %54, %48 ], [ %62, %58 ]
  %65 = phi i64 [ %53, %48 ], [ %61, %58 ]
  %66 = load ptr, ptr %44, align 8, !tbaa !17
  store i64 %64, ptr %52, align 8, !tbaa !37
  %67 = getelementptr inbounds nuw i8, ptr %66, i64 %65
  store i8 %51, ptr %67, align 1, !tbaa !10
  br label %68

68:                                               ; preds = %63, %43
  %69 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %70 = load ptr, ptr %69, align 8, !tbaa !196
  %71 = ptrtoint ptr %70 to i64
  %72 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %73 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %74 = getelementptr inbounds nuw i8, ptr %44, i64 24
  br label %75

75:                                               ; preds = %156, %68
  %76 = phi i64 [ 0, %68 ], [ %159, %156 ]
  %77 = getelementptr inbounds nuw i8, ptr %70, i64 %76
  %78 = sub nsw i64 3, %76
  %79 = icmp slt i64 %76, 4
  br i1 %79, label %81, label %80

80:                                               ; preds = %75
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

81:                                               ; preds = %75
  %82 = load i64, ptr %72, align 8, !tbaa !37
  %83 = add i64 %82, %78
  %84 = load i64, ptr %73, align 8, !tbaa !18
  %85 = icmp ugt i64 %83, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %81
  %87 = load ptr, ptr %74, align 8, !tbaa !13
  tail call void %87(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %83)
  %88 = load i64, ptr %73, align 8, !tbaa !18
  %89 = load i64, ptr %72, align 8, !tbaa !37
  br label %90

90:                                               ; preds = %86, %81
  %91 = phi i64 [ %82, %81 ], [ %89, %86 ]
  %92 = phi i64 [ %84, %81 ], [ %88, %86 ]
  %93 = sub i64 %92, %91
  %94 = tail call i64 @llvm.umin.i64(i64 %93, i64 %78)
  %95 = load ptr, ptr %44, align 8, !tbaa !17
  %96 = ptrtoint ptr %95 to i64
  %97 = getelementptr inbounds nuw i8, ptr %95, i64 %91
  %98 = icmp eq i64 %94, 0
  br i1 %98, label %156, label %99

99:                                               ; preds = %90
  %100 = icmp ult i64 %94, 4
  br i1 %100, label %101, label %118

101:                                              ; preds = %139, %152, %118, %99
  %102 = phi i64 [ %126, %139 ], [ 0, %99 ], [ 0, %118 ], [ %144, %152 ]
  %103 = and i64 %94, 3
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %101, %105
  %106 = phi i64 [ %111, %105 ], [ %102, %101 ]
  %107 = phi i64 [ %112, %105 ], [ 0, %101 ]
  %108 = getelementptr inbounds nuw i8, ptr %77, i64 %106
  %109 = load i8, ptr %108, align 1, !tbaa !10
  %110 = getelementptr inbounds nuw i8, ptr %97, i64 %106
  store i8 %109, ptr %110, align 1, !tbaa !10
  %111 = add nuw i64 %106, 1
  %112 = add i64 %107, 1
  %113 = icmp eq i64 %112, %103
  br i1 %113, label %114, label %105, !llvm.loop !197

114:                                              ; preds = %105, %101
  %115 = phi i64 [ %102, %101 ], [ %111, %105 ]
  %116 = sub i64 %102, %94
  %117 = icmp ugt i64 %116, -4
  br i1 %117, label %154, label %161

118:                                              ; preds = %99
  %119 = add i64 %91, %96
  %120 = add i64 %76, %71
  %121 = sub i64 %119, %120
  %122 = icmp ult i64 %121, 32
  br i1 %122, label %101, label %123

123:                                              ; preds = %118
  %124 = icmp ult i64 %94, 32
  br i1 %124, label %142, label %125

125:                                              ; preds = %123
  %126 = and i64 %94, -32
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 0, %125 ], [ %135, %127 ]
  %129 = getelementptr inbounds nuw i8, ptr %77, i64 %128
  %130 = getelementptr inbounds nuw i8, ptr %129, i64 16
  %131 = load <16 x i8>, ptr %129, align 1, !tbaa !10
  %132 = load <16 x i8>, ptr %130, align 1, !tbaa !10
  %133 = getelementptr inbounds nuw i8, ptr %97, i64 %128
  %134 = getelementptr inbounds nuw i8, ptr %133, i64 16
  store <16 x i8> %131, ptr %133, align 1, !tbaa !10
  store <16 x i8> %132, ptr %134, align 1, !tbaa !10
  %135 = add nuw i64 %128, 32
  %136 = icmp eq i64 %135, %126
  br i1 %136, label %137, label %127, !llvm.loop !198

137:                                              ; preds = %127
  %138 = icmp eq i64 %94, %126
  br i1 %138, label %154, label %139

139:                                              ; preds = %137
  %140 = and i64 %94, 28
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %101, label %142

142:                                              ; preds = %139, %123
  %143 = phi i64 [ %126, %139 ], [ 0, %123 ]
  %144 = and i64 %94, -4
  br label %145

145:                                              ; preds = %145, %142
  %146 = phi i64 [ %143, %142 ], [ %150, %145 ]
  %147 = getelementptr inbounds nuw i8, ptr %77, i64 %146
  %148 = load <4 x i8>, ptr %147, align 1, !tbaa !10
  %149 = getelementptr inbounds nuw i8, ptr %97, i64 %146
  store <4 x i8> %148, ptr %149, align 1, !tbaa !10
  %150 = add nuw i64 %146, 4
  %151 = icmp eq i64 %150, %144
  br i1 %151, label %152, label %145, !llvm.loop !199

152:                                              ; preds = %145
  %153 = icmp eq i64 %94, %144
  br i1 %153, label %154, label %101

154:                                              ; preds = %114, %161, %152, %137
  %155 = load i64, ptr %72, align 8, !tbaa !37
  br label %156

156:                                              ; preds = %154, %90
  %157 = phi i64 [ %155, %154 ], [ %91, %90 ]
  %158 = add i64 %157, %94
  store i64 %158, ptr %72, align 8, !tbaa !37
  %159 = add nuw nsw i64 %94, %76
  %160 = icmp eq i64 %159, 3
  br i1 %160, label %180, label %75, !llvm.loop !77

161:                                              ; preds = %114, %161
  %162 = phi i64 [ %178, %161 ], [ %115, %114 ]
  %163 = getelementptr inbounds nuw i8, ptr %77, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !10
  %165 = getelementptr inbounds nuw i8, ptr %97, i64 %162
  store i8 %164, ptr %165, align 1, !tbaa !10
  %166 = add nuw i64 %162, 1
  %167 = getelementptr inbounds nuw i8, ptr %77, i64 %166
  %168 = load i8, ptr %167, align 1, !tbaa !10
  %169 = getelementptr inbounds nuw i8, ptr %97, i64 %166
  store i8 %168, ptr %169, align 1, !tbaa !10
  %170 = add nuw i64 %162, 2
  %171 = getelementptr inbounds nuw i8, ptr %77, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !10
  %173 = getelementptr inbounds nuw i8, ptr %97, i64 %170
  store i8 %172, ptr %173, align 1, !tbaa !10
  %174 = add nuw i64 %162, 3
  %175 = getelementptr inbounds nuw i8, ptr %77, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !10
  %177 = getelementptr inbounds nuw i8, ptr %97, i64 %174
  store i8 %176, ptr %177, align 1, !tbaa !10
  %178 = add nuw i64 %162, 4
  %179 = icmp eq i64 %178, %94
  br i1 %179, label %154, label %161, !llvm.loop !200

180:                                              ; preds = %156
  %181 = icmp eq i64 %12, %21
  br i1 %181, label %184, label %182

182:                                              ; preds = %180
  %183 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %45, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %184

184:                                              ; preds = %182, %180
  %185 = phi i64 [ %183, %182 ], [ %45, %180 ]
  ret i64 %185
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9dragonbox21shorter_interval_caseIfEENS2_10decimal_fpIT_EEi(i32 noundef %0) local_unnamed_addr #18 comdat personality ptr @__gxx_personality_seh0 {
  %2 = add i32 %0, 2985
  %3 = icmp ult i32 %2, 5922
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 211, ptr noundef nonnull @.str.32) #31
          to label %5 unwind label %6

5:                                                ; preds = %4
  unreachable

6:                                                ; preds = %4
  %7 = landingpad { ptr, i32 }
          catch ptr null
  %8 = extractvalue { ptr, i32 } %7, 0
  tail call void @__clang_call_terminate(ptr %8) #33
  unreachable

9:                                                ; preds = %1
  %10 = mul nsw i32 %0, 631305
  %11 = add nsw i32 %10, -261663
  %12 = ashr i32 %11, 21
  %13 = mul nsw i32 %12, -1741647
  %14 = ashr i32 %13, 19
  %15 = add nsw i32 %14, %0
  %16 = sub nsw i32 31, %12
  %17 = icmp ult i32 %16, 78
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 277, ptr noundef nonnull @.str.33) #31
          to label %19 unwind label %20

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %18
  %21 = landingpad { ptr, i32 }
          catch ptr null
  %22 = extractvalue { ptr, i32 } %21, 0
  tail call void @__clang_call_terminate(ptr %22) #33
  unreachable

23:                                               ; preds = %9
  %24 = zext nneg i32 %16 to i64
  %25 = getelementptr inbounds nuw [78 x i64], ptr @_ZZN3fmt3v116detail9dragonbox14cache_accessorIfE16get_cached_powerEiE18pow10_significands, i64 0, i64 %24
  %26 = load i64, ptr %25, align 8, !tbaa !20
  %27 = lshr i64 %26, 25
  %28 = sub i64 %26, %27
  %29 = sub nsw i32 40, %15
  %30 = zext nneg i32 %29 to i64
  %31 = lshr i64 %28, %30
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %26, 24
  %34 = add i64 %33, %26
  %35 = lshr i64 %34, %30
  %36 = trunc i64 %35 to i32
  %37 = and i32 %0, -2
  %38 = icmp ne i32 %37, 2
  %39 = zext i1 %38 to i32
  %40 = add i32 %32, %39
  %41 = udiv i32 %36, 10
  %42 = mul nuw i32 %41, 10
  %43 = icmp ult i32 %42, %40
  br i1 %43, label %73, label %44

44:                                               ; preds = %23
  %45 = add nsw i32 %12, 1
  %46 = icmp ult i32 %36, 10
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = mul i32 %41, -1030792151
  %49 = tail call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 30)
  %50 = icmp ugt i32 %49, 42949672
  br i1 %50, label %60, label %53

51:                                               ; preds = %44
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 1154, ptr noundef nonnull @.str.14) #31
          to label %52 unwind label %70

52:                                               ; preds = %51
  unreachable

53:                                               ; preds = %47, %53
  %54 = phi i32 [ %58, %53 ], [ %49, %47 ]
  %55 = phi i32 [ %56, %53 ], [ 0, %47 ]
  %56 = add nuw nsw i32 %55, 2
  %57 = mul i32 %54, -1030792151
  %58 = tail call i32 @llvm.fshl.i32(i32 %57, i32 %57, i32 30)
  %59 = icmp ugt i32 %58, 42949672
  br i1 %59, label %60, label %53

60:                                               ; preds = %53, %47
  %61 = phi i32 [ %41, %47 ], [ %54, %53 ]
  %62 = phi i32 [ 0, %47 ], [ %56, %53 ]
  %63 = mul i32 %61, -858993459
  %64 = tail call i32 @llvm.fshl.i32(i32 %63, i32 %63, i32 31)
  %65 = icmp ult i32 %64, 429496730
  %66 = select i1 %65, i32 %64, i32 %61
  %67 = zext i1 %65 to i32
  %68 = or i32 %62, %67
  %69 = add nsw i32 %45, %68
  br label %87

70:                                               ; preds = %51
  %71 = landingpad { ptr, i32 }
          catch ptr null
  %72 = extractvalue { ptr, i32 } %71, 0
  tail call void @__clang_call_terminate(ptr %72) #33
  unreachable

73:                                               ; preds = %23
  %74 = sub nsw i32 39, %15
  %75 = zext nneg i32 %74 to i64
  %76 = lshr i64 %26, %75
  %77 = trunc i64 %76 to i32
  %78 = add i32 %77, 1
  %79 = lshr i32 %78, 1
  %80 = icmp eq i32 %0, -35
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  %82 = and i32 %79, 2147483646
  br label %87

83:                                               ; preds = %73
  %84 = icmp ult i32 %79, %40
  %85 = zext i1 %84 to i32
  %86 = add nuw i32 %79, %85
  br label %87

87:                                               ; preds = %83, %81, %60
  %88 = phi i32 [ %82, %81 ], [ %66, %60 ], [ %86, %83 ]
  %89 = phi i32 [ %12, %81 ], [ %69, %60 ], [ %12, %83 ]
  %90 = zext i32 %89 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %88 to i64
  %93 = or disjoint i64 %91, %92
  ret i64 %93
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 4 dereferenceable(8) %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %3, i32 noundef %4, i64 %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca %"class.std::__1::locale", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca %class.anon.33, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %17 = alloca %class.anon.34, align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %20 = alloca %class.anon.35, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca %class.anon.36, align 8
  store i32 %3, ptr %8, align 4, !tbaa !201
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #30
  %24 = load i32, ptr %1, align 4, !tbaa !202
  store i32 %24, ptr %9, align 4, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #30
  %25 = or i32 %24, 1
  %26 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %25, i1 true)
  %27 = xor i32 %26, 31
  %28 = zext nneg i32 %27 to i64
  %29 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !20
  %31 = zext i32 %24 to i64
  %32 = add i64 %30, %31
  %33 = lshr i64 %32, 32
  %34 = trunc nuw i64 %33 to i32
  store i32 %34, ptr %10, align 4, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #30
  store i8 48, ptr %11, align 1, !tbaa !10
  %35 = icmp sgt i64 %32, -1
  br i1 %35, label %37, label %36

36:                                               ; preds = %6
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

37:                                               ; preds = %6
  %38 = icmp ne i32 %3, 0
  %39 = zext i1 %38 to i64
  %40 = add nuw nsw i64 %33, %39
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #30
  %41 = load i32, ptr %2, align 4, !tbaa !53
  %42 = and i32 %41, 16384
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #30
  %45 = icmp eq i64 %5, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = inttoptr i64 %5 to ptr
  call void @_ZNSt3__16localeC1ERKS0_(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 8 dereferenceable(8) %47) #30
  br label %49

48:                                               ; preds = %44
  call void @_ZNSt3__16localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  br label %49

49:                                               ; preds = %48, %46
  %50 = invoke noundef nonnull align 8 dereferenceable(40) ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) @_ZNSt3__18numpunctIcE2idE)
          to label %51 unwind label %58

51:                                               ; preds = %49
  %52 = load ptr, ptr %50, align 8, !tbaa !82
  %53 = getelementptr inbounds nuw i8, ptr %52, i64 24
  %54 = load ptr, ptr %53, align 8
  %55 = invoke noundef i8 %54(ptr noundef nonnull align 8 dereferenceable(40) %50)
          to label %60 unwind label %58

56:                                               ; preds = %363, %58
  %57 = phi { ptr, i32 } [ %59, %58 ], [ %364, %363 ]
  resume { ptr, i32 } %57

58:                                               ; preds = %51, %49
  %59 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  br label %56

60:                                               ; preds = %51
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  %61 = load i32, ptr %10, align 4, !tbaa !11
  %62 = load i32, ptr %2, align 4
  br label %63

63:                                               ; preds = %37, %60
  %64 = phi i32 [ %62, %60 ], [ %41, %37 ]
  %65 = phi i32 [ %61, %60 ], [ %34, %37 ]
  %66 = phi i8 [ %55, %60 ], [ 46, %37 ]
  store i8 %66, ptr %12, align 1, !tbaa !10
  %67 = getelementptr inbounds nuw i8, ptr %1, i64 4
  %68 = load i32, ptr %67, align 4, !tbaa !204
  %69 = add nsw i32 %65, %68
  %70 = add nsw i32 %69, -1
  %71 = freeze i32 %64
  %72 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %73 = load i32, ptr %72, align 4
  %74 = trunc i32 %71 to i8
  %75 = and i8 %74, 7
  switch i8 %75, label %76 [
    i8 1, label %82
    i8 2, label %140
  ]

76:                                               ; preds = %63
  %77 = icmp slt i32 %69, -3
  br i1 %77, label %82, label %78

78:                                               ; preds = %76
  %79 = icmp sgt i32 %73, 0
  %80 = select i1 %79, i32 %73, i32 %4
  %81 = icmp sgt i32 %69, %80
  br i1 %81, label %82, label %140

82:                                               ; preds = %76, %63, %78
  %83 = and i32 %71, 8192
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = sub nsw i32 %73, %65
  %87 = call i32 @llvm.smax.i32(i32 %86, i32 0)
  %88 = zext nneg i32 %87 to i64
  %89 = add nuw nsw i64 %40, %88
  br label %93

90:                                               ; preds = %82
  %91 = icmp eq i32 %65, 1
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  store i8 0, ptr %12, align 1, !tbaa !10
  br label %93

93:                                               ; preds = %90, %92, %85
  %94 = phi i8 [ %66, %85 ], [ 0, %92 ], [ %66, %90 ]
  %95 = phi i32 [ %87, %85 ], [ 0, %92 ], [ 0, %90 ]
  %96 = phi i64 [ %89, %85 ], [ %40, %92 ], [ %40, %90 ]
  %97 = sub nsw i32 1, %69
  %98 = icmp slt i32 %69, 1
  %99 = select i1 %98, i32 %97, i32 %70
  %100 = icmp sgt i32 %99, 99
  %101 = icmp sgt i32 %99, 999
  %102 = select i1 %101, i64 4, i64 3
  %103 = select i1 %100, i64 %102, i64 2
  %104 = icmp eq i8 %94, 0
  %105 = select i1 %104, i64 2, i64 3
  %106 = add nuw nsw i64 %96, %103
  %107 = add nuw nsw i64 %106, %105
  %108 = and i32 %71, 4096
  %109 = icmp eq i32 %108, 0
  %110 = select i1 %109, i8 101, i8 69
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %13) #30
  %111 = load i32, ptr %8, align 4, !tbaa !201
  store i32 %111, ptr %13, align 4, !tbaa !205
  %112 = getelementptr inbounds nuw i8, ptr %13, i64 4
  %113 = load i32, ptr %9, align 4, !tbaa !11
  store i32 %113, ptr %112, align 4, !tbaa !207
  %114 = getelementptr inbounds nuw i8, ptr %13, i64 8
  store i32 %65, ptr %114, align 4, !tbaa !208
  %115 = getelementptr inbounds nuw i8, ptr %13, i64 12
  store i8 %94, ptr %115, align 4, !tbaa !209
  %116 = getelementptr inbounds nuw i8, ptr %13, i64 16
  store i32 %95, ptr %116, align 4, !tbaa !210
  %117 = getelementptr inbounds nuw i8, ptr %13, i64 20
  store i8 48, ptr %117, align 4, !tbaa !211
  %118 = getelementptr inbounds nuw i8, ptr %13, i64 21
  store i8 %110, ptr %118, align 1, !tbaa !212
  %119 = getelementptr inbounds nuw i8, ptr %13, i64 24
  store i32 %70, ptr %119, align 4, !tbaa !213
  %120 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %121 = load i32, ptr %120, align 4, !tbaa !125
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %93
  %124 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %107, i64 noundef %107, ptr noundef nonnull align 4 dereferenceable(28) %13)
  br label %138

125:                                              ; preds = %93
  %126 = inttoptr i64 %0 to ptr
  %127 = getelementptr inbounds nuw i8, ptr %126, i64 8
  %128 = load i64, ptr %127, align 8, !tbaa !37
  %129 = add i64 %128, %107
  %130 = getelementptr inbounds nuw i8, ptr %126, i64 16
  %131 = load i64, ptr %130, align 8, !tbaa !18
  %132 = icmp ugt i64 %129, %131
  br i1 %132, label %133, label %136

133:                                              ; preds = %125
  %134 = getelementptr inbounds nuw i8, ptr %126, i64 24
  %135 = load ptr, ptr %134, align 8, !tbaa !13
  call void %135(ptr noundef nonnull align 8 dereferenceable(32) %126, i64 noundef %129)
  br label %136

136:                                              ; preds = %125, %133
  %137 = call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 4 dereferenceable(28) %13, i64 %0)
  br label %138

138:                                              ; preds = %136, %123
  %139 = phi i64 [ %124, %123 ], [ %137, %136 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %13) #30
  br label %365

140:                                              ; preds = %63, %78
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #30
  store i32 %69, ptr %14, align 4, !tbaa !11
  %141 = icmp sgt i32 %68, -1
  br i1 %141, label %142, label %239

142:                                              ; preds = %140
  %143 = zext nneg i32 %68 to i64
  %144 = add nuw nsw i64 %40, %143
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #30
  %145 = sub nsw i32 %73, %69
  store i32 %145, ptr %15, align 4, !tbaa !11
  %146 = and i32 %71, 8192
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %158, label %148

148:                                              ; preds = %142
  %149 = add nuw nsw i64 %144, 1
  %150 = icmp sgt i32 %145, 0
  %151 = icmp eq i8 %75, 2
  %152 = or i1 %150, %151
  br i1 %152, label %154, label %153

153:                                              ; preds = %148
  store i32 0, ptr %15, align 4, !tbaa !11
  br label %158

154:                                              ; preds = %148
  br i1 %150, label %155, label %158

155:                                              ; preds = %154
  %156 = zext nneg i32 %145 to i64
  %157 = add nuw nsw i64 %149, %156
  br label %158

158:                                              ; preds = %153, %154, %155, %142
  %159 = phi i64 [ %157, %155 ], [ %149, %154 ], [ %144, %142 ], [ %149, %153 ]
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %16) #30
  %160 = and i32 %71, 16384
  %161 = icmp ne i32 %160, 0
  call void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %16, i64 %5, i1 noundef zeroext %161)
  %162 = getelementptr inbounds nuw i8, ptr %16, i64 24
  %163 = load i8, ptr %162, align 8
  %164 = and i8 %163, 1
  %165 = icmp eq i8 %164, 0
  %166 = getelementptr inbounds nuw i8, ptr %16, i64 32
  %167 = load i64, ptr %166, align 8
  %168 = lshr i8 %163, 1
  %169 = zext nneg i8 %168 to i64
  %170 = select i1 %165, i64 %169, i64 %167
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %210, label %172

172:                                              ; preds = %158
  %173 = load i8, ptr %16, align 8, !noalias !214
  %174 = and i8 %173, 1
  %175 = icmp eq i8 %174, 0
  %176 = getelementptr inbounds nuw i8, ptr %16, i64 1
  %177 = getelementptr inbounds nuw i8, ptr %16, i64 16
  %178 = load ptr, ptr %177, align 8, !noalias !214
  %179 = select i1 %175, ptr %176, ptr %178
  %180 = getelementptr inbounds nuw i8, ptr %16, i64 8
  %181 = load i64, ptr %180, align 8
  %182 = lshr i8 %173, 1
  %183 = zext nneg i8 %182 to i64
  %184 = select i1 %175, i64 %183, i64 %181
  %185 = getelementptr inbounds nuw i8, ptr %179, i64 %184
  %186 = getelementptr inbounds i8, ptr %185, i64 -1
  br label %187

187:                                              ; preds = %206, %172
  %188 = phi i32 [ 0, %172 ], [ %207, %206 ]
  %189 = phi ptr [ %179, %172 ], [ %202, %206 ]
  %190 = phi i32 [ 0, %172 ], [ %204, %206 ]
  %191 = icmp eq ptr %189, %185
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  %193 = load i8, ptr %186, align 1, !tbaa !10
  br label %200

194:                                              ; preds = %187
  %195 = load i8, ptr %189, align 1, !tbaa !10
  %196 = add i8 %195, -127
  %197 = icmp ult i8 %196, -126
  br i1 %197, label %208, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds nuw i8, ptr %189, i64 1
  br label %200

200:                                              ; preds = %198, %192
  %201 = phi i8 [ %195, %198 ], [ %193, %192 ]
  %202 = phi ptr [ %199, %198 ], [ %189, %192 ]
  %203 = sext i8 %201 to i32
  %204 = add nsw i32 %190, %203
  %205 = icmp sgt i32 %69, %204
  br i1 %205, label %206, label %208

206:                                              ; preds = %200
  %207 = add nuw nsw i32 %188, 1
  br label %187

208:                                              ; preds = %200, %194
  %209 = zext nneg i32 %188 to i64
  br label %210

210:                                              ; preds = %208, %158
  %211 = phi i64 [ 0, %158 ], [ %209, %208 ]
  %212 = add nuw nsw i64 %159, %211
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %17) #30
  store ptr %8, ptr %17, align 8, !tbaa !36
  %213 = getelementptr inbounds nuw i8, ptr %17, i64 8
  store ptr %9, ptr %213, align 8, !tbaa !119
  %214 = getelementptr inbounds nuw i8, ptr %17, i64 16
  store ptr %10, ptr %214, align 8, !tbaa !119
  %215 = getelementptr inbounds nuw i8, ptr %17, i64 24
  store ptr %1, ptr %215, align 8, !tbaa !217
  %216 = getelementptr inbounds nuw i8, ptr %17, i64 32
  store ptr %16, ptr %216, align 8, !tbaa !121
  %217 = getelementptr inbounds nuw i8, ptr %17, i64 40
  store ptr %2, ptr %217, align 8, !tbaa !91
  %218 = getelementptr inbounds nuw i8, ptr %17, i64 48
  store ptr %12, ptr %218, align 8, !tbaa !19
  %219 = getelementptr inbounds nuw i8, ptr %17, i64 56
  store ptr %15, ptr %219, align 8, !tbaa !119
  %220 = getelementptr inbounds nuw i8, ptr %17, i64 64
  store ptr %11, ptr %220, align 8, !tbaa !19
  %221 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %212, i64 noundef %212, ptr noundef nonnull align 8 dereferenceable(72) %17)
          to label %222 unwind label %237

222:                                              ; preds = %210
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %17) #30
  %223 = load i8, ptr %162, align 8
  %224 = and i8 %223, 1
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds nuw i8, ptr %16, i64 40
  %228 = load ptr, ptr %227, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %228) #34
  br label %229

229:                                              ; preds = %226, %222
  %230 = load i8, ptr %16, align 8
  %231 = and i8 %230, 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds nuw i8, ptr %16, i64 16
  %235 = load ptr, ptr %234, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %235) #34
  br label %236

236:                                              ; preds = %229, %233
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #30
  br label %361

237:                                              ; preds = %210
  %238 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %17) #30
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %16) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #30
  br label %363

239:                                              ; preds = %140
  %240 = icmp sgt i32 %69, 0
  br i1 %240, label %241, label %328

241:                                              ; preds = %239
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #30
  %242 = and i32 %71, 8192
  %243 = icmp eq i32 %242, 0
  %244 = sub nsw i32 %73, %65
  %245 = select i1 %243, i32 0, i32 %244
  store i32 %245, ptr %18, align 4, !tbaa !11
  %246 = call noundef i32 @llvm.smax.i32(i32 %245, i32 0)
  %247 = add nuw i32 %246, 1
  %248 = zext i32 %247 to i64
  %249 = add nuw nsw i64 %40, %248
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %19) #30
  %250 = and i32 %71, 16384
  %251 = icmp ne i32 %250, 0
  call void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %19, i64 %5, i1 noundef zeroext %251)
  %252 = getelementptr inbounds nuw i8, ptr %19, i64 24
  %253 = load i8, ptr %252, align 8
  %254 = and i8 %253, 1
  %255 = icmp eq i8 %254, 0
  %256 = getelementptr inbounds nuw i8, ptr %19, i64 32
  %257 = load i64, ptr %256, align 8
  %258 = lshr i8 %253, 1
  %259 = zext nneg i8 %258 to i64
  %260 = select i1 %255, i64 %259, i64 %257
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %300, label %262

262:                                              ; preds = %241
  %263 = load i8, ptr %19, align 8, !noalias !219
  %264 = and i8 %263, 1
  %265 = icmp eq i8 %264, 0
  %266 = getelementptr inbounds nuw i8, ptr %19, i64 1
  %267 = getelementptr inbounds nuw i8, ptr %19, i64 16
  %268 = load ptr, ptr %267, align 8, !noalias !219
  %269 = select i1 %265, ptr %266, ptr %268
  %270 = getelementptr inbounds nuw i8, ptr %19, i64 8
  %271 = load i64, ptr %270, align 8
  %272 = lshr i8 %263, 1
  %273 = zext nneg i8 %272 to i64
  %274 = select i1 %265, i64 %273, i64 %271
  %275 = getelementptr inbounds nuw i8, ptr %269, i64 %274
  %276 = getelementptr inbounds i8, ptr %275, i64 -1
  br label %277

277:                                              ; preds = %296, %262
  %278 = phi i32 [ 0, %262 ], [ %297, %296 ]
  %279 = phi ptr [ %269, %262 ], [ %292, %296 ]
  %280 = phi i32 [ 0, %262 ], [ %294, %296 ]
  %281 = icmp eq ptr %279, %275
  br i1 %281, label %282, label %284

282:                                              ; preds = %277
  %283 = load i8, ptr %276, align 1, !tbaa !10
  br label %290

284:                                              ; preds = %277
  %285 = load i8, ptr %279, align 1, !tbaa !10
  %286 = add i8 %285, -127
  %287 = icmp ult i8 %286, -126
  br i1 %287, label %298, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds nuw i8, ptr %279, i64 1
  br label %290

290:                                              ; preds = %288, %282
  %291 = phi i8 [ %285, %288 ], [ %283, %282 ]
  %292 = phi ptr [ %289, %288 ], [ %279, %282 ]
  %293 = sext i8 %291 to i32
  %294 = add nsw i32 %280, %293
  %295 = icmp sgt i32 %69, %294
  br i1 %295, label %296, label %298

296:                                              ; preds = %290
  %297 = add nuw nsw i32 %278, 1
  br label %277

298:                                              ; preds = %290, %284
  %299 = zext nneg i32 %278 to i64
  br label %300

300:                                              ; preds = %298, %241
  %301 = phi i64 [ 0, %241 ], [ %299, %298 ]
  %302 = add nuw nsw i64 %249, %301
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %20) #30
  store ptr %8, ptr %20, align 8, !tbaa !36
  %303 = getelementptr inbounds nuw i8, ptr %20, i64 8
  store ptr %9, ptr %303, align 8, !tbaa !119
  %304 = getelementptr inbounds nuw i8, ptr %20, i64 16
  store ptr %10, ptr %304, align 8, !tbaa !119
  %305 = getelementptr inbounds nuw i8, ptr %20, i64 24
  store ptr %14, ptr %305, align 8, !tbaa !119
  %306 = getelementptr inbounds nuw i8, ptr %20, i64 32
  store ptr %12, ptr %306, align 8, !tbaa !19
  %307 = getelementptr inbounds nuw i8, ptr %20, i64 40
  store ptr %19, ptr %307, align 8, !tbaa !121
  %308 = getelementptr inbounds nuw i8, ptr %20, i64 48
  store ptr %18, ptr %308, align 8, !tbaa !119
  %309 = getelementptr inbounds nuw i8, ptr %20, i64 56
  store ptr %11, ptr %309, align 8, !tbaa !19
  %310 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %302, i64 noundef %302, ptr noundef nonnull align 8 dereferenceable(64) %20)
          to label %311 unwind label %326

311:                                              ; preds = %300
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #30
  %312 = load i8, ptr %252, align 8
  %313 = and i8 %312, 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %318, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds nuw i8, ptr %19, i64 40
  %317 = load ptr, ptr %316, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %317) #34
  br label %318

318:                                              ; preds = %315, %311
  %319 = load i8, ptr %19, align 8
  %320 = and i8 %319, 1
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds nuw i8, ptr %19, i64 16
  %324 = load ptr, ptr %323, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %324) #34
  br label %325

325:                                              ; preds = %318, %322
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #30
  br label %361

326:                                              ; preds = %300
  %327 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #30
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %19) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #30
  br label %363

328:                                              ; preds = %239
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #30
  %329 = sub nsw i32 0, %69
  store i32 %329, ptr %21, align 4, !tbaa !11
  %330 = icmp eq i32 %65, 0
  br i1 %330, label %332, label %331

331:                                              ; preds = %328
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #30
  br label %346

332:                                              ; preds = %328
  %333 = icmp sgt i32 %73, -1
  %334 = icmp slt i32 %73, %329
  %335 = select i1 %333, i1 %334, i1 false
  br i1 %335, label %336, label %337

336:                                              ; preds = %332
  store i32 %73, ptr %21, align 4, !tbaa !11
  br label %337

337:                                              ; preds = %336, %332
  %338 = phi i32 [ %73, %336 ], [ %329, %332 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #30
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %346

340:                                              ; preds = %337
  %341 = and i32 %71, 8192
  %342 = icmp eq i32 %341, 0
  %343 = lshr exact i32 %341, 13
  %344 = trunc nuw nsw i32 %343 to i8
  store i8 %344, ptr %22, align 1, !tbaa !222
  %345 = select i1 %342, i32 1, i32 2
  br label %348

346:                                              ; preds = %337, %331
  %347 = phi i32 [ %329, %331 ], [ %338, %337 ]
  store i8 1, ptr %22, align 1, !tbaa !222
  br label %348

348:                                              ; preds = %346, %340
  %349 = phi i32 [ 2, %346 ], [ %345, %340 ]
  %350 = phi i32 [ %347, %346 ], [ 0, %340 ]
  %351 = add nuw i32 %350, %349
  %352 = zext i32 %351 to i64
  %353 = add nuw nsw i64 %40, %352
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %23) #30
  store ptr %8, ptr %23, align 8, !tbaa !36
  %354 = getelementptr inbounds nuw i8, ptr %23, i64 8
  store ptr %22, ptr %354, align 8, !tbaa !223
  %355 = getelementptr inbounds nuw i8, ptr %23, i64 16
  store ptr %12, ptr %355, align 8, !tbaa !19
  %356 = getelementptr inbounds nuw i8, ptr %23, i64 24
  store ptr %21, ptr %356, align 8, !tbaa !119
  %357 = getelementptr inbounds nuw i8, ptr %23, i64 32
  store ptr %11, ptr %357, align 8, !tbaa !19
  %358 = getelementptr inbounds nuw i8, ptr %23, i64 40
  store ptr %9, ptr %358, align 8, !tbaa !119
  %359 = getelementptr inbounds nuw i8, ptr %23, i64 48
  store ptr %10, ptr %359, align 8, !tbaa !119
  %360 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %353, i64 noundef %353, ptr noundef nonnull align 8 dereferenceable(56) %23)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %23) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %22) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #30
  br label %361

361:                                              ; preds = %348, %325, %236
  %362 = phi i64 [ %221, %236 ], [ %310, %325 ], [ %360, %348 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #30
  br label %365

363:                                              ; preds = %326, %237
  %364 = phi { ptr, i32 } [ %238, %237 ], [ %327, %326 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #30
  br label %56

365:                                              ; preds = %361, %138
  %366 = phi i64 [ %139, %138 ], [ %362, %361 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #30
  ret i64 %366
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 4 dereferenceable(28) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca [11 x i8], align 1
  %4 = inttoptr i64 %1 to ptr
  %5 = load i32, ptr %0, align 4, !tbaa !205
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 4
  %29 = load i32, ptr %28, align 4, !tbaa !207
  %30 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %31 = load i32, ptr %30, align 4, !tbaa !208
  %32 = getelementptr inbounds nuw i8, ptr %0, i64 12
  %33 = load i8, ptr %32, align 4, !tbaa !209
  call void @llvm.lifetime.start.p0(i64 11, ptr nonnull %3) #30
  %34 = call noundef ptr @_ZN3fmt3v116detail17write_significandIcjTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef nonnull %3, i32 noundef %29, i32 noundef %31, i32 noundef 1, i8 noundef %33)
  %35 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %3, ptr noundef %34, i64 %1)
  call void @llvm.lifetime.end.p0(i64 11, ptr nonnull %3) #30
  %36 = inttoptr i64 %35 to ptr
  %37 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %38 = load i32, ptr %37, align 4, !tbaa !210
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %63

40:                                               ; preds = %27
  %41 = getelementptr inbounds nuw i8, ptr %0, i64 20
  %42 = getelementptr inbounds nuw i8, ptr %36, i64 8
  %43 = getelementptr inbounds nuw i8, ptr %36, i64 16
  %44 = getelementptr inbounds nuw i8, ptr %36, i64 24
  br label %45

45:                                               ; preds = %56, %40
  %46 = phi i32 [ 0, %40 ], [ %61, %56 ]
  %47 = load i8, ptr %41, align 4, !tbaa !10
  %48 = load i64, ptr %42, align 8, !tbaa !37
  %49 = add i64 %48, 1
  %50 = load i64, ptr %43, align 8, !tbaa !18
  %51 = icmp ugt i64 %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = load ptr, ptr %44, align 8, !tbaa !13
  call void %53(ptr noundef nonnull align 8 dereferenceable(32) %36, i64 noundef %49)
  %54 = load i64, ptr %42, align 8, !tbaa !37
  %55 = add i64 %54, 1
  br label %56

56:                                               ; preds = %52, %45
  %57 = phi i64 [ %49, %45 ], [ %55, %52 ]
  %58 = phi i64 [ %48, %45 ], [ %54, %52 ]
  %59 = load ptr, ptr %36, align 8, !tbaa !17
  store i64 %57, ptr %42, align 8, !tbaa !37
  %60 = getelementptr inbounds nuw i8, ptr %59, i64 %58
  store i8 %47, ptr %60, align 1, !tbaa !10
  %61 = add nuw nsw i32 %46, 1
  %62 = icmp eq i32 %61, %38
  br i1 %62, label %63, label %45, !llvm.loop !225

63:                                               ; preds = %56, %27
  %64 = getelementptr inbounds nuw i8, ptr %0, i64 21
  %65 = load i8, ptr %64, align 1, !tbaa !212
  %66 = getelementptr inbounds nuw i8, ptr %36, i64 8
  %67 = load i64, ptr %66, align 8, !tbaa !37
  %68 = add i64 %67, 1
  %69 = getelementptr inbounds nuw i8, ptr %36, i64 16
  %70 = load i64, ptr %69, align 8, !tbaa !18
  %71 = icmp ugt i64 %68, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %63
  %73 = getelementptr inbounds nuw i8, ptr %36, i64 24
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  call void %74(ptr noundef nonnull align 8 dereferenceable(32) %36, i64 noundef %68)
  %75 = load i64, ptr %66, align 8, !tbaa !37
  %76 = add i64 %75, 1
  br label %77

77:                                               ; preds = %63, %72
  %78 = phi i64 [ %68, %63 ], [ %76, %72 ]
  %79 = phi i64 [ %67, %63 ], [ %75, %72 ]
  %80 = load ptr, ptr %36, align 8, !tbaa !17
  store i64 %78, ptr %66, align 8, !tbaa !37
  %81 = getelementptr inbounds nuw i8, ptr %80, i64 %79
  store i8 %65, ptr %81, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %83 = load i32, ptr %82, align 4, !tbaa !213
  %84 = call i64 @_ZN3fmt3v116detail14write_exponentIcNS0_14basic_appenderIcEEEET0_iS5_(i32 noundef %83, i64 %35)
  ret i64 %84
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %0, i64 %1, i1 noundef zeroext %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %4 = alloca %"struct.fmt::v11::detail::thousands_sep_result", align 8
  %5 = alloca %"struct.fmt::v11::detail::thousands_sep_result", align 8
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, i8 0, i64 48, i1 false)
  br i1 %2, label %7, label %64

7:                                                ; preds = %3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #30
  tail call void @llvm.experimental.noalias.scope.decl(metadata !226)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #30, !noalias !226
  invoke void @_ZN3fmt3v116detail18thousands_sep_implIcEENS1_20thousands_sep_resultIT_EENS1_10locale_refE(ptr dead_on_unwind nonnull writable sret(%"struct.fmt::v11::detail::thousands_sep_result") align 8 %4, i64 %1)
          to label %8 unwind label %46

8:                                                ; preds = %7
  %9 = load i8, ptr %4, align 8, !noalias !226
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  %13 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %14 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %15 = load i8, ptr %14, align 8, !tbaa !229, !noalias !226
  store i8 %15, ptr %13, align 8, !tbaa !229, !alias.scope !226
  br label %38

16:                                               ; preds = %8
  %17 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %18 = load ptr, ptr %17, align 8, !tbaa !10, !noalias !226
  %19 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %20 = load i64, ptr %19, align 8, !tbaa !10, !noalias !226
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcy(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %18, i64 noundef %20)
          to label %21 unwind label %30

21:                                               ; preds = %16
  %22 = load i8, ptr %4, align 8, !noalias !226
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %26 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %27 = load i8, ptr %26, align 8, !tbaa !229, !noalias !226
  store i8 %27, ptr %25, align 8, !tbaa !229, !alias.scope !226
  br i1 %24, label %38, label %28

28:                                               ; preds = %21
  %29 = load ptr, ptr %17, align 8, !tbaa !10, !noalias !226
  call void @_ZdlPv(ptr noundef %29) #34
  br label %38

30:                                               ; preds = %16
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = load i8, ptr %4, align 8, !noalias !226
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = load ptr, ptr %17, align 8, !tbaa !10, !noalias !226
  call void @_ZdlPv(ptr noundef %36) #34
  br label %37

37:                                               ; preds = %35, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30, !noalias !226
  br label %65

38:                                               ; preds = %28, %21, %12
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30, !noalias !226
  %39 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %40 unwind label %48

40:                                               ; preds = %38
  %41 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %42 = load i8, ptr %41, align 8, !tbaa !229
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %40
  %45 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEyc(ptr noundef nonnull align 8 dereferenceable(24) %6, i64 noundef 1, i8 noundef %42)
          to label %56 unwind label %48

46:                                               ; preds = %7
  %47 = landingpad { ptr, i32 }
          cleanup
  br label %65

48:                                               ; preds = %44, %38
  %49 = landingpad { ptr, i32 }
          cleanup
  %50 = load i8, ptr %5, align 8
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %55 = load ptr, ptr %54, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %55) #34
  br label %65

56:                                               ; preds = %44, %40
  %57 = load i8, ptr %5, align 8
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %62 = load ptr, ptr %61, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %62) #34
  br label %63

63:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #30
  br label %64

64:                                               ; preds = %3, %63
  ret void

65:                                               ; preds = %53, %48, %46, %37
  %66 = phi { ptr, i32 } [ %47, %46 ], [ %31, %37 ], [ %49, %48 ], [ %49, %53 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #30
  %67 = load i8, ptr %6, align 8
  %68 = and i8 %67, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %72 = load ptr, ptr %71, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %72) #34
  br label %73

73:                                               ; preds = %65, %70
  %74 = load i8, ptr %0, align 8
  %75 = and i8 %74, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %79 = load ptr, ptr %78, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %79) #34
  br label %80

80:                                               ; preds = %73, %77
  resume { ptr, i32 } %66
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 4 dereferenceable(28) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 4 dereferenceable(28) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14write_exponentIcNS0_14basic_appenderIcEEEET0_iS5_(i32 noundef %0, i64 %1) local_unnamed_addr #0 comdat {
  %3 = inttoptr i64 %1 to ptr
  %4 = add i32 %0, 9999
  %5 = icmp ult i32 %4, 19999
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1493, ptr noundef nonnull @.str.35) #31
  unreachable

7:                                                ; preds = %2
  %8 = icmp slt i32 %0, 0
  %9 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %10 = load i64, ptr %9, align 8, !tbaa !37
  %11 = add i64 %10, 1
  %12 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %13 = load i64, ptr %12, align 8, !tbaa !18
  %14 = icmp ugt i64 %11, %13
  br i1 %8, label %15, label %27

15:                                               ; preds = %7
  br i1 %14, label %16, label %21

16:                                               ; preds = %15
  %17 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  tail call void %18(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %11)
  %19 = load i64, ptr %9, align 8, !tbaa !37
  %20 = add i64 %19, 1
  br label %21

21:                                               ; preds = %15, %16
  %22 = phi i64 [ %11, %15 ], [ %20, %16 ]
  %23 = phi i64 [ %10, %15 ], [ %19, %16 ]
  %24 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %22, ptr %9, align 8, !tbaa !37
  %25 = getelementptr inbounds nuw i8, ptr %24, i64 %23
  store i8 45, ptr %25, align 1, !tbaa !10
  %26 = sub nsw i32 0, %0
  br label %38

27:                                               ; preds = %7
  br i1 %14, label %28, label %33

28:                                               ; preds = %27
  %29 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %30 = load ptr, ptr %29, align 8, !tbaa !13
  tail call void %30(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %11)
  %31 = load i64, ptr %9, align 8, !tbaa !37
  %32 = add i64 %31, 1
  br label %33

33:                                               ; preds = %27, %28
  %34 = phi i64 [ %11, %27 ], [ %32, %28 ]
  %35 = phi i64 [ %10, %27 ], [ %31, %28 ]
  %36 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %34, ptr %9, align 8, !tbaa !37
  %37 = getelementptr inbounds nuw i8, ptr %36, i64 %35
  store i8 43, ptr %37, align 1, !tbaa !10
  br label %38

38:                                               ; preds = %33, %21
  %39 = phi i32 [ %26, %21 ], [ %0, %33 ]
  %40 = icmp samesign ugt i32 %39, 99
  br i1 %40, label %41, label %87

41:                                               ; preds = %38
  %42 = trunc i32 %39 to i16
  %43 = udiv i16 %42, 100
  %44 = urem i16 %42, 100
  %45 = shl nuw nsw i16 %43, 1
  %46 = zext nneg i16 %45 to i64
  %47 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %46
  %48 = icmp samesign ugt i32 %39, 999
  br i1 %48, label %49, label %67

49:                                               ; preds = %41
  %50 = load i8, ptr %47, align 2, !tbaa !10
  %51 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %52 = load i64, ptr %51, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %55 = load i64, ptr %54, align 8, !tbaa !18
  %56 = icmp ugt i64 %53, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %49
  %58 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %53)
  %60 = load i64, ptr %51, align 8, !tbaa !37
  %61 = add i64 %60, 1
  br label %62

62:                                               ; preds = %49, %57
  %63 = phi i64 [ %53, %49 ], [ %61, %57 ]
  %64 = phi i64 [ %52, %49 ], [ %60, %57 ]
  %65 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %63, ptr %51, align 8, !tbaa !37
  %66 = getelementptr inbounds nuw i8, ptr %65, i64 %64
  store i8 %50, ptr %66, align 1, !tbaa !10
  br label %67

67:                                               ; preds = %62, %41
  %68 = getelementptr inbounds nuw i8, ptr %47, i64 1
  %69 = load i8, ptr %68, align 1, !tbaa !10
  %70 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %71 = load i64, ptr %70, align 8, !tbaa !37
  %72 = add i64 %71, 1
  %73 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %74 = load i64, ptr %73, align 8, !tbaa !18
  %75 = icmp ugt i64 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %67
  %77 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  tail call void %78(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %72)
  %79 = load i64, ptr %70, align 8, !tbaa !37
  %80 = add i64 %79, 1
  br label %81

81:                                               ; preds = %67, %76
  %82 = phi i64 [ %72, %67 ], [ %80, %76 ]
  %83 = phi i64 [ %71, %67 ], [ %79, %76 ]
  %84 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %82, ptr %70, align 8, !tbaa !37
  %85 = getelementptr inbounds nuw i8, ptr %84, i64 %83
  store i8 %69, ptr %85, align 1, !tbaa !10
  %86 = zext nneg i16 %44 to i32
  br label %87

87:                                               ; preds = %81, %38
  %88 = phi i32 [ %86, %81 ], [ %39, %38 ]
  %89 = shl nuw nsw i32 %88, 1
  %90 = zext nneg i32 %89 to i64
  %91 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %90
  %92 = load i8, ptr %91, align 2, !tbaa !10
  %93 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %94 = load i64, ptr %93, align 8, !tbaa !37
  %95 = add i64 %94, 1
  %96 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %97 = load i64, ptr %96, align 8, !tbaa !18
  %98 = icmp ugt i64 %95, %97
  br i1 %98, label %99, label %104

99:                                               ; preds = %87
  %100 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %101 = load ptr, ptr %100, align 8, !tbaa !13
  tail call void %101(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %95)
  %102 = load i64, ptr %93, align 8, !tbaa !37
  %103 = add i64 %102, 1
  br label %104

104:                                              ; preds = %87, %99
  %105 = phi i64 [ %95, %87 ], [ %103, %99 ]
  %106 = phi i64 [ %94, %87 ], [ %102, %99 ]
  %107 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %105, ptr %93, align 8, !tbaa !37
  %108 = getelementptr inbounds nuw i8, ptr %107, i64 %106
  store i8 %92, ptr %108, align 1, !tbaa !10
  %109 = getelementptr inbounds nuw i8, ptr %91, i64 1
  %110 = load i8, ptr %109, align 1, !tbaa !10
  %111 = load i64, ptr %93, align 8, !tbaa !37
  %112 = add i64 %111, 1
  %113 = load i64, ptr %96, align 8, !tbaa !18
  %114 = icmp ugt i64 %112, %113
  br i1 %114, label %115, label %120

115:                                              ; preds = %104
  %116 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %117 = load ptr, ptr %116, align 8, !tbaa !13
  tail call void %117(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %112)
  %118 = load i64, ptr %93, align 8, !tbaa !37
  %119 = add i64 %118, 1
  br label %120

120:                                              ; preds = %104, %115
  %121 = phi i64 [ %112, %104 ], [ %119, %115 ]
  %122 = phi i64 [ %111, %104 ], [ %118, %115 ]
  %123 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %121, ptr %93, align 8, !tbaa !37
  %124 = getelementptr inbounds nuw i8, ptr %123, i64 %122
  store i8 %110, ptr %124, align 1, !tbaa !10
  ret i64 %1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail17write_significandIcjTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4) local_unnamed_addr #5 comdat {
  %6 = icmp eq i8 %4, 0
  br i1 %6, label %7, label %59

7:                                                ; preds = %5
  %8 = or i32 %1, 1
  %9 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %8, i1 true)
  %10 = xor i32 %9, 31
  %11 = zext nneg i32 %10 to i64
  %12 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %11
  %13 = load i64, ptr %12, align 8, !tbaa !20
  %14 = zext i32 %1 to i64
  %15 = add i64 %13, %14
  %16 = lshr i64 %15, 32
  %17 = trunc nuw i64 %16 to i32
  %18 = icmp slt i32 %2, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

20:                                               ; preds = %7
  %21 = icmp sgt i32 %2, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = icmp ugt i32 %1, 99
  br i1 %23, label %25, label %38

24:                                               ; preds = %20
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

25:                                               ; preds = %22, %25
  %26 = phi i32 [ %28, %25 ], [ %2, %22 ]
  %27 = phi i32 [ %36, %25 ], [ %1, %22 ]
  %28 = add i32 %26, -2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds nuw i8, ptr %0, i64 %29
  %31 = urem i32 %27, 100
  %32 = shl nuw nsw i32 %31, 1
  %33 = zext nneg i32 %32 to i64
  %34 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %33
  %35 = load i16, ptr %34, align 2
  store i16 %35, ptr %30, align 1
  %36 = udiv i32 %27, 100
  %37 = icmp ugt i32 %27, 9999
  br i1 %37, label %25, label %38, !llvm.loop !70

38:                                               ; preds = %25, %22
  %39 = phi i32 [ %1, %22 ], [ %36, %25 ]
  %40 = phi i32 [ %2, %22 ], [ %28, %25 ]
  %41 = icmp samesign ugt i32 %39, 9
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = add i32 %40, -2
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds nuw i8, ptr %0, i64 %44
  %46 = shl nuw nsw i32 %39, 1
  %47 = zext nneg i32 %46 to i64
  %48 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %47
  %49 = load i16, ptr %48, align 2
  store i16 %49, ptr %45, align 1
  br label %56

50:                                               ; preds = %38
  %51 = trunc nuw i32 %39 to i8
  %52 = or disjoint i8 %51, 48
  %53 = add i32 %40, -1
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds nuw i8, ptr %0, i64 %54
  store i8 %52, ptr %55, align 1, !tbaa !10
  br label %56

56:                                               ; preds = %42, %50
  %57 = zext nneg i32 %2 to i64
  %58 = getelementptr inbounds nuw i8, ptr %0, i64 %57
  br label %146

59:                                               ; preds = %5
  %60 = sext i32 %2 to i64
  %61 = getelementptr i8, ptr %0, i64 %60
  %62 = getelementptr i8, ptr %61, i64 1
  %63 = sub nsw i32 %2, %3
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = lshr i32 %63, 1
  br label %72

67:                                               ; preds = %72, %59
  %68 = phi i32 [ %1, %59 ], [ %82, %72 ]
  %69 = phi ptr [ %62, %59 ], [ %76, %72 ]
  %70 = and i32 %63, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %91, label %85

72:                                               ; preds = %65, %72
  %73 = phi i32 [ %83, %72 ], [ %66, %65 ]
  %74 = phi ptr [ %76, %72 ], [ %62, %65 ]
  %75 = phi i32 [ %82, %72 ], [ %1, %65 ]
  %76 = getelementptr inbounds i8, ptr %74, i64 -2
  %77 = urem i32 %75, 100
  %78 = shl nuw nsw i32 %77, 1
  %79 = zext nneg i32 %78 to i64
  %80 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %79
  %81 = load i16, ptr %80, align 2
  store i16 %81, ptr %76, align 1
  %82 = udiv i32 %75, 100
  %83 = add nsw i32 %73, -1
  %84 = icmp samesign ugt i32 %73, 1
  br i1 %84, label %72, label %67, !llvm.loop !231

85:                                               ; preds = %67
  %86 = urem i32 %68, 10
  %87 = trunc nuw nsw i32 %86 to i8
  %88 = or disjoint i8 %87, 48
  %89 = getelementptr inbounds i8, ptr %69, i64 -1
  store i8 %88, ptr %89, align 1, !tbaa !10
  %90 = udiv i32 %68, 10
  br label %91

91:                                               ; preds = %85, %67
  %92 = phi i32 [ %90, %85 ], [ %68, %67 ]
  %93 = phi ptr [ %89, %85 ], [ %69, %67 ]
  %94 = getelementptr inbounds i8, ptr %93, i64 -1
  store i8 %4, ptr %94, align 1, !tbaa !10
  %95 = sext i32 %3 to i64
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds i8, ptr %94, i64 %96
  %98 = or i32 %92, 1
  %99 = tail call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %98, i1 true)
  %100 = xor i32 %99, 31
  %101 = zext nneg i32 %100 to i64
  %102 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %101
  %103 = load i64, ptr %102, align 8, !tbaa !20
  %104 = zext i32 %92 to i64
  %105 = add i64 %103, %104
  %106 = lshr i64 %105, 32
  %107 = trunc nuw i64 %106 to i32
  %108 = icmp slt i32 %3, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %91
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

110:                                              ; preds = %91
  %111 = icmp sgt i32 %3, -1
  br i1 %111, label %112, label %114

112:                                              ; preds = %110
  %113 = icmp ugt i32 %92, 99
  br i1 %113, label %115, label %128

114:                                              ; preds = %110
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

115:                                              ; preds = %112, %115
  %116 = phi i32 [ %118, %115 ], [ %3, %112 ]
  %117 = phi i32 [ %126, %115 ], [ %92, %112 ]
  %118 = add i32 %116, -2
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds nuw i8, ptr %97, i64 %119
  %121 = urem i32 %117, 100
  %122 = shl nuw nsw i32 %121, 1
  %123 = zext nneg i32 %122 to i64
  %124 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %123
  %125 = load i16, ptr %124, align 2
  store i16 %125, ptr %120, align 1
  %126 = udiv i32 %117, 100
  %127 = icmp ugt i32 %117, 9999
  br i1 %127, label %115, label %128, !llvm.loop !70

128:                                              ; preds = %115, %112
  %129 = phi i32 [ %92, %112 ], [ %126, %115 ]
  %130 = phi i32 [ %3, %112 ], [ %118, %115 ]
  %131 = icmp samesign ugt i32 %129, 9
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = add i32 %130, -2
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds nuw i8, ptr %97, i64 %134
  %136 = shl nuw nsw i32 %129, 1
  %137 = zext nneg i32 %136 to i64
  %138 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %137
  %139 = load i16, ptr %138, align 2
  store i16 %139, ptr %135, align 1
  br label %146

140:                                              ; preds = %128
  %141 = trunc nuw i32 %129 to i8
  %142 = or disjoint i8 %141, 48
  %143 = add i32 %130, -1
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds nuw i8, ptr %97, i64 %144
  store i8 %142, ptr %145, align 1, !tbaa !10
  br label %146

146:                                              ; preds = %140, %132, %56
  %147 = phi ptr [ %58, %56 ], [ %62, %132 ], [ %62, %140 ]
  ret ptr %147
}

declare dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #3

declare dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEyc(ptr noundef nonnull align 8 dereferenceable(24), i64 noundef, i8 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail18thousands_sep_implIcEENS1_20thousands_sep_resultIT_EENS1_10locale_refE(ptr dead_on_unwind noalias writable sret(%"struct.fmt::v11::detail::thousands_sep_result") align 8 %0, i64 %1) local_unnamed_addr #5 comdat personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #30
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %1 to ptr
  call void @_ZNSt3__16localeC1ERKS0_(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  br label %9

8:                                                ; preds = %2
  call void @_ZNSt3__16localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #30
  br label %9

9:                                                ; preds = %6, %8
  %10 = invoke noundef nonnull align 8 dereferenceable(40) ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef nonnull align 4 dereferenceable(8) @_ZNSt3__18numpunctIcE2idE)
          to label %11 unwind label %32

11:                                               ; preds = %9
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #30
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #30
  %12 = load ptr, ptr %10, align 8, !tbaa !82, !noalias !232
  %13 = getelementptr inbounds nuw i8, ptr %12, i64 40
  %14 = load ptr, ptr %13, align 8, !noalias !232
  call void %14(ptr dead_on_unwind nonnull writable sret(%"class.std::__1::basic_string") align 8 %4, ptr noundef nonnull align 8 dereferenceable(40) %10)
  %15 = load i8, ptr %4, align 8
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %19 = load i64, ptr %18, align 8
  %20 = lshr i8 %15, 1
  %21 = zext nneg i8 %20 to i64
  %22 = select i1 %17, i64 %21, i64 %19
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %11
  %25 = load ptr, ptr %10, align 8, !tbaa !82
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 32
  %27 = load ptr, ptr %26, align 8
  %28 = invoke noundef i8 %27(ptr noundef nonnull align 8 dereferenceable(40) %10)
          to label %29 unwind label %34

29:                                               ; preds = %24, %11
  %30 = phi i8 [ 0, %11 ], [ %28, %24 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false), !tbaa.struct !90
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 24
  store i8 %30, ptr %31, align 8, !tbaa !229
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #30
  ret void

32:                                               ; preds = %9
  %33 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %3) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #30
  br label %43

34:                                               ; preds = %24
  %35 = landingpad { ptr, i32 }
          cleanup
  %36 = load i8, ptr %4, align 8
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %41 = load ptr, ptr %40, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %41) #34
  br label %42

42:                                               ; preds = %34, %39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #30
  br label %43

43:                                               ; preds = %42, %32
  %44 = phi { ptr, i32 } [ %35, %42 ], [ %33, %32 ]
  resume { ptr, i32 } %44
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(72) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_(ptr noundef nonnull align 8 dereferenceable(72) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_(ptr noundef nonnull align 8 dereferenceable(72) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load ptr, ptr %0, align 8, !tbaa !235
  %5 = load i32, ptr %4, align 4, !tbaa !201
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %29 = load ptr, ptr %28, align 8, !tbaa !237
  %30 = load i32, ptr %29, align 4, !tbaa !11
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %32 = load ptr, ptr %31, align 8, !tbaa !238
  %33 = load i32, ptr %32, align 4, !tbaa !11
  %34 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %35 = load ptr, ptr %34, align 8, !tbaa !239
  %36 = getelementptr inbounds nuw i8, ptr %35, i64 4
  %37 = load i32, ptr %36, align 4, !tbaa !204
  %38 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %39 = load ptr, ptr %38, align 8, !tbaa !240
  %40 = tail call i64 @_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEjNS1_14digit_groupingIcEEEET0_S7_T1_iiRKT2_(i64 %1, i32 noundef %30, i32 noundef %33, i32 noundef %37, ptr noundef nonnull align 8 dereferenceable(48) %39)
  %41 = inttoptr i64 %40 to ptr
  %42 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %43 = load ptr, ptr %42, align 8, !tbaa !241
  %44 = load i32, ptr %43, align 4, !tbaa !53
  %45 = and i32 %44, 8192
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %93, label %47

47:                                               ; preds = %27
  %48 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %49 = load ptr, ptr %48, align 8, !tbaa !242
  %50 = load i8, ptr %49, align 1, !tbaa !10
  %51 = getelementptr inbounds nuw i8, ptr %41, i64 8
  %52 = load i64, ptr %51, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = getelementptr inbounds nuw i8, ptr %41, i64 16
  %55 = load i64, ptr %54, align 8, !tbaa !18
  %56 = icmp ugt i64 %53, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds nuw i8, ptr %41, i64 24
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %53)
  %60 = load i64, ptr %51, align 8, !tbaa !37
  %61 = add i64 %60, 1
  br label %62

62:                                               ; preds = %47, %57
  %63 = phi i64 [ %53, %47 ], [ %61, %57 ]
  %64 = phi i64 [ %52, %47 ], [ %60, %57 ]
  %65 = load ptr, ptr %41, align 8, !tbaa !17
  store i64 %63, ptr %51, align 8, !tbaa !37
  %66 = getelementptr inbounds nuw i8, ptr %65, i64 %64
  store i8 %50, ptr %66, align 1, !tbaa !10
  %67 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %68 = load ptr, ptr %67, align 8, !tbaa !243
  %69 = load i32, ptr %68, align 4, !tbaa !11
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %93

71:                                               ; preds = %62
  %72 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %73 = load ptr, ptr %72, align 8, !tbaa !244
  %74 = getelementptr inbounds nuw i8, ptr %41, i64 24
  br label %75

75:                                               ; preds = %86, %71
  %76 = phi i32 [ 0, %71 ], [ %91, %86 ]
  %77 = load i8, ptr %73, align 1, !tbaa !10
  %78 = load i64, ptr %51, align 8, !tbaa !37
  %79 = add i64 %78, 1
  %80 = load i64, ptr %54, align 8, !tbaa !18
  %81 = icmp ugt i64 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  %83 = load ptr, ptr %74, align 8, !tbaa !13
  tail call void %83(ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %79)
  %84 = load i64, ptr %51, align 8, !tbaa !37
  %85 = add i64 %84, 1
  br label %86

86:                                               ; preds = %82, %75
  %87 = phi i64 [ %79, %75 ], [ %85, %82 ]
  %88 = phi i64 [ %78, %75 ], [ %84, %82 ]
  %89 = load ptr, ptr %41, align 8, !tbaa !17
  store i64 %87, ptr %51, align 8, !tbaa !37
  %90 = getelementptr inbounds nuw i8, ptr %89, i64 %88
  store i8 %77, ptr %90, align 1, !tbaa !10
  %91 = add nuw nsw i32 %76, 1
  %92 = icmp eq i32 %91, %69
  br i1 %92, label %93, label %75, !llvm.loop !225

93:                                               ; preds = %86, %62, %27
  ret i64 %40
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEjNS1_14digit_groupingIcEEEET0_S7_T1_iiRKT2_(i64 %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(48) %4) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %7 = alloca %"class.fmt::v11::basic_string_view", align 8
  %8 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %9 = load i8, ptr %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %13 = load i64, ptr %12, align 8
  %14 = lshr i8 %9, 1
  %15 = zext nneg i8 %14 to i64
  %16 = select i1 %11, i64 %15, i64 %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %43

18:                                               ; preds = %5
  %19 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i32 noundef %1, i32 noundef %2)
  %20 = inttoptr i64 %19 to ptr
  %21 = icmp sgt i32 %3, 0
  br i1 %21, label %22, label %90

22:                                               ; preds = %18
  %23 = getelementptr inbounds nuw i8, ptr %20, i64 8
  %24 = getelementptr inbounds nuw i8, ptr %20, i64 16
  %25 = getelementptr inbounds nuw i8, ptr %20, i64 24
  br label %26

26:                                               ; preds = %36, %22
  %27 = phi i32 [ 0, %22 ], [ %41, %36 ]
  %28 = load i64, ptr %23, align 8, !tbaa !37
  %29 = add i64 %28, 1
  %30 = load i64, ptr %24, align 8, !tbaa !18
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load ptr, ptr %25, align 8, !tbaa !13
  tail call void %33(ptr noundef nonnull align 8 dereferenceable(32) %20, i64 noundef %29)
  %34 = load i64, ptr %23, align 8, !tbaa !37
  %35 = add i64 %34, 1
  br label %36

36:                                               ; preds = %32, %26
  %37 = phi i64 [ %29, %26 ], [ %35, %32 ]
  %38 = phi i64 [ %28, %26 ], [ %34, %32 ]
  %39 = load ptr, ptr %20, align 8, !tbaa !17
  store i64 %37, ptr %23, align 8, !tbaa !37
  %40 = getelementptr inbounds nuw i8, ptr %39, i64 %38
  store i8 48, ptr %40, align 1, !tbaa !10
  %41 = add nuw nsw i32 %27, 1
  %42 = icmp eq i32 %41, %3
  br i1 %42, label %90, label %26, !llvm.loop !225

43:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %6) #30
  %44 = getelementptr inbounds nuw i8, ptr %6, i64 16
  %45 = getelementptr inbounds nuw i8, ptr %6, i64 24
  %46 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 0, ptr %46, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %45, align 8, !tbaa !13
  %47 = getelementptr inbounds nuw i8, ptr %6, i64 32
  store ptr %47, ptr %6, align 8, !tbaa !17
  store i64 500, ptr %44, align 8, !tbaa !18
  %48 = ptrtoint ptr %6 to i64
  %49 = invoke i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %48, i32 noundef %1, i32 noundef %2)
          to label %50 unwind label %80

50:                                               ; preds = %43
  %51 = icmp sgt i32 %3, 0
  br i1 %51, label %52, label %70

52:                                               ; preds = %50, %63
  %53 = phi i32 [ %68, %63 ], [ 0, %50 ]
  %54 = load i64, ptr %46, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = load i64, ptr %44, align 8, !tbaa !18
  %57 = icmp ugt i64 %55, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = load ptr, ptr %45, align 8, !tbaa !13
  invoke void %59(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %55)
          to label %60 unwind label %82

60:                                               ; preds = %58
  %61 = load i64, ptr %46, align 8, !tbaa !37
  %62 = add i64 %61, 1
  br label %63

63:                                               ; preds = %60, %52
  %64 = phi i64 [ %55, %52 ], [ %62, %60 ]
  %65 = phi i64 [ %54, %52 ], [ %61, %60 ]
  %66 = load ptr, ptr %6, align 8, !tbaa !17
  store i64 %64, ptr %46, align 8, !tbaa !37
  %67 = getelementptr inbounds nuw i8, ptr %66, i64 %65
  store i8 48, ptr %67, align 1, !tbaa !10
  %68 = add nuw nsw i32 %53, 1
  %69 = icmp eq i32 %68, %3
  br i1 %69, label %70, label %52, !llvm.loop !225

70:                                               ; preds = %63, %50
  %71 = load ptr, ptr %6, align 8, !tbaa !17
  %72 = load i64, ptr %46, align 8, !tbaa !37
  store ptr %71, ptr %7, align 8, !tbaa !38
  %73 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 %72, ptr %73, align 8, !tbaa !39
  %74 = invoke i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %4, i64 %0, ptr noundef nonnull %7)
          to label %75 unwind label %80

75:                                               ; preds = %70
  %76 = load ptr, ptr %6, align 8, !tbaa !17
  %77 = icmp eq ptr %76, %47
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  call void @free(ptr noundef %76)
  br label %79

79:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %6) #30
  br label %90

80:                                               ; preds = %43, %70
  %81 = landingpad { ptr, i32 }
          cleanup
  br label %84

82:                                               ; preds = %58
  %83 = landingpad { ptr, i32 }
          cleanup
  br label %84

84:                                               ; preds = %82, %80
  %85 = phi { ptr, i32 } [ %81, %80 ], [ %83, %82 ]
  %86 = load ptr, ptr %6, align 8, !tbaa !17
  %87 = icmp eq ptr %86, %47
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  call void @free(ptr noundef %86)
  br label %89

89:                                               ; preds = %84, %88
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %6) #30
  resume { ptr, i32 } %85

90:                                               ; preds = %36, %18, %79
  %91 = phi i64 [ %74, %79 ], [ %19, %18 ], [ %19, %36 ]
  ret i64 %91
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(64) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load ptr, ptr %4, align 8, !tbaa !245
  %47 = load i32, ptr %46, align 4, !tbaa !201
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %69, label %49

49:                                               ; preds = %43
  %50 = shl nsw i32 %47, 3
  %51 = lshr i32 539700480, %50
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %54 = load i64, ptr %53, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %57 = load i64, ptr %56, align 8, !tbaa !18
  %58 = icmp ugt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds nuw i8, ptr %44, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %55)
  %62 = load i64, ptr %53, align 8, !tbaa !37
  %63 = add i64 %62, 1
  br label %64

64:                                               ; preds = %59, %49
  %65 = phi i64 [ %55, %49 ], [ %63, %59 ]
  %66 = phi i64 [ %54, %49 ], [ %62, %59 ]
  %67 = load ptr, ptr %44, align 8, !tbaa !17
  store i64 %65, ptr %53, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %66
  store i8 %52, ptr %68, align 1, !tbaa !10
  br label %69

69:                                               ; preds = %64, %43
  %70 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %71 = load ptr, ptr %70, align 8, !tbaa !247
  %72 = load i32, ptr %71, align 4, !tbaa !11
  %73 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %74 = load ptr, ptr %73, align 8, !tbaa !248
  %75 = load i32, ptr %74, align 4, !tbaa !11
  %76 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %77 = load ptr, ptr %76, align 8, !tbaa !249
  %78 = load i32, ptr %77, align 4, !tbaa !11
  %79 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %80 = load ptr, ptr %79, align 8, !tbaa !250
  %81 = load i8, ptr %80, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %4, i64 40
  %83 = load ptr, ptr %82, align 8, !tbaa !251
  %84 = tail call i64 @_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcjNS1_14digit_groupingIcEEEET_S7_T1_iiT0_RKT2_(i64 %45, i32 noundef %72, i32 noundef %75, i32 noundef %78, i8 noundef %81, ptr noundef nonnull align 8 dereferenceable(48) %83)
  %85 = getelementptr inbounds nuw i8, ptr %4, i64 48
  %86 = load ptr, ptr %85, align 8, !tbaa !252
  %87 = load i32, ptr %86, align 4, !tbaa !11
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %114

89:                                               ; preds = %69
  %90 = getelementptr inbounds nuw i8, ptr %4, i64 56
  %91 = load ptr, ptr %90, align 8, !tbaa !253
  %92 = inttoptr i64 %84 to ptr
  %93 = getelementptr inbounds nuw i8, ptr %92, i64 8
  %94 = getelementptr inbounds nuw i8, ptr %92, i64 16
  %95 = getelementptr inbounds nuw i8, ptr %92, i64 24
  br label %96

96:                                               ; preds = %107, %89
  %97 = phi i32 [ 0, %89 ], [ %112, %107 ]
  %98 = load i8, ptr %91, align 1, !tbaa !10
  %99 = load i64, ptr %93, align 8, !tbaa !37
  %100 = add i64 %99, 1
  %101 = load i64, ptr %94, align 8, !tbaa !18
  %102 = icmp ugt i64 %100, %101
  br i1 %102, label %103, label %107

103:                                              ; preds = %96
  %104 = load ptr, ptr %95, align 8, !tbaa !13
  tail call void %104(ptr noundef nonnull align 8 dereferenceable(32) %92, i64 noundef %100)
  %105 = load i64, ptr %93, align 8, !tbaa !37
  %106 = add i64 %105, 1
  br label %107

107:                                              ; preds = %103, %96
  %108 = phi i64 [ %100, %96 ], [ %106, %103 ]
  %109 = phi i64 [ %99, %96 ], [ %105, %103 ]
  %110 = load ptr, ptr %92, align 8, !tbaa !17
  store i64 %108, ptr %93, align 8, !tbaa !37
  %111 = getelementptr inbounds nuw i8, ptr %110, i64 %109
  store i8 %98, ptr %111, align 1, !tbaa !10
  %112 = add nuw nsw i32 %97, 1
  %113 = icmp eq i32 %112, %87
  br i1 %113, label %114, label %96, !llvm.loop !225

114:                                              ; preds = %107, %69
  %115 = icmp eq i64 %12, %21
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %84, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ %117, %116 ], [ %84, %114 ]
  ret i64 %119
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcjNS1_14digit_groupingIcEEEET_S7_T1_iiT0_RKT2_(i64 %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4, ptr noundef nonnull align 8 dereferenceable(48) %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca [11 x i8], align 1
  %8 = alloca [11 x i8], align 1
  %9 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %10 = alloca %"class.fmt::v11::basic_string_view", align 8
  %11 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %12 = load i8, ptr %11, align 8
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds nuw i8, ptr %5, i64 32
  %16 = load i64, ptr %15, align 8
  %17 = lshr i8 %12, 1
  %18 = zext nneg i8 %17 to i64
  %19 = select i1 %14, i64 %18, i64 %16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 11, ptr nonnull %8) #30
  %22 = call noundef ptr @_ZN3fmt3v116detail17write_significandIcjTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef nonnull %8, i32 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4)
  %23 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %8, ptr noundef %22, i64 %0)
  call void @llvm.lifetime.end.p0(i64 11, ptr nonnull %8) #30
  br label %59

24:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %9) #30
  %25 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %26 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %27 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 0, ptr %27, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %26, align 8, !tbaa !13
  %28 = getelementptr inbounds nuw i8, ptr %9, i64 32
  store ptr %28, ptr %9, align 8, !tbaa !17
  store i64 500, ptr %25, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 11, ptr nonnull %7) #30
  %29 = invoke noundef ptr @_ZN3fmt3v116detail17write_significandIcjTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef nonnull %7, i32 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4)
          to label %30 unwind label %53

30:                                               ; preds = %24
  %31 = ptrtoint ptr %9 to i64
  %32 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %7, ptr noundef %29, i64 %31)
          to label %33 unwind label %53

33:                                               ; preds = %30
  call void @llvm.lifetime.end.p0(i64 11, ptr nonnull %7) #30
  %34 = icmp sgt i32 %3, -1
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %36 unwind label %53

36:                                               ; preds = %35
  unreachable

37:                                               ; preds = %33
  %38 = load ptr, ptr %9, align 8, !tbaa !17
  %39 = zext nneg i32 %3 to i64
  store ptr %38, ptr %10, align 8, !tbaa !38
  %40 = getelementptr inbounds nuw i8, ptr %10, i64 8
  store i64 %39, ptr %40, align 8, !tbaa !39
  %41 = invoke i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %5, i64 %0, ptr noundef nonnull %10)
          to label %42 unwind label %53

42:                                               ; preds = %37
  %43 = load ptr, ptr %9, align 8, !tbaa !17
  %44 = getelementptr inbounds nuw i8, ptr %43, i64 %39
  %45 = load i64, ptr %27, align 8, !tbaa !37
  %46 = getelementptr inbounds nuw i8, ptr %43, i64 %45
  %47 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef %44, ptr noundef %46, i64 %0)
          to label %48 unwind label %53

48:                                               ; preds = %42
  %49 = load ptr, ptr %9, align 8, !tbaa !17
  %50 = icmp eq ptr %49, %28
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @free(ptr noundef %49)
  br label %52

52:                                               ; preds = %48, %51
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  br label %59

53:                                               ; preds = %35, %30, %24, %42, %37
  %54 = landingpad { ptr, i32 }
          cleanup
  %55 = load ptr, ptr %9, align 8, !tbaa !17
  %56 = icmp eq ptr %55, %28
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @free(ptr noundef %55)
  br label %58

58:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  resume { ptr, i32 } %54

59:                                               ; preds = %52, %21
  %60 = phi i64 [ %47, %52 ], [ %23, %21 ]
  ret i64 %60
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(56) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_(ptr noundef nonnull align 8 dereferenceable(56) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_(ptr noundef nonnull align 8 dereferenceable(56) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load ptr, ptr %0, align 8, !tbaa !254
  %5 = load i32, ptr %4, align 4, !tbaa !201
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, 1
  %31 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %32 = load i64, ptr %31, align 8, !tbaa !18
  %33 = icmp ugt i64 %30, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %27
  %35 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  tail call void %36(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %30)
  %37 = load i64, ptr %28, align 8, !tbaa !37
  %38 = add i64 %37, 1
  br label %39

39:                                               ; preds = %27, %34
  %40 = phi i64 [ %30, %27 ], [ %38, %34 ]
  %41 = phi i64 [ %29, %27 ], [ %37, %34 ]
  %42 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %40, ptr %28, align 8, !tbaa !37
  %43 = getelementptr inbounds nuw i8, ptr %42, i64 %41
  store i8 48, ptr %43, align 1, !tbaa !10
  %44 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %45 = load ptr, ptr %44, align 8, !tbaa !256
  %46 = load i8, ptr %45, align 1, !tbaa !222, !range !51, !noundef !52
  %47 = trunc nuw i8 %46 to i1
  br i1 %47, label %48, label %100

48:                                               ; preds = %39
  %49 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %50 = load ptr, ptr %49, align 8, !tbaa !257
  %51 = load i8, ptr %50, align 1, !tbaa !10
  %52 = load i64, ptr %28, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = load i64, ptr %31, align 8, !tbaa !18
  %55 = icmp ugt i64 %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %48
  %57 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %58 = load ptr, ptr %57, align 8, !tbaa !13
  tail call void %58(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %53)
  %59 = load i64, ptr %28, align 8, !tbaa !37
  %60 = add i64 %59, 1
  br label %61

61:                                               ; preds = %48, %56
  %62 = phi i64 [ %53, %48 ], [ %60, %56 ]
  %63 = phi i64 [ %52, %48 ], [ %59, %56 ]
  %64 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %62, ptr %28, align 8, !tbaa !37
  %65 = getelementptr inbounds nuw i8, ptr %64, i64 %63
  store i8 %51, ptr %65, align 1, !tbaa !10
  %66 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %67 = load ptr, ptr %66, align 8, !tbaa !258
  %68 = load i32, ptr %67, align 4, !tbaa !11
  %69 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %70 = load ptr, ptr %69, align 8, !tbaa !259
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %72, label %92

72:                                               ; preds = %61
  %73 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %74

74:                                               ; preds = %85, %72
  %75 = phi i32 [ 0, %72 ], [ %90, %85 ]
  %76 = load i8, ptr %70, align 1, !tbaa !10
  %77 = load i64, ptr %28, align 8, !tbaa !37
  %78 = add i64 %77, 1
  %79 = load i64, ptr %31, align 8, !tbaa !18
  %80 = icmp ugt i64 %78, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = load ptr, ptr %73, align 8, !tbaa !13
  tail call void %82(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %78)
  %83 = load i64, ptr %28, align 8, !tbaa !37
  %84 = add i64 %83, 1
  br label %85

85:                                               ; preds = %81, %74
  %86 = phi i64 [ %78, %74 ], [ %84, %81 ]
  %87 = phi i64 [ %77, %74 ], [ %83, %81 ]
  %88 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %86, ptr %28, align 8, !tbaa !37
  %89 = getelementptr inbounds nuw i8, ptr %88, i64 %87
  store i8 %76, ptr %89, align 1, !tbaa !10
  %90 = add nuw nsw i32 %75, 1
  %91 = icmp eq i32 %90, %68
  br i1 %91, label %92, label %74, !llvm.loop !225

92:                                               ; preds = %85, %61
  %93 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %94 = load ptr, ptr %93, align 8, !tbaa !260
  %95 = load i32, ptr %94, align 4, !tbaa !11
  %96 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %97 = load ptr, ptr %96, align 8, !tbaa !261
  %98 = load i32, ptr %97, align 4, !tbaa !11
  %99 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %1, i32 noundef %95, i32 noundef %98)
  br label %100

100:                                              ; preds = %39, %92
  %101 = phi i64 [ %99, %92 ], [ %1, %39 ]
  ret i64 %101
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_(i64 %0, double noundef %1) local_unnamed_addr #0 comdat {
  %3 = alloca %class.anon.30, align 8
  %4 = alloca %"struct.fmt::v11::format_specs", align 4
  %5 = alloca %"struct.fmt::v11::format_specs", align 4
  %6 = alloca %"struct.fmt::v11::detail::dragonbox::decimal_fp.37", align 8
  %7 = bitcast double %1 to i64
  %8 = lshr i64 %7, 63
  %9 = trunc nuw nsw i64 %8 to i32
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %4, ptr noundef nonnull align 4 dereferenceable(16) @__const._ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_.specs, i64 16, i1 false)
  %10 = and i64 %7, 9218868437227405312
  %11 = icmp eq i64 %10, 9218868437227405312
  br i1 %11, label %12, label %32

12:                                               ; preds = %2
  %13 = fcmp uno double %1, 0.000000e+00
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %5, ptr noundef nonnull align 4 dereferenceable(16) @__const._ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEdTnNSt3__19enable_ifIXsr13is_fast_floatIT1_EE5valueEiE4typeELi0EEET0_SA_S7_.specs, i64 16, i1 false)
  %14 = load i32, ptr %5, align 4, !tbaa !53
  %15 = and i32 %14, 229376
  %16 = icmp eq i32 %15, 32768
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds nuw i8, ptr %5, i64 4
  %19 = load i8, ptr %18, align 4, !tbaa !10
  %20 = icmp eq i8 %19, 48
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i8 32, ptr %18, align 4, !tbaa !10
  br label %22

22:                                               ; preds = %12, %17, %21
  %23 = and i32 %14, 4096
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %24, ptr @.str.28, ptr @.str.27
  %26 = select i1 %24, ptr @.str.30, ptr @.str.29
  %27 = select i1 %13, ptr %25, ptr %26
  %28 = icmp sgt i64 %7, -1
  %29 = select i1 %28, i64 3, i64 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store i32 %9, ptr %3, align 8, !tbaa !193
  %30 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store ptr %27, ptr %30, align 8, !tbaa !196
  %31 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %5, i64 noundef %29, i64 noundef %29, ptr noundef nonnull align 8 dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %34

32:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  call void @_ZN3fmt3v116detail9dragonbox10to_decimalIdEENS2_10decimal_fpIT_EES5_(ptr dead_on_unwind nonnull writable sret(%"struct.fmt::v11::detail::dragonbox::decimal_fp.37") align 8 %6, double noundef %1) #30
  %33 = call i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 4 dereferenceable(16) %4, i32 noundef %9, i32 noundef 16, i64 0)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %34

34:                                               ; preds = %32, %22
  %35 = phi i64 [ %31, %22 ], [ %33, %32 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  ret i64 %35
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail9dragonbox10to_decimalIdEENS2_10decimal_fpIT_EES5_(ptr dead_on_unwind noalias writable sret(%"struct.fmt::v11::detail::dragonbox::decimal_fp.37") align 8 %0, double noundef %1) local_unnamed_addr #26 comdat personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::uint128_fallback", align 8
  %4 = bitcast double %1 to i64
  %5 = and i64 %4, 4503599627370495
  %6 = lshr i64 %4, 52
  %7 = trunc nuw nsw i64 %6 to i32
  %8 = and i32 %7, 2047
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = add nsw i32 %8, -1075
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  tail call void @_ZN3fmt3v116detail9dragonbox21shorter_interval_caseIdEENS2_10decimal_fpIT_EEi(ptr dead_on_unwind writable sret(%"struct.fmt::v11::detail::dragonbox::decimal_fp.37") align 8 %0, i32 noundef %11) #30
  br label %173

14:                                               ; preds = %2
  %15 = icmp eq i64 %5, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  store i64 0, ptr %0, align 8, !tbaa !262
  %17 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 0, ptr %17, align 8, !tbaa !264
  br label %173

18:                                               ; preds = %10
  %19 = or disjoint i64 %5, 4503599627370496
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i64 [ %19, %18 ], [ %5, %14 ]
  %22 = phi i32 [ %11, %18 ], [ -1074, %14 ]
  %23 = mul nsw i32 %22, 315653
  %24 = ashr i32 %23, 20
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  %25 = sub nsw i32 2, %24
  call void @_ZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEi(ptr dead_on_unwind nonnull writable sret(%"class.fmt::v11::detail::uint128_fallback") align 8 %3, i32 noundef %25) #30
  %26 = mul nsw i32 %25, 1741647
  %27 = ashr i32 %26, 19
  %28 = add nsw i32 %27, %22
  %29 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %30 = load i64, ptr %29, align 8, !tbaa !265
  %31 = sub nsw i32 63, %28
  %32 = zext nneg i32 %31 to i64
  %33 = lshr i64 %30, %32
  %34 = trunc i64 %33 to i32
  %35 = shl nuw nsw i64 %21, 1
  %36 = or disjoint i64 %35, 1
  %37 = zext nneg i32 %28 to i64
  %38 = shl i64 %36, %37
  %39 = load i64, ptr %3, align 8, !tbaa !20, !noalias !267
  %40 = zext i64 %38 to i128
  %41 = zext i64 %30 to i128
  %42 = mul nuw i128 %40, %41
  %43 = lshr i128 %42, 64
  %44 = trunc nuw i128 %43 to i64
  %45 = trunc i128 %42 to i64
  %46 = zext i64 %39 to i128
  %47 = mul nuw i128 %40, %46
  %48 = lshr i128 %47, 64
  %49 = trunc nuw i128 %48 to i64
  %50 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %45, i64 %49)
  %51 = extractvalue { i64, i1 } %50, 1
  %52 = extractvalue { i64, i1 } %50, 0
  %53 = zext i1 %51 to i64
  %54 = add nuw i64 %53, %44
  %55 = icmp ne i64 %52, 0
  %56 = zext i64 %54 to i128
  %57 = mul nuw nsw i128 %56, 2361183241434822607
  %58 = lshr i128 %57, 71
  %59 = trunc nuw nsw i128 %58 to i64
  store i64 %59, ptr %0, align 8, !tbaa !262
  %60 = mul i64 %59, 4294966296
  %61 = add i64 %60, %54
  %62 = trunc i64 %61 to i32
  %63 = icmp ugt i32 %34, %62
  br i1 %63, label %64, label %72

64:                                               ; preds = %20
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %66, label %108

66:                                               ; preds = %64
  %67 = and i64 %21, 1
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %55, i1 true, i1 %68
  br i1 %69, label %108, label %70

70:                                               ; preds = %66
  %71 = add nsw i64 %59, -1
  br label %114

72:                                               ; preds = %20
  %73 = icmp ult i32 %34, %62
  br i1 %73, label %114, label %74

74:                                               ; preds = %72
  %75 = add nsw i64 %35, -1
  %76 = icmp sgt i32 %28, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = icmp samesign ult i32 %28, 64
  br i1 %78, label %85, label %79

79:                                               ; preds = %77, %74
  %80 = phi i32 [ 1109, %74 ], [ 1110, %77 ]
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef %80, ptr noundef nonnull @.str.14) #31
          to label %81 unwind label %82

81:                                               ; preds = %79
  unreachable

82:                                               ; preds = %79
  %83 = landingpad { ptr, i32 }
          catch ptr null
  %84 = extractvalue { ptr, i32 } %83, 0
  call void @__clang_call_terminate(ptr %84) #33
  unreachable

85:                                               ; preds = %77
  %86 = mul i64 %30, %75
  %87 = zext nneg i64 %75 to i128
  %88 = mul nuw nsw i128 %46, %87
  %89 = lshr i128 %88, 64
  %90 = trunc nuw nsw i128 %89 to i64
  %91 = trunc i128 %88 to i64
  %92 = add i64 %86, %90
  %93 = sub nuw nsw i32 64, %28
  %94 = zext nneg i32 %93 to i64
  %95 = lshr i64 %92, %94
  %96 = trunc i64 %95 to i32
  %97 = and i32 %96, 1
  %98 = shl i64 %92, %37
  %99 = lshr i64 %91, %94
  %100 = or i64 %98, %99
  %101 = icmp eq i64 %100, 0
  %102 = trunc i64 %21 to i32
  %103 = and i32 %102, 1
  %104 = xor i32 %103, 1
  %105 = select i1 %101, i32 %104, i32 0
  %106 = or i32 %105, %97
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %85, %64, %66
  %109 = add nsw i32 %24, 1
  %110 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 %109, ptr %110, align 8, !tbaa !264
  %111 = call noundef i32 @_ZN3fmt3v116detail9dragonbox21remove_trailing_zerosERy(ptr noundef nonnull align 8 dereferenceable(8) %0) #30
  %112 = load i32, ptr %110, align 8, !tbaa !264
  %113 = add nsw i32 %112, %111
  store i32 %113, ptr %110, align 8, !tbaa !264
  br label %172

114:                                              ; preds = %85, %72, %70
  %115 = phi i64 [ %71, %70 ], [ %59, %72 ], [ %59, %85 ]
  %116 = phi i32 [ 1000, %70 ], [ %62, %72 ], [ %62, %85 ]
  %117 = mul nsw i64 %115, 10
  store i64 %117, ptr %0, align 8, !tbaa !262
  %118 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 %24, ptr %118, align 8, !tbaa !264
  %119 = lshr i32 %34, 1
  %120 = sub i32 %116, %119
  %121 = add i32 %120, 50
  %122 = icmp ult i32 %121, 1001
  br i1 %122, label %128, label %123

123:                                              ; preds = %114
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 237, ptr noundef nonnull @.str.34) #31
          to label %124 unwind label %125

124:                                              ; preds = %123
  unreachable

125:                                              ; preds = %123
  %126 = landingpad { ptr, i32 }
          catch ptr null
  %127 = extractvalue { ptr, i32 } %126, 0
  call void @__clang_call_terminate(ptr %127) #33
  unreachable

128:                                              ; preds = %114
  %129 = mul nuw nsw i32 %121, 656
  %130 = and i32 %129, 65520
  %131 = icmp samesign ult i32 %130, 656
  %132 = lshr i32 %129, 16
  %133 = zext nneg i32 %132 to i64
  %134 = add nsw i64 %117, %133
  store i64 %134, ptr %0, align 8, !tbaa !262
  br i1 %131, label %135, label %172

135:                                              ; preds = %128
  %136 = icmp sgt i32 %28, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = icmp samesign ult i32 %28, 64
  br i1 %138, label %145, label %139

139:                                              ; preds = %137, %135
  %140 = phi i32 [ 1109, %135 ], [ 1110, %137 ]
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef %140, ptr noundef nonnull @.str.14) #31
          to label %141 unwind label %142

141:                                              ; preds = %139
  unreachable

142:                                              ; preds = %139
  %143 = landingpad { ptr, i32 }
          catch ptr null
  %144 = extractvalue { ptr, i32 } %143, 0
  call void @__clang_call_terminate(ptr %144) #33
  unreachable

145:                                              ; preds = %137
  %146 = mul i64 %30, %35
  %147 = zext nneg i64 %35 to i128
  %148 = mul nuw nsw i128 %46, %147
  %149 = lshr i128 %148, 64
  %150 = trunc nuw nsw i128 %149 to i64
  %151 = add i64 %146, %150
  %152 = sub nuw nsw i32 64, %28
  %153 = zext nneg i32 %152 to i64
  %154 = lshr i64 %151, %153
  %155 = trunc i64 %154 to i32
  %156 = xor i32 %120, %155
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %145
  %160 = add nsw i64 %134, -1
  store i64 %160, ptr %0, align 8, !tbaa !262
  br label %172

161:                                              ; preds = %145
  %162 = shl i64 %151, %37
  %163 = trunc i128 %148 to i64
  %164 = lshr i64 %163, %153
  %165 = or i64 %162, %164
  %166 = icmp ne i64 %165, 0
  %167 = and i32 %129, 65536
  %168 = icmp eq i32 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %161
  %171 = add nsw i64 %134, -1
  store i64 %171, ptr %0, align 8, !tbaa !262
  br label %172

172:                                              ; preds = %128, %161, %170, %159, %108
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %173

173:                                              ; preds = %172, %16, %13
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail9dragonbox21shorter_interval_caseIdEENS2_10decimal_fpIT_EEi(ptr dead_on_unwind noalias writable sret(%"struct.fmt::v11::detail::dragonbox::decimal_fp.37") align 8 %0, i32 noundef %1) local_unnamed_addr #18 comdat personality ptr @__gxx_personality_seh0 {
  %3 = alloca %"class.fmt::v11::detail::uint128_fallback", align 8
  %4 = add i32 %1, 2985
  %5 = icmp ult i32 %4, 5922
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 211, ptr noundef nonnull @.str.32) #31
          to label %7 unwind label %8

7:                                                ; preds = %6
  unreachable

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          catch ptr null
  %10 = extractvalue { ptr, i32 } %9, 0
  tail call void @__clang_call_terminate(ptr %10) #33
  unreachable

11:                                               ; preds = %2
  %12 = mul nsw i32 %1, 631305
  %13 = add nsw i32 %12, -261663
  %14 = ashr i32 %13, 21
  %15 = sub nsw i32 0, %14
  %16 = mul nsw i32 %14, -1741647
  %17 = ashr i32 %16, 19
  %18 = add nsw i32 %17, %1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  call void @_ZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEi(ptr dead_on_unwind nonnull writable sret(%"class.fmt::v11::detail::uint128_fallback") align 8 %3, i32 noundef %15) #30
  %19 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %20 = load i64, ptr %19, align 8, !tbaa !265
  %21 = lshr i64 %20, 54
  %22 = sub i64 %20, %21
  %23 = sub nsw i32 11, %18
  %24 = zext nneg i32 %23 to i64
  %25 = lshr i64 %22, %24
  %26 = lshr i64 %20, 53
  %27 = add i64 %26, %20
  %28 = lshr i64 %27, %24
  %29 = and i32 %1, -2
  %30 = icmp ne i32 %29, 2
  %31 = zext i1 %30 to i64
  %32 = add i64 %25, %31
  %33 = udiv i64 %28, 10
  store i64 %33, ptr %0, align 8, !tbaa !262
  %34 = mul nuw i64 %33, 10
  %35 = icmp ult i64 %34, %32
  br i1 %35, label %42, label %36

36:                                               ; preds = %11
  %37 = add nsw i32 %14, 1
  %38 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 %37, ptr %38, align 8, !tbaa !264
  %39 = call noundef i32 @_ZN3fmt3v116detail9dragonbox21remove_trailing_zerosERy(ptr noundef nonnull align 8 dereferenceable(8) %0) #30
  %40 = load i32, ptr %38, align 8, !tbaa !264
  %41 = add nsw i32 %40, %39
  store i32 %41, ptr %38, align 8, !tbaa !264
  br label %56

42:                                               ; preds = %11
  %43 = sub nsw i32 10, %18
  %44 = zext nneg i32 %43 to i64
  %45 = lshr i64 %20, %44
  %46 = add i64 %45, 1
  %47 = lshr i64 %46, 1
  store i64 %47, ptr %0, align 8, !tbaa !262
  %48 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 %14, ptr %48, align 8, !tbaa !264
  %49 = icmp eq i32 %1, -77
  br i1 %49, label %50, label %52

50:                                               ; preds = %42
  %51 = and i64 %47, 9223372036854775806
  store i64 %51, ptr %0, align 8, !tbaa !262
  br label %56

52:                                               ; preds = %42
  %53 = icmp ult i64 %47, %32
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = add nuw i64 %47, 1
  store i64 %55, ptr %0, align 8, !tbaa !262
  br label %56

56:                                               ; preds = %50, %54, %52, %36
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEi(ptr dead_on_unwind noalias writable sret(%"class.fmt::v11::detail::uint128_fallback") align 8 %0, i32 noundef %1) local_unnamed_addr #26 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = add i32 %1, 292
  %4 = icmp ult i32 %3, 634
  br i1 %4, label %5, label %49

5:                                                ; preds = %2
  %6 = trunc nuw i32 %3 to i16
  %7 = udiv i16 %6, 27
  %8 = mul nuw nsw i16 %7, 27
  %9 = zext nneg i16 %8 to i32
  %10 = add nsw i32 %9, -292
  %11 = sub nsw i32 %1, %10
  %12 = zext nneg i16 %7 to i64
  %13 = getelementptr inbounds nuw [24 x %"class.fmt::v11::detail::uint128_fallback"], ptr @_ZZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEiE18pow10_significands, i64 0, i64 %12
  %14 = load i64, ptr %13, align 16, !tbaa !20
  %15 = getelementptr inbounds nuw i8, ptr %13, i64 8
  %16 = load i64, ptr %15, align 8, !tbaa !20
  %17 = icmp eq i32 %1, %10
  br i1 %17, label %63, label %18

18:                                               ; preds = %5
  %19 = mul nsw i32 %1, 1741647
  %20 = ashr i32 %19, 19
  %21 = mul nsw i32 %10, 1741647
  %22 = ashr i32 %21, 19
  %23 = add nsw i32 %11, %22
  %24 = sub nsw i32 %20, %23
  %25 = add nsw i32 %24, -1
  %26 = icmp ult i32 %25, 63
  br i1 %26, label %27, label %49

27:                                               ; preds = %18
  %28 = sext i32 %11 to i64
  %29 = getelementptr inbounds [27 x i64], ptr @_ZZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEiE14powers_of_5_64, i64 0, i64 %28
  %30 = load i64, ptr %29, align 8, !tbaa !20
  %31 = zext i64 %16 to i128
  %32 = zext i64 %30 to i128
  %33 = mul nuw i128 %32, %31
  %34 = trunc i128 %33 to i64
  %35 = zext i64 %14 to i128
  %36 = mul nuw i128 %32, %35
  %37 = lshr i128 %36, 64
  %38 = trunc nuw i128 %37 to i64
  %39 = trunc i128 %36 to i64
  %40 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %34, i64 %38)
  %41 = extractvalue { i64, i1 } %40, 0
  %42 = sub nuw nsw i32 64, %24
  %43 = zext nneg i32 %42 to i64
  %44 = shl i64 %41, %43
  %45 = zext nneg i32 %24 to i64
  %46 = lshr i64 %39, %45
  %47 = or i64 %44, %46
  %48 = icmp eq i64 %47, -1
  br i1 %48, label %49, label %53

49:                                               ; preds = %27, %18, %2
  %50 = phi i32 [ 371, %2 ], [ 1064, %18 ], [ 1079, %27 ]
  %51 = phi ptr [ @.str.33, %2 ], [ @.str.36, %18 ], [ @.str.14, %27 ]
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef %50, ptr noundef nonnull %51) #31
          to label %52 unwind label %67

52:                                               ; preds = %49
  unreachable

53:                                               ; preds = %27
  %54 = lshr i64 %41, %45
  %55 = lshr i128 %33, 64
  %56 = trunc nuw i128 %55 to i64
  %57 = extractvalue { i64, i1 } %40, 1
  %58 = zext i1 %57 to i64
  %59 = add nuw i64 %58, %56
  %60 = shl i64 %59, %43
  %61 = or i64 %60, %54
  %62 = add nuw i64 %47, 1
  br label %63

63:                                               ; preds = %5, %53
  %64 = phi i64 [ %62, %53 ], [ %14, %5 ]
  %65 = phi i64 [ %61, %53 ], [ %16, %5 ]
  store i64 %64, ptr %0, align 8, !tbaa !20
  %66 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i64 %65, ptr %66, align 8, !tbaa !20
  ret void

67:                                               ; preds = %49
  %68 = landingpad { ptr, i32 }
          catch ptr null
  %69 = extractvalue { ptr, i32 } %68, 0
  tail call void @__clang_call_terminate(ptr %69) #33
  unreachable
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZN3fmt3v116detail9dragonbox21remove_trailing_zerosERy(ptr noundef nonnull align 8 dereferenceable(8) %0) local_unnamed_addr #18 comdat personality ptr @__gxx_personality_seh0 {
  %2 = load i64, ptr %0, align 8, !tbaa !20
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 1175, ptr noundef nonnull @.str.14) #31
          to label %5 unwind label %66

5:                                                ; preds = %4
  unreachable

6:                                                ; preds = %1
  %7 = zext i64 %2 to i128
  %8 = mul nuw i128 %7, 12379400392853802749
  %9 = trunc i128 %8 to i64
  %10 = and i128 %8, 1237940020838636201189572608
  %11 = icmp eq i128 %10, 0
  %12 = icmp ult i64 %9, -6067343680855748867
  %13 = and i1 %12, %11
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = mul i64 %2, -8116567392432202711
  %16 = tail call i64 @llvm.fshl.i64(i64 %2, i64 %15, i64 62)
  %17 = icmp ugt i64 %16, 184467440737095516
  br i1 %17, label %56, label %48

18:                                               ; preds = %6
  %19 = lshr i128 %8, 90
  %20 = trunc i128 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = mul i32 %20, -1030792151
  %24 = tail call i32 @llvm.fshl.i32(i32 %23, i32 %23, i32 30)
  %25 = icmp ugt i32 %24, 42949672
  br i1 %25, label %35, label %28

26:                                               ; preds = %18
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.31, i32 noundef 1154, ptr noundef nonnull @.str.14) #31
          to label %27 unwind label %45

27:                                               ; preds = %26
  unreachable

28:                                               ; preds = %22, %28
  %29 = phi i32 [ %33, %28 ], [ %24, %22 ]
  %30 = phi i32 [ %31, %28 ], [ 8, %22 ]
  %31 = add nuw nsw i32 %30, 2
  %32 = mul i32 %29, -1030792151
  %33 = tail call i32 @llvm.fshl.i32(i32 %32, i32 %32, i32 30)
  %34 = icmp ugt i32 %33, 42949672
  br i1 %34, label %35, label %28

35:                                               ; preds = %28, %22
  %36 = phi i32 [ %20, %22 ], [ %29, %28 ]
  %37 = phi i32 [ 8, %22 ], [ %31, %28 ]
  %38 = mul i32 %36, -858993459
  %39 = tail call i32 @llvm.fshl.i32(i32 %38, i32 %38, i32 31)
  %40 = icmp ult i32 %39, 429496730
  %41 = select i1 %40, i32 %39, i32 %36
  %42 = zext i1 %40 to i32
  %43 = or i32 %37, %42
  %44 = zext i32 %41 to i64
  store i64 %44, ptr %0, align 8, !tbaa !20
  br label %64

45:                                               ; preds = %26
  %46 = landingpad { ptr, i32 }
          catch ptr null
  %47 = extractvalue { ptr, i32 } %46, 0
  tail call void @__clang_call_terminate(ptr %47) #33
  unreachable

48:                                               ; preds = %14, %48
  %49 = phi i64 [ %53, %48 ], [ %16, %14 ]
  %50 = phi i32 [ %51, %48 ], [ 0, %14 ]
  %51 = add nuw nsw i32 %50, 2
  %52 = mul i64 %49, -8116567392432202711
  %53 = tail call i64 @llvm.fshl.i64(i64 %49, i64 %52, i64 62)
  %54 = icmp ugt i64 %53, 184467440737095516
  br i1 %54, label %55, label %48

55:                                               ; preds = %48
  store i64 %49, ptr %0, align 8, !tbaa !20
  br label %56

56:                                               ; preds = %55, %14
  %57 = phi i64 [ %49, %55 ], [ %2, %14 ]
  %58 = phi i32 [ %51, %55 ], [ 0, %14 ]
  %59 = mul i64 %57, -3689348814741910323
  %60 = tail call i64 @llvm.fshl.i64(i64 %57, i64 %59, i64 63)
  %61 = icmp ugt i64 %60, 1844674407370955161
  br i1 %61, label %64, label %62

62:                                               ; preds = %56
  store i64 %60, ptr %0, align 8, !tbaa !20
  %63 = or disjoint i32 %58, 1
  br label %64

64:                                               ; preds = %56, %62, %35
  %65 = phi i32 [ %43, %35 ], [ %63, %62 ], [ %58, %56 ]
  ret i32 %65

66:                                               ; preds = %4
  %67 = landingpad { ptr, i32 }
          catch ptr null
  %68 = extractvalue { ptr, i32 } %67, 0
  tail call void @__clang_call_terminate(ptr %68) #33
  unreachable
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #16

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %3, i32 noundef %4, i64 %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca %"class.std::__1::locale", align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca %class.anon.39, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %17 = alloca %class.anon.41, align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %20 = alloca %class.anon.42, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca %class.anon.43, align 8
  store i32 %3, ptr %8, align 4, !tbaa !201
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #30
  %24 = load i64, ptr %1, align 8, !tbaa !262
  store i64 %24, ptr %9, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #30
  %25 = or i64 %24, 1
  %26 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %25, i1 true)
  %27 = xor i64 %26, 63
  %28 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !10
  %30 = zext i8 %29 to i32
  %31 = zext i8 %29 to i64
  %32 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !20
  %34 = icmp ult i64 %24, %33
  %35 = sext i1 %34 to i32
  %36 = add nsw i32 %35, %30
  store i32 %36, ptr %10, align 4, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #30
  store i8 48, ptr %11, align 1, !tbaa !10
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %39, label %38

38:                                               ; preds = %6
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

39:                                               ; preds = %6
  %40 = icmp ne i32 %3, 0
  %41 = zext i1 %40 to i32
  %42 = add nuw nsw i32 %36, %41
  %43 = zext nneg i32 %42 to i64
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #30
  %44 = load i32, ptr %2, align 4, !tbaa !53
  %45 = and i32 %44, 16384
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %39
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #30
  %48 = icmp eq i64 %5, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = inttoptr i64 %5 to ptr
  call void @_ZNSt3__16localeC1ERKS0_(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 8 dereferenceable(8) %50) #30
  br label %52

51:                                               ; preds = %47
  call void @_ZNSt3__16localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  br label %52

52:                                               ; preds = %51, %49
  %53 = invoke noundef nonnull align 8 dereferenceable(40) ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) @_ZNSt3__18numpunctIcE2idE)
          to label %54 unwind label %61

54:                                               ; preds = %52
  %55 = load ptr, ptr %53, align 8, !tbaa !82
  %56 = getelementptr inbounds nuw i8, ptr %55, i64 24
  %57 = load ptr, ptr %56, align 8
  %58 = invoke noundef i8 %57(ptr noundef nonnull align 8 dereferenceable(40) %53)
          to label %63 unwind label %61

59:                                               ; preds = %366, %61
  %60 = phi { ptr, i32 } [ %62, %61 ], [ %367, %366 ]
  resume { ptr, i32 } %60

61:                                               ; preds = %54, %52
  %62 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  br label %59

63:                                               ; preds = %54
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  %64 = load i32, ptr %10, align 4, !tbaa !11
  %65 = load i32, ptr %2, align 4
  br label %66

66:                                               ; preds = %39, %63
  %67 = phi i32 [ %65, %63 ], [ %44, %39 ]
  %68 = phi i32 [ %64, %63 ], [ %36, %39 ]
  %69 = phi i8 [ %58, %63 ], [ 46, %39 ]
  store i8 %69, ptr %12, align 1, !tbaa !10
  %70 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %71 = load i32, ptr %70, align 8, !tbaa !264
  %72 = add nsw i32 %68, %71
  %73 = add nsw i32 %72, -1
  %74 = freeze i32 %67
  %75 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %76 = load i32, ptr %75, align 4
  %77 = trunc i32 %74 to i8
  %78 = and i8 %77, 7
  switch i8 %78, label %79 [
    i8 1, label %85
    i8 2, label %143
  ]

79:                                               ; preds = %66
  %80 = icmp slt i32 %72, -3
  br i1 %80, label %85, label %81

81:                                               ; preds = %79
  %82 = icmp sgt i32 %76, 0
  %83 = select i1 %82, i32 %76, i32 %4
  %84 = icmp sgt i32 %72, %83
  br i1 %84, label %85, label %143

85:                                               ; preds = %79, %66, %81
  %86 = and i32 %74, 8192
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = sub nsw i32 %76, %68
  %90 = call i32 @llvm.smax.i32(i32 %89, i32 0)
  %91 = add nuw i32 %90, %42
  %92 = zext i32 %91 to i64
  br label %96

93:                                               ; preds = %85
  %94 = icmp eq i32 %68, 1
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  store i8 0, ptr %12, align 1, !tbaa !10
  br label %96

96:                                               ; preds = %93, %95, %88
  %97 = phi i8 [ %69, %88 ], [ 0, %95 ], [ %69, %93 ]
  %98 = phi i32 [ %90, %88 ], [ 0, %95 ], [ 0, %93 ]
  %99 = phi i64 [ %92, %88 ], [ %43, %95 ], [ %43, %93 ]
  %100 = sub nsw i32 1, %72
  %101 = icmp slt i32 %72, 1
  %102 = select i1 %101, i32 %100, i32 %73
  %103 = icmp sgt i32 %102, 99
  %104 = icmp sgt i32 %102, 999
  %105 = select i1 %104, i64 4, i64 3
  %106 = select i1 %103, i64 %105, i64 2
  %107 = icmp eq i8 %97, 0
  %108 = select i1 %107, i64 2, i64 3
  %109 = add nuw nsw i64 %99, %106
  %110 = add nuw nsw i64 %109, %108
  %111 = and i32 %74, 4096
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %112, i8 101, i8 69
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %13) #30
  %114 = load i32, ptr %8, align 4, !tbaa !201
  store i32 %114, ptr %13, align 8, !tbaa !270
  %115 = getelementptr inbounds nuw i8, ptr %13, i64 8
  %116 = load i64, ptr %9, align 8, !tbaa !20
  store i64 %116, ptr %115, align 8, !tbaa !272
  %117 = getelementptr inbounds nuw i8, ptr %13, i64 16
  store i32 %68, ptr %117, align 8, !tbaa !273
  %118 = getelementptr inbounds nuw i8, ptr %13, i64 20
  store i8 %97, ptr %118, align 4, !tbaa !274
  %119 = getelementptr inbounds nuw i8, ptr %13, i64 24
  store i32 %98, ptr %119, align 8, !tbaa !275
  %120 = getelementptr inbounds nuw i8, ptr %13, i64 28
  store i8 48, ptr %120, align 4, !tbaa !276
  %121 = getelementptr inbounds nuw i8, ptr %13, i64 29
  store i8 %113, ptr %121, align 1, !tbaa !277
  %122 = getelementptr inbounds nuw i8, ptr %13, i64 32
  store i32 %73, ptr %122, align 8, !tbaa !278
  %123 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %124 = load i32, ptr %123, align 4, !tbaa !125
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %96
  %127 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %110, i64 noundef %110, ptr noundef nonnull align 8 dereferenceable(36) %13)
  br label %141

128:                                              ; preds = %96
  %129 = inttoptr i64 %0 to ptr
  %130 = getelementptr inbounds nuw i8, ptr %129, i64 8
  %131 = load i64, ptr %130, align 8, !tbaa !37
  %132 = add i64 %131, %110
  %133 = getelementptr inbounds nuw i8, ptr %129, i64 16
  %134 = load i64, ptr %133, align 8, !tbaa !18
  %135 = icmp ugt i64 %132, %134
  br i1 %135, label %136, label %139

136:                                              ; preds = %128
  %137 = getelementptr inbounds nuw i8, ptr %129, i64 24
  %138 = load ptr, ptr %137, align 8, !tbaa !13
  call void %138(ptr noundef nonnull align 8 dereferenceable(32) %129, i64 noundef %132)
  br label %139

139:                                              ; preds = %128, %136
  %140 = call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(36) %13, i64 %0)
  br label %141

141:                                              ; preds = %139, %126
  %142 = phi i64 [ %127, %126 ], [ %140, %139 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %13) #30
  br label %368

143:                                              ; preds = %66, %81
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #30
  store i32 %72, ptr %14, align 4, !tbaa !11
  %144 = icmp sgt i32 %71, -1
  br i1 %144, label %145, label %242

145:                                              ; preds = %143
  %146 = add nuw i32 %71, %42
  %147 = zext i32 %146 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #30
  %148 = sub nsw i32 %76, %72
  store i32 %148, ptr %15, align 4, !tbaa !11
  %149 = and i32 %74, 8192
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %161, label %151

151:                                              ; preds = %145
  %152 = add nuw nsw i64 %147, 1
  %153 = icmp sgt i32 %148, 0
  %154 = icmp eq i8 %78, 2
  %155 = or i1 %153, %154
  br i1 %155, label %157, label %156

156:                                              ; preds = %151
  store i32 0, ptr %15, align 4, !tbaa !11
  br label %161

157:                                              ; preds = %151
  br i1 %153, label %158, label %161

158:                                              ; preds = %157
  %159 = zext nneg i32 %148 to i64
  %160 = add nuw nsw i64 %152, %159
  br label %161

161:                                              ; preds = %156, %157, %158, %145
  %162 = phi i64 [ %160, %158 ], [ %152, %157 ], [ %147, %145 ], [ %152, %156 ]
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %16) #30
  %163 = and i32 %74, 16384
  %164 = icmp ne i32 %163, 0
  call void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %16, i64 %5, i1 noundef zeroext %164)
  %165 = getelementptr inbounds nuw i8, ptr %16, i64 24
  %166 = load i8, ptr %165, align 8
  %167 = and i8 %166, 1
  %168 = icmp eq i8 %167, 0
  %169 = getelementptr inbounds nuw i8, ptr %16, i64 32
  %170 = load i64, ptr %169, align 8
  %171 = lshr i8 %166, 1
  %172 = zext nneg i8 %171 to i64
  %173 = select i1 %168, i64 %172, i64 %170
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %213, label %175

175:                                              ; preds = %161
  %176 = load i8, ptr %16, align 8, !noalias !279
  %177 = and i8 %176, 1
  %178 = icmp eq i8 %177, 0
  %179 = getelementptr inbounds nuw i8, ptr %16, i64 1
  %180 = getelementptr inbounds nuw i8, ptr %16, i64 16
  %181 = load ptr, ptr %180, align 8, !noalias !279
  %182 = select i1 %178, ptr %179, ptr %181
  %183 = getelementptr inbounds nuw i8, ptr %16, i64 8
  %184 = load i64, ptr %183, align 8
  %185 = lshr i8 %176, 1
  %186 = zext nneg i8 %185 to i64
  %187 = select i1 %178, i64 %186, i64 %184
  %188 = getelementptr inbounds nuw i8, ptr %182, i64 %187
  %189 = getelementptr inbounds i8, ptr %188, i64 -1
  br label %190

190:                                              ; preds = %209, %175
  %191 = phi i32 [ 0, %175 ], [ %210, %209 ]
  %192 = phi ptr [ %182, %175 ], [ %205, %209 ]
  %193 = phi i32 [ 0, %175 ], [ %207, %209 ]
  %194 = icmp eq ptr %192, %188
  br i1 %194, label %195, label %197

195:                                              ; preds = %190
  %196 = load i8, ptr %189, align 1, !tbaa !10
  br label %203

197:                                              ; preds = %190
  %198 = load i8, ptr %192, align 1, !tbaa !10
  %199 = add i8 %198, -127
  %200 = icmp ult i8 %199, -126
  br i1 %200, label %211, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds nuw i8, ptr %192, i64 1
  br label %203

203:                                              ; preds = %201, %195
  %204 = phi i8 [ %198, %201 ], [ %196, %195 ]
  %205 = phi ptr [ %202, %201 ], [ %192, %195 ]
  %206 = sext i8 %204 to i32
  %207 = add nsw i32 %193, %206
  %208 = icmp sgt i32 %72, %207
  br i1 %208, label %209, label %211

209:                                              ; preds = %203
  %210 = add nuw nsw i32 %191, 1
  br label %190

211:                                              ; preds = %203, %197
  %212 = zext nneg i32 %191 to i64
  br label %213

213:                                              ; preds = %211, %161
  %214 = phi i64 [ 0, %161 ], [ %212, %211 ]
  %215 = add nuw nsw i64 %162, %214
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %17) #30
  store ptr %8, ptr %17, align 8, !tbaa !36
  %216 = getelementptr inbounds nuw i8, ptr %17, i64 8
  store ptr %9, ptr %216, align 8, !tbaa !282
  %217 = getelementptr inbounds nuw i8, ptr %17, i64 16
  store ptr %10, ptr %217, align 8, !tbaa !119
  %218 = getelementptr inbounds nuw i8, ptr %17, i64 24
  store ptr %1, ptr %218, align 8, !tbaa !284
  %219 = getelementptr inbounds nuw i8, ptr %17, i64 32
  store ptr %16, ptr %219, align 8, !tbaa !121
  %220 = getelementptr inbounds nuw i8, ptr %17, i64 40
  store ptr %2, ptr %220, align 8, !tbaa !91
  %221 = getelementptr inbounds nuw i8, ptr %17, i64 48
  store ptr %12, ptr %221, align 8, !tbaa !19
  %222 = getelementptr inbounds nuw i8, ptr %17, i64 56
  store ptr %15, ptr %222, align 8, !tbaa !119
  %223 = getelementptr inbounds nuw i8, ptr %17, i64 64
  store ptr %11, ptr %223, align 8, !tbaa !19
  %224 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %215, i64 noundef %215, ptr noundef nonnull align 8 dereferenceable(72) %17)
          to label %225 unwind label %240

225:                                              ; preds = %213
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %17) #30
  %226 = load i8, ptr %165, align 8
  %227 = and i8 %226, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds nuw i8, ptr %16, i64 40
  %231 = load ptr, ptr %230, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %231) #34
  br label %232

232:                                              ; preds = %229, %225
  %233 = load i8, ptr %16, align 8
  %234 = and i8 %233, 1
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %239, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds nuw i8, ptr %16, i64 16
  %238 = load ptr, ptr %237, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %238) #34
  br label %239

239:                                              ; preds = %232, %236
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #30
  br label %364

240:                                              ; preds = %213
  %241 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %17) #30
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %16) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #30
  br label %366

242:                                              ; preds = %143
  %243 = icmp sgt i32 %72, 0
  br i1 %243, label %244, label %331

244:                                              ; preds = %242
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #30
  %245 = and i32 %74, 8192
  %246 = icmp eq i32 %245, 0
  %247 = sub nsw i32 %76, %68
  %248 = select i1 %246, i32 0, i32 %247
  store i32 %248, ptr %18, align 4, !tbaa !11
  %249 = call noundef i32 @llvm.smax.i32(i32 %248, i32 0)
  %250 = add nuw i32 %249, 1
  %251 = zext i32 %250 to i64
  %252 = add nuw nsw i64 %251, %43
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %19) #30
  %253 = and i32 %74, 16384
  %254 = icmp ne i32 %253, 0
  call void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %19, i64 %5, i1 noundef zeroext %254)
  %255 = getelementptr inbounds nuw i8, ptr %19, i64 24
  %256 = load i8, ptr %255, align 8
  %257 = and i8 %256, 1
  %258 = icmp eq i8 %257, 0
  %259 = getelementptr inbounds nuw i8, ptr %19, i64 32
  %260 = load i64, ptr %259, align 8
  %261 = lshr i8 %256, 1
  %262 = zext nneg i8 %261 to i64
  %263 = select i1 %258, i64 %262, i64 %260
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %303, label %265

265:                                              ; preds = %244
  %266 = load i8, ptr %19, align 8, !noalias !286
  %267 = and i8 %266, 1
  %268 = icmp eq i8 %267, 0
  %269 = getelementptr inbounds nuw i8, ptr %19, i64 1
  %270 = getelementptr inbounds nuw i8, ptr %19, i64 16
  %271 = load ptr, ptr %270, align 8, !noalias !286
  %272 = select i1 %268, ptr %269, ptr %271
  %273 = getelementptr inbounds nuw i8, ptr %19, i64 8
  %274 = load i64, ptr %273, align 8
  %275 = lshr i8 %266, 1
  %276 = zext nneg i8 %275 to i64
  %277 = select i1 %268, i64 %276, i64 %274
  %278 = getelementptr inbounds nuw i8, ptr %272, i64 %277
  %279 = getelementptr inbounds i8, ptr %278, i64 -1
  br label %280

280:                                              ; preds = %299, %265
  %281 = phi i32 [ 0, %265 ], [ %300, %299 ]
  %282 = phi ptr [ %272, %265 ], [ %295, %299 ]
  %283 = phi i32 [ 0, %265 ], [ %297, %299 ]
  %284 = icmp eq ptr %282, %278
  br i1 %284, label %285, label %287

285:                                              ; preds = %280
  %286 = load i8, ptr %279, align 1, !tbaa !10
  br label %293

287:                                              ; preds = %280
  %288 = load i8, ptr %282, align 1, !tbaa !10
  %289 = add i8 %288, -127
  %290 = icmp ult i8 %289, -126
  br i1 %290, label %301, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds nuw i8, ptr %282, i64 1
  br label %293

293:                                              ; preds = %291, %285
  %294 = phi i8 [ %288, %291 ], [ %286, %285 ]
  %295 = phi ptr [ %292, %291 ], [ %282, %285 ]
  %296 = sext i8 %294 to i32
  %297 = add nsw i32 %283, %296
  %298 = icmp sgt i32 %72, %297
  br i1 %298, label %299, label %301

299:                                              ; preds = %293
  %300 = add nuw nsw i32 %281, 1
  br label %280

301:                                              ; preds = %293, %287
  %302 = zext nneg i32 %281 to i64
  br label %303

303:                                              ; preds = %301, %244
  %304 = phi i64 [ 0, %244 ], [ %302, %301 ]
  %305 = add nuw nsw i64 %252, %304
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %20) #30
  store ptr %8, ptr %20, align 8, !tbaa !36
  %306 = getelementptr inbounds nuw i8, ptr %20, i64 8
  store ptr %9, ptr %306, align 8, !tbaa !282
  %307 = getelementptr inbounds nuw i8, ptr %20, i64 16
  store ptr %10, ptr %307, align 8, !tbaa !119
  %308 = getelementptr inbounds nuw i8, ptr %20, i64 24
  store ptr %14, ptr %308, align 8, !tbaa !119
  %309 = getelementptr inbounds nuw i8, ptr %20, i64 32
  store ptr %12, ptr %309, align 8, !tbaa !19
  %310 = getelementptr inbounds nuw i8, ptr %20, i64 40
  store ptr %19, ptr %310, align 8, !tbaa !121
  %311 = getelementptr inbounds nuw i8, ptr %20, i64 48
  store ptr %18, ptr %311, align 8, !tbaa !119
  %312 = getelementptr inbounds nuw i8, ptr %20, i64 56
  store ptr %11, ptr %312, align 8, !tbaa !19
  %313 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %305, i64 noundef %305, ptr noundef nonnull align 8 dereferenceable(64) %20)
          to label %314 unwind label %329

314:                                              ; preds = %303
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #30
  %315 = load i8, ptr %255, align 8
  %316 = and i8 %315, 1
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds nuw i8, ptr %19, i64 40
  %320 = load ptr, ptr %319, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %320) #34
  br label %321

321:                                              ; preds = %318, %314
  %322 = load i8, ptr %19, align 8
  %323 = and i8 %322, 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds nuw i8, ptr %19, i64 16
  %327 = load ptr, ptr %326, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %327) #34
  br label %328

328:                                              ; preds = %321, %325
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #30
  br label %364

329:                                              ; preds = %303
  %330 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #30
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %19) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #30
  br label %366

331:                                              ; preds = %242
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #30
  %332 = sub nsw i32 0, %72
  store i32 %332, ptr %21, align 4, !tbaa !11
  %333 = icmp eq i32 %68, 0
  br i1 %333, label %335, label %334

334:                                              ; preds = %331
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #30
  br label %349

335:                                              ; preds = %331
  %336 = icmp sgt i32 %76, -1
  %337 = icmp slt i32 %76, %332
  %338 = select i1 %336, i1 %337, i1 false
  br i1 %338, label %339, label %340

339:                                              ; preds = %335
  store i32 %76, ptr %21, align 4, !tbaa !11
  br label %340

340:                                              ; preds = %339, %335
  %341 = phi i32 [ %76, %339 ], [ %332, %335 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #30
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %349

343:                                              ; preds = %340
  %344 = and i32 %74, 8192
  %345 = icmp eq i32 %344, 0
  %346 = lshr exact i32 %344, 13
  %347 = trunc nuw nsw i32 %346 to i8
  store i8 %347, ptr %22, align 1, !tbaa !222
  %348 = select i1 %345, i32 1, i32 2
  br label %351

349:                                              ; preds = %340, %334
  %350 = phi i32 [ %332, %334 ], [ %341, %340 ]
  store i8 1, ptr %22, align 1, !tbaa !222
  br label %351

351:                                              ; preds = %349, %343
  %352 = phi i32 [ 2, %349 ], [ %348, %343 ]
  %353 = phi i32 [ %350, %349 ], [ 0, %343 ]
  %354 = add nuw i32 %353, %352
  %355 = zext i32 %354 to i64
  %356 = add nuw nsw i64 %355, %43
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %23) #30
  store ptr %8, ptr %23, align 8, !tbaa !36
  %357 = getelementptr inbounds nuw i8, ptr %23, i64 8
  store ptr %22, ptr %357, align 8, !tbaa !223
  %358 = getelementptr inbounds nuw i8, ptr %23, i64 16
  store ptr %12, ptr %358, align 8, !tbaa !19
  %359 = getelementptr inbounds nuw i8, ptr %23, i64 24
  store ptr %21, ptr %359, align 8, !tbaa !119
  %360 = getelementptr inbounds nuw i8, ptr %23, i64 32
  store ptr %11, ptr %360, align 8, !tbaa !19
  %361 = getelementptr inbounds nuw i8, ptr %23, i64 40
  store ptr %9, ptr %361, align 8, !tbaa !282
  %362 = getelementptr inbounds nuw i8, ptr %23, i64 48
  store ptr %10, ptr %362, align 8, !tbaa !119
  %363 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %356, i64 noundef %356, ptr noundef nonnull align 8 dereferenceable(56) %23)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %23) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %22) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #30
  br label %364

364:                                              ; preds = %351, %328, %239
  %365 = phi i64 [ %224, %239 ], [ %313, %328 ], [ %363, %351 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #30
  br label %368

366:                                              ; preds = %329, %240
  %367 = phi { ptr, i32 } [ %241, %240 ], [ %330, %329 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #30
  br label %59

368:                                              ; preds = %364, %141
  %369 = phi i64 [ %142, %141 ], [ %365, %364 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #30
  ret i64 %369
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(36) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca [21 x i8], align 16
  %4 = inttoptr i64 %1 to ptr
  %5 = load i32, ptr %0, align 8, !tbaa !270
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !272
  %30 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %31 = load i32, ptr %30, align 8, !tbaa !273
  %32 = getelementptr inbounds nuw i8, ptr %0, i64 20
  %33 = load i8, ptr %32, align 4, !tbaa !274
  call void @llvm.lifetime.start.p0(i64 21, ptr nonnull %3) #30
  %34 = call noundef ptr @_ZN3fmt3v116detail17write_significandIcyTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef nonnull %3, i64 noundef %29, i32 noundef %31, i32 noundef 1, i8 noundef %33)
  %35 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %3, ptr noundef %34, i64 %1)
  call void @llvm.lifetime.end.p0(i64 21, ptr nonnull %3) #30
  %36 = inttoptr i64 %35 to ptr
  %37 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %38 = load i32, ptr %37, align 8, !tbaa !275
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %63

40:                                               ; preds = %27
  %41 = getelementptr inbounds nuw i8, ptr %0, i64 28
  %42 = getelementptr inbounds nuw i8, ptr %36, i64 8
  %43 = getelementptr inbounds nuw i8, ptr %36, i64 16
  %44 = getelementptr inbounds nuw i8, ptr %36, i64 24
  br label %45

45:                                               ; preds = %56, %40
  %46 = phi i32 [ 0, %40 ], [ %61, %56 ]
  %47 = load i8, ptr %41, align 4, !tbaa !10
  %48 = load i64, ptr %42, align 8, !tbaa !37
  %49 = add i64 %48, 1
  %50 = load i64, ptr %43, align 8, !tbaa !18
  %51 = icmp ugt i64 %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = load ptr, ptr %44, align 8, !tbaa !13
  call void %53(ptr noundef nonnull align 8 dereferenceable(32) %36, i64 noundef %49)
  %54 = load i64, ptr %42, align 8, !tbaa !37
  %55 = add i64 %54, 1
  br label %56

56:                                               ; preds = %52, %45
  %57 = phi i64 [ %49, %45 ], [ %55, %52 ]
  %58 = phi i64 [ %48, %45 ], [ %54, %52 ]
  %59 = load ptr, ptr %36, align 8, !tbaa !17
  store i64 %57, ptr %42, align 8, !tbaa !37
  %60 = getelementptr inbounds nuw i8, ptr %59, i64 %58
  store i8 %47, ptr %60, align 1, !tbaa !10
  %61 = add nuw nsw i32 %46, 1
  %62 = icmp eq i32 %61, %38
  br i1 %62, label %63, label %45, !llvm.loop !225

63:                                               ; preds = %56, %27
  %64 = getelementptr inbounds nuw i8, ptr %0, i64 29
  %65 = load i8, ptr %64, align 1, !tbaa !277
  %66 = getelementptr inbounds nuw i8, ptr %36, i64 8
  %67 = load i64, ptr %66, align 8, !tbaa !37
  %68 = add i64 %67, 1
  %69 = getelementptr inbounds nuw i8, ptr %36, i64 16
  %70 = load i64, ptr %69, align 8, !tbaa !18
  %71 = icmp ugt i64 %68, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %63
  %73 = getelementptr inbounds nuw i8, ptr %36, i64 24
  %74 = load ptr, ptr %73, align 8, !tbaa !13
  call void %74(ptr noundef nonnull align 8 dereferenceable(32) %36, i64 noundef %68)
  %75 = load i64, ptr %66, align 8, !tbaa !37
  %76 = add i64 %75, 1
  br label %77

77:                                               ; preds = %63, %72
  %78 = phi i64 [ %68, %63 ], [ %76, %72 ]
  %79 = phi i64 [ %67, %63 ], [ %75, %72 ]
  %80 = load ptr, ptr %36, align 8, !tbaa !17
  store i64 %78, ptr %66, align 8, !tbaa !37
  %81 = getelementptr inbounds nuw i8, ptr %80, i64 %79
  store i8 %65, ptr %81, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %83 = load i32, ptr %82, align 8, !tbaa !278
  %84 = call i64 @_ZN3fmt3v116detail14write_exponentIcNS0_14basic_appenderIcEEEET0_iS5_(i32 noundef %83, i64 %35)
  ret i64 %84
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(36) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(36) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail17write_significandIcyTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef %0, i64 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4) local_unnamed_addr #5 comdat {
  %6 = icmp eq i8 %4, 0
  br i1 %6, label %7, label %59

7:                                                ; preds = %5
  %8 = or i64 %1, 1
  %9 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %8, i1 true)
  %10 = xor i64 %9, 63
  %11 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !10
  %13 = zext i8 %12 to i32
  %14 = zext i8 %12 to i64
  %15 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %14
  %16 = load i64, ptr %15, align 8, !tbaa !20
  %17 = icmp ult i64 %1, %16
  %18 = sext i1 %17 to i32
  %19 = add nsw i32 %18, %13
  %20 = icmp slt i32 %2, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %7
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

22:                                               ; preds = %7
  %23 = icmp sgt i32 %2, -1
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = icmp ugt i64 %1, 99
  br i1 %25, label %27, label %39

26:                                               ; preds = %22
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

27:                                               ; preds = %24, %27
  %28 = phi i32 [ %30, %27 ], [ %2, %24 ]
  %29 = phi i64 [ %37, %27 ], [ %1, %24 ]
  %30 = add i32 %28, -2
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds nuw i8, ptr %0, i64 %31
  %33 = urem i64 %29, 100
  %34 = shl nuw nsw i64 %33, 1
  %35 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %34
  %36 = load i16, ptr %35, align 2
  store i16 %36, ptr %32, align 1
  %37 = udiv i64 %29, 100
  %38 = icmp ugt i64 %29, 9999
  br i1 %38, label %27, label %39, !llvm.loop !79

39:                                               ; preds = %27, %24
  %40 = phi i64 [ %1, %24 ], [ %37, %27 ]
  %41 = phi i32 [ %2, %24 ], [ %30, %27 ]
  %42 = icmp samesign ugt i64 %40, 9
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = add i32 %41, -2
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds nuw i8, ptr %0, i64 %45
  %47 = shl nuw nsw i64 %40, 1
  %48 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %47
  %49 = load i16, ptr %48, align 2
  store i16 %49, ptr %46, align 1
  br label %56

50:                                               ; preds = %39
  %51 = trunc nuw i64 %40 to i8
  %52 = or disjoint i8 %51, 48
  %53 = add i32 %41, -1
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds nuw i8, ptr %0, i64 %54
  store i8 %52, ptr %55, align 1, !tbaa !10
  br label %56

56:                                               ; preds = %43, %50
  %57 = zext nneg i32 %2 to i64
  %58 = getelementptr inbounds nuw i8, ptr %0, i64 %57
  br label %145

59:                                               ; preds = %5
  %60 = sext i32 %2 to i64
  %61 = getelementptr i8, ptr %0, i64 %60
  %62 = getelementptr i8, ptr %61, i64 1
  %63 = sub nsw i32 %2, %3
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = lshr i32 %63, 1
  br label %72

67:                                               ; preds = %72, %59
  %68 = phi i64 [ %1, %59 ], [ %81, %72 ]
  %69 = phi ptr [ %62, %59 ], [ %76, %72 ]
  %70 = and i32 %63, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %90, label %84

72:                                               ; preds = %65, %72
  %73 = phi i32 [ %82, %72 ], [ %66, %65 ]
  %74 = phi ptr [ %76, %72 ], [ %62, %65 ]
  %75 = phi i64 [ %81, %72 ], [ %1, %65 ]
  %76 = getelementptr inbounds i8, ptr %74, i64 -2
  %77 = urem i64 %75, 100
  %78 = shl nuw nsw i64 %77, 1
  %79 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %78
  %80 = load i16, ptr %79, align 2
  store i16 %80, ptr %76, align 1
  %81 = udiv i64 %75, 100
  %82 = add nsw i32 %73, -1
  %83 = icmp samesign ugt i32 %73, 1
  br i1 %83, label %72, label %67, !llvm.loop !289

84:                                               ; preds = %67
  %85 = urem i64 %68, 10
  %86 = trunc nuw nsw i64 %85 to i8
  %87 = or disjoint i8 %86, 48
  %88 = getelementptr inbounds i8, ptr %69, i64 -1
  store i8 %87, ptr %88, align 1, !tbaa !10
  %89 = udiv i64 %68, 10
  br label %90

90:                                               ; preds = %84, %67
  %91 = phi i64 [ %89, %84 ], [ %68, %67 ]
  %92 = phi ptr [ %88, %84 ], [ %69, %67 ]
  %93 = getelementptr inbounds i8, ptr %92, i64 -1
  store i8 %4, ptr %93, align 1, !tbaa !10
  %94 = sext i32 %3 to i64
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds i8, ptr %93, i64 %95
  %97 = or i64 %91, 1
  %98 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %97, i1 true)
  %99 = xor i64 %98, 63
  %100 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %99
  %101 = load i8, ptr %100, align 1, !tbaa !10
  %102 = zext i8 %101 to i32
  %103 = zext i8 %101 to i64
  %104 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %103
  %105 = load i64, ptr %104, align 8, !tbaa !20
  %106 = icmp ult i64 %91, %105
  %107 = sext i1 %106 to i32
  %108 = add nsw i32 %107, %102
  %109 = icmp slt i32 %3, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %90
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

111:                                              ; preds = %90
  %112 = icmp sgt i32 %3, -1
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = icmp ugt i64 %91, 99
  br i1 %114, label %116, label %128

115:                                              ; preds = %111
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

116:                                              ; preds = %113, %116
  %117 = phi i32 [ %119, %116 ], [ %3, %113 ]
  %118 = phi i64 [ %126, %116 ], [ %91, %113 ]
  %119 = add i32 %117, -2
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds nuw i8, ptr %96, i64 %120
  %122 = urem i64 %118, 100
  %123 = shl nuw nsw i64 %122, 1
  %124 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %123
  %125 = load i16, ptr %124, align 2
  store i16 %125, ptr %121, align 1
  %126 = udiv i64 %118, 100
  %127 = icmp ugt i64 %118, 9999
  br i1 %127, label %116, label %128, !llvm.loop !79

128:                                              ; preds = %116, %113
  %129 = phi i64 [ %91, %113 ], [ %126, %116 ]
  %130 = phi i32 [ %3, %113 ], [ %119, %116 ]
  %131 = icmp samesign ugt i64 %129, 9
  br i1 %131, label %132, label %139

132:                                              ; preds = %128
  %133 = add i32 %130, -2
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds nuw i8, ptr %96, i64 %134
  %136 = shl nuw nsw i64 %129, 1
  %137 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %136
  %138 = load i16, ptr %137, align 2
  store i16 %138, ptr %135, align 1
  br label %145

139:                                              ; preds = %128
  %140 = trunc nuw i64 %129 to i8
  %141 = or disjoint i8 %140, 48
  %142 = add i32 %130, -1
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds nuw i8, ptr %96, i64 %143
  store i8 %141, ptr %144, align 1, !tbaa !10
  br label %145

145:                                              ; preds = %139, %132, %56
  %146 = phi ptr [ %58, %56 ], [ %62, %132 ], [ %62, %139 ]
  ret ptr %146
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(72) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_(ptr noundef nonnull align 8 dereferenceable(72) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_(ptr noundef nonnull align 8 dereferenceable(72) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load ptr, ptr %0, align 8, !tbaa !290
  %5 = load i32, ptr %4, align 4, !tbaa !201
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %29 = load ptr, ptr %28, align 8, !tbaa !292
  %30 = load i64, ptr %29, align 8, !tbaa !20
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %32 = load ptr, ptr %31, align 8, !tbaa !293
  %33 = load i32, ptr %32, align 4, !tbaa !11
  %34 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %35 = load ptr, ptr %34, align 8, !tbaa !294
  %36 = getelementptr inbounds nuw i8, ptr %35, i64 8
  %37 = load i32, ptr %36, align 8, !tbaa !264
  %38 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %39 = load ptr, ptr %38, align 8, !tbaa !295
  %40 = tail call i64 @_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEyNS1_14digit_groupingIcEEEET0_S7_T1_iiRKT2_(i64 %1, i64 noundef %30, i32 noundef %33, i32 noundef %37, ptr noundef nonnull align 8 dereferenceable(48) %39)
  %41 = inttoptr i64 %40 to ptr
  %42 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %43 = load ptr, ptr %42, align 8, !tbaa !296
  %44 = load i32, ptr %43, align 4, !tbaa !53
  %45 = and i32 %44, 8192
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %93, label %47

47:                                               ; preds = %27
  %48 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %49 = load ptr, ptr %48, align 8, !tbaa !297
  %50 = load i8, ptr %49, align 1, !tbaa !10
  %51 = getelementptr inbounds nuw i8, ptr %41, i64 8
  %52 = load i64, ptr %51, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = getelementptr inbounds nuw i8, ptr %41, i64 16
  %55 = load i64, ptr %54, align 8, !tbaa !18
  %56 = icmp ugt i64 %53, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds nuw i8, ptr %41, i64 24
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %53)
  %60 = load i64, ptr %51, align 8, !tbaa !37
  %61 = add i64 %60, 1
  br label %62

62:                                               ; preds = %47, %57
  %63 = phi i64 [ %53, %47 ], [ %61, %57 ]
  %64 = phi i64 [ %52, %47 ], [ %60, %57 ]
  %65 = load ptr, ptr %41, align 8, !tbaa !17
  store i64 %63, ptr %51, align 8, !tbaa !37
  %66 = getelementptr inbounds nuw i8, ptr %65, i64 %64
  store i8 %50, ptr %66, align 1, !tbaa !10
  %67 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %68 = load ptr, ptr %67, align 8, !tbaa !298
  %69 = load i32, ptr %68, align 4, !tbaa !11
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %93

71:                                               ; preds = %62
  %72 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %73 = load ptr, ptr %72, align 8, !tbaa !299
  %74 = getelementptr inbounds nuw i8, ptr %41, i64 24
  br label %75

75:                                               ; preds = %86, %71
  %76 = phi i32 [ 0, %71 ], [ %91, %86 ]
  %77 = load i8, ptr %73, align 1, !tbaa !10
  %78 = load i64, ptr %51, align 8, !tbaa !37
  %79 = add i64 %78, 1
  %80 = load i64, ptr %54, align 8, !tbaa !18
  %81 = icmp ugt i64 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  %83 = load ptr, ptr %74, align 8, !tbaa !13
  tail call void %83(ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %79)
  %84 = load i64, ptr %51, align 8, !tbaa !37
  %85 = add i64 %84, 1
  br label %86

86:                                               ; preds = %82, %75
  %87 = phi i64 [ %79, %75 ], [ %85, %82 ]
  %88 = phi i64 [ %78, %75 ], [ %84, %82 ]
  %89 = load ptr, ptr %41, align 8, !tbaa !17
  store i64 %87, ptr %51, align 8, !tbaa !37
  %90 = getelementptr inbounds nuw i8, ptr %89, i64 %88
  store i8 %77, ptr %90, align 1, !tbaa !10
  %91 = add nuw nsw i32 %76, 1
  %92 = icmp eq i32 %91, %69
  br i1 %92, label %93, label %75, !llvm.loop !225

93:                                               ; preds = %86, %62, %27
  ret i64 %40
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEyNS1_14digit_groupingIcEEEET0_S7_T1_iiRKT2_(i64 %0, i64 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(48) %4) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %7 = alloca %"class.fmt::v11::basic_string_view", align 8
  %8 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %9 = load i8, ptr %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %13 = load i64, ptr %12, align 8
  %14 = lshr i8 %9, 1
  %15 = zext nneg i8 %14 to i64
  %16 = select i1 %11, i64 %15, i64 %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %43

18:                                               ; preds = %5
  %19 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %0, i64 noundef %1, i32 noundef %2)
  %20 = inttoptr i64 %19 to ptr
  %21 = icmp sgt i32 %3, 0
  br i1 %21, label %22, label %90

22:                                               ; preds = %18
  %23 = getelementptr inbounds nuw i8, ptr %20, i64 8
  %24 = getelementptr inbounds nuw i8, ptr %20, i64 16
  %25 = getelementptr inbounds nuw i8, ptr %20, i64 24
  br label %26

26:                                               ; preds = %36, %22
  %27 = phi i32 [ 0, %22 ], [ %41, %36 ]
  %28 = load i64, ptr %23, align 8, !tbaa !37
  %29 = add i64 %28, 1
  %30 = load i64, ptr %24, align 8, !tbaa !18
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load ptr, ptr %25, align 8, !tbaa !13
  tail call void %33(ptr noundef nonnull align 8 dereferenceable(32) %20, i64 noundef %29)
  %34 = load i64, ptr %23, align 8, !tbaa !37
  %35 = add i64 %34, 1
  br label %36

36:                                               ; preds = %32, %26
  %37 = phi i64 [ %29, %26 ], [ %35, %32 ]
  %38 = phi i64 [ %28, %26 ], [ %34, %32 ]
  %39 = load ptr, ptr %20, align 8, !tbaa !17
  store i64 %37, ptr %23, align 8, !tbaa !37
  %40 = getelementptr inbounds nuw i8, ptr %39, i64 %38
  store i8 48, ptr %40, align 1, !tbaa !10
  %41 = add nuw nsw i32 %27, 1
  %42 = icmp eq i32 %41, %3
  br i1 %42, label %90, label %26, !llvm.loop !225

43:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %6) #30
  %44 = getelementptr inbounds nuw i8, ptr %6, i64 16
  %45 = getelementptr inbounds nuw i8, ptr %6, i64 24
  %46 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 0, ptr %46, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %45, align 8, !tbaa !13
  %47 = getelementptr inbounds nuw i8, ptr %6, i64 32
  store ptr %47, ptr %6, align 8, !tbaa !17
  store i64 500, ptr %44, align 8, !tbaa !18
  %48 = ptrtoint ptr %6 to i64
  %49 = invoke i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %48, i64 noundef %1, i32 noundef %2)
          to label %50 unwind label %80

50:                                               ; preds = %43
  %51 = icmp sgt i32 %3, 0
  br i1 %51, label %52, label %70

52:                                               ; preds = %50, %63
  %53 = phi i32 [ %68, %63 ], [ 0, %50 ]
  %54 = load i64, ptr %46, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = load i64, ptr %44, align 8, !tbaa !18
  %57 = icmp ugt i64 %55, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = load ptr, ptr %45, align 8, !tbaa !13
  invoke void %59(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %55)
          to label %60 unwind label %82

60:                                               ; preds = %58
  %61 = load i64, ptr %46, align 8, !tbaa !37
  %62 = add i64 %61, 1
  br label %63

63:                                               ; preds = %60, %52
  %64 = phi i64 [ %55, %52 ], [ %62, %60 ]
  %65 = phi i64 [ %54, %52 ], [ %61, %60 ]
  %66 = load ptr, ptr %6, align 8, !tbaa !17
  store i64 %64, ptr %46, align 8, !tbaa !37
  %67 = getelementptr inbounds nuw i8, ptr %66, i64 %65
  store i8 48, ptr %67, align 1, !tbaa !10
  %68 = add nuw nsw i32 %53, 1
  %69 = icmp eq i32 %68, %3
  br i1 %69, label %70, label %52, !llvm.loop !225

70:                                               ; preds = %63, %50
  %71 = load ptr, ptr %6, align 8, !tbaa !17
  %72 = load i64, ptr %46, align 8, !tbaa !37
  store ptr %71, ptr %7, align 8, !tbaa !38
  %73 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 %72, ptr %73, align 8, !tbaa !39
  %74 = invoke i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %4, i64 %0, ptr noundef nonnull %7)
          to label %75 unwind label %80

75:                                               ; preds = %70
  %76 = load ptr, ptr %6, align 8, !tbaa !17
  %77 = icmp eq ptr %76, %47
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  call void @free(ptr noundef %76)
  br label %79

79:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %6) #30
  br label %90

80:                                               ; preds = %43, %70
  %81 = landingpad { ptr, i32 }
          cleanup
  br label %84

82:                                               ; preds = %58
  %83 = landingpad { ptr, i32 }
          cleanup
  br label %84

84:                                               ; preds = %82, %80
  %85 = phi { ptr, i32 } [ %81, %80 ], [ %83, %82 ]
  %86 = load ptr, ptr %6, align 8, !tbaa !17
  %87 = icmp eq ptr %86, %47
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  call void @free(ptr noundef %86)
  br label %89

89:                                               ; preds = %84, %88
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %6) #30
  resume { ptr, i32 } %85

90:                                               ; preds = %36, %18, %79
  %91 = phi i64 [ %74, %79 ], [ %19, %18 ], [ %19, %36 ]
  ret i64 %91
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(64) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load ptr, ptr %4, align 8, !tbaa !300
  %47 = load i32, ptr %46, align 4, !tbaa !201
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %69, label %49

49:                                               ; preds = %43
  %50 = shl nsw i32 %47, 3
  %51 = lshr i32 539700480, %50
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %54 = load i64, ptr %53, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %57 = load i64, ptr %56, align 8, !tbaa !18
  %58 = icmp ugt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds nuw i8, ptr %44, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %55)
  %62 = load i64, ptr %53, align 8, !tbaa !37
  %63 = add i64 %62, 1
  br label %64

64:                                               ; preds = %59, %49
  %65 = phi i64 [ %55, %49 ], [ %63, %59 ]
  %66 = phi i64 [ %54, %49 ], [ %62, %59 ]
  %67 = load ptr, ptr %44, align 8, !tbaa !17
  store i64 %65, ptr %53, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %66
  store i8 %52, ptr %68, align 1, !tbaa !10
  br label %69

69:                                               ; preds = %64, %43
  %70 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %71 = load ptr, ptr %70, align 8, !tbaa !302
  %72 = load i64, ptr %71, align 8, !tbaa !20
  %73 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %74 = load ptr, ptr %73, align 8, !tbaa !303
  %75 = load i32, ptr %74, align 4, !tbaa !11
  %76 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %77 = load ptr, ptr %76, align 8, !tbaa !304
  %78 = load i32, ptr %77, align 4, !tbaa !11
  %79 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %80 = load ptr, ptr %79, align 8, !tbaa !305
  %81 = load i8, ptr %80, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %4, i64 40
  %83 = load ptr, ptr %82, align 8, !tbaa !306
  %84 = tail call i64 @_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcyNS1_14digit_groupingIcEEEET_S7_T1_iiT0_RKT2_(i64 %45, i64 noundef %72, i32 noundef %75, i32 noundef %78, i8 noundef %81, ptr noundef nonnull align 8 dereferenceable(48) %83)
  %85 = getelementptr inbounds nuw i8, ptr %4, i64 48
  %86 = load ptr, ptr %85, align 8, !tbaa !307
  %87 = load i32, ptr %86, align 4, !tbaa !11
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %114

89:                                               ; preds = %69
  %90 = getelementptr inbounds nuw i8, ptr %4, i64 56
  %91 = load ptr, ptr %90, align 8, !tbaa !308
  %92 = inttoptr i64 %84 to ptr
  %93 = getelementptr inbounds nuw i8, ptr %92, i64 8
  %94 = getelementptr inbounds nuw i8, ptr %92, i64 16
  %95 = getelementptr inbounds nuw i8, ptr %92, i64 24
  br label %96

96:                                               ; preds = %107, %89
  %97 = phi i32 [ 0, %89 ], [ %112, %107 ]
  %98 = load i8, ptr %91, align 1, !tbaa !10
  %99 = load i64, ptr %93, align 8, !tbaa !37
  %100 = add i64 %99, 1
  %101 = load i64, ptr %94, align 8, !tbaa !18
  %102 = icmp ugt i64 %100, %101
  br i1 %102, label %103, label %107

103:                                              ; preds = %96
  %104 = load ptr, ptr %95, align 8, !tbaa !13
  tail call void %104(ptr noundef nonnull align 8 dereferenceable(32) %92, i64 noundef %100)
  %105 = load i64, ptr %93, align 8, !tbaa !37
  %106 = add i64 %105, 1
  br label %107

107:                                              ; preds = %103, %96
  %108 = phi i64 [ %100, %96 ], [ %106, %103 ]
  %109 = phi i64 [ %99, %96 ], [ %105, %103 ]
  %110 = load ptr, ptr %92, align 8, !tbaa !17
  store i64 %108, ptr %93, align 8, !tbaa !37
  %111 = getelementptr inbounds nuw i8, ptr %110, i64 %109
  store i8 %98, ptr %111, align 1, !tbaa !10
  %112 = add nuw nsw i32 %97, 1
  %113 = icmp eq i32 %112, %87
  br i1 %113, label %114, label %96, !llvm.loop !225

114:                                              ; preds = %107, %69
  %115 = icmp eq i64 %12, %21
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %84, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ %117, %116 ], [ %84, %114 ]
  ret i64 %119
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcyNS1_14digit_groupingIcEEEET_S7_T1_iiT0_RKT2_(i64 %0, i64 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4, ptr noundef nonnull align 8 dereferenceable(48) %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca [21 x i8], align 16
  %8 = alloca [21 x i8], align 16
  %9 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %10 = alloca %"class.fmt::v11::basic_string_view", align 8
  %11 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %12 = load i8, ptr %11, align 8
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds nuw i8, ptr %5, i64 32
  %16 = load i64, ptr %15, align 8
  %17 = lshr i8 %12, 1
  %18 = zext nneg i8 %17 to i64
  %19 = select i1 %14, i64 %18, i64 %16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 21, ptr nonnull %8) #30
  %22 = call noundef ptr @_ZN3fmt3v116detail17write_significandIcyTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef nonnull %8, i64 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4)
  %23 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %8, ptr noundef %22, i64 %0)
  call void @llvm.lifetime.end.p0(i64 21, ptr nonnull %8) #30
  br label %59

24:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %9) #30
  %25 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %26 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %27 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 0, ptr %27, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %26, align 8, !tbaa !13
  %28 = getelementptr inbounds nuw i8, ptr %9, i64 32
  store ptr %28, ptr %9, align 8, !tbaa !17
  store i64 500, ptr %25, align 8, !tbaa !18
  call void @llvm.lifetime.start.p0(i64 21, ptr nonnull %7) #30
  %29 = invoke noundef ptr @_ZN3fmt3v116detail17write_significandIcyTnNSt3__19enable_ifIXsr3std11is_integralIT0_EE5valueEiE4typeELi0EEEPT_S9_S5_iiS8_(ptr noundef nonnull %7, i64 noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4)
          to label %30 unwind label %53

30:                                               ; preds = %24
  %31 = ptrtoint ptr %9 to i64
  %32 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %7, ptr noundef %29, i64 %31)
          to label %33 unwind label %53

33:                                               ; preds = %30
  call void @llvm.lifetime.end.p0(i64 21, ptr nonnull %7) #30
  %34 = icmp sgt i32 %3, -1
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %36 unwind label %53

36:                                               ; preds = %35
  unreachable

37:                                               ; preds = %33
  %38 = load ptr, ptr %9, align 8, !tbaa !17
  %39 = zext nneg i32 %3 to i64
  store ptr %38, ptr %10, align 8, !tbaa !38
  %40 = getelementptr inbounds nuw i8, ptr %10, i64 8
  store i64 %39, ptr %40, align 8, !tbaa !39
  %41 = invoke i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %5, i64 %0, ptr noundef nonnull %10)
          to label %42 unwind label %53

42:                                               ; preds = %37
  %43 = load ptr, ptr %9, align 8, !tbaa !17
  %44 = getelementptr inbounds nuw i8, ptr %43, i64 %39
  %45 = load i64, ptr %27, align 8, !tbaa !37
  %46 = getelementptr inbounds nuw i8, ptr %43, i64 %45
  %47 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef %44, ptr noundef %46, i64 %0)
          to label %48 unwind label %53

48:                                               ; preds = %42
  %49 = load ptr, ptr %9, align 8, !tbaa !17
  %50 = icmp eq ptr %49, %28
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @free(ptr noundef %49)
  br label %52

52:                                               ; preds = %48, %51
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  br label %59

53:                                               ; preds = %35, %30, %24, %42, %37
  %54 = landingpad { ptr, i32 }
          cleanup
  %55 = load ptr, ptr %9, align 8, !tbaa !17
  %56 = icmp eq ptr %55, %28
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @free(ptr noundef %55)
  br label %58

58:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  resume { ptr, i32 } %54

59:                                               ; preds = %52, %21
  %60 = phi i64 [ %47, %52 ], [ %23, %21 ]
  ret i64 %60
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SC_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESD_SD_SI_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(56) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_(ptr noundef nonnull align 8 dereferenceable(56) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_(ptr noundef nonnull align 8 dereferenceable(56) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load ptr, ptr %0, align 8, !tbaa !309
  %5 = load i32, ptr %4, align 4, !tbaa !201
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, 1
  %31 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %32 = load i64, ptr %31, align 8, !tbaa !18
  %33 = icmp ugt i64 %30, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %27
  %35 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  tail call void %36(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %30)
  %37 = load i64, ptr %28, align 8, !tbaa !37
  %38 = add i64 %37, 1
  br label %39

39:                                               ; preds = %27, %34
  %40 = phi i64 [ %30, %27 ], [ %38, %34 ]
  %41 = phi i64 [ %29, %27 ], [ %37, %34 ]
  %42 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %40, ptr %28, align 8, !tbaa !37
  %43 = getelementptr inbounds nuw i8, ptr %42, i64 %41
  store i8 48, ptr %43, align 1, !tbaa !10
  %44 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %45 = load ptr, ptr %44, align 8, !tbaa !311
  %46 = load i8, ptr %45, align 1, !tbaa !222, !range !51, !noundef !52
  %47 = trunc nuw i8 %46 to i1
  br i1 %47, label %48, label %100

48:                                               ; preds = %39
  %49 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %50 = load ptr, ptr %49, align 8, !tbaa !312
  %51 = load i8, ptr %50, align 1, !tbaa !10
  %52 = load i64, ptr %28, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = load i64, ptr %31, align 8, !tbaa !18
  %55 = icmp ugt i64 %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %48
  %57 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %58 = load ptr, ptr %57, align 8, !tbaa !13
  tail call void %58(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %53)
  %59 = load i64, ptr %28, align 8, !tbaa !37
  %60 = add i64 %59, 1
  br label %61

61:                                               ; preds = %48, %56
  %62 = phi i64 [ %53, %48 ], [ %60, %56 ]
  %63 = phi i64 [ %52, %48 ], [ %59, %56 ]
  %64 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %62, ptr %28, align 8, !tbaa !37
  %65 = getelementptr inbounds nuw i8, ptr %64, i64 %63
  store i8 %51, ptr %65, align 1, !tbaa !10
  %66 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %67 = load ptr, ptr %66, align 8, !tbaa !313
  %68 = load i32, ptr %67, align 4, !tbaa !11
  %69 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %70 = load ptr, ptr %69, align 8, !tbaa !314
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %72, label %92

72:                                               ; preds = %61
  %73 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %74

74:                                               ; preds = %85, %72
  %75 = phi i32 [ 0, %72 ], [ %90, %85 ]
  %76 = load i8, ptr %70, align 1, !tbaa !10
  %77 = load i64, ptr %28, align 8, !tbaa !37
  %78 = add i64 %77, 1
  %79 = load i64, ptr %31, align 8, !tbaa !18
  %80 = icmp ugt i64 %78, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = load ptr, ptr %73, align 8, !tbaa !13
  tail call void %82(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %78)
  %83 = load i64, ptr %28, align 8, !tbaa !37
  %84 = add i64 %83, 1
  br label %85

85:                                               ; preds = %81, %74
  %86 = phi i64 [ %78, %74 ], [ %84, %81 ]
  %87 = phi i64 [ %77, %74 ], [ %83, %81 ]
  %88 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %86, ptr %28, align 8, !tbaa !37
  %89 = getelementptr inbounds nuw i8, ptr %88, i64 %87
  store i8 %76, ptr %89, align 1, !tbaa !10
  %90 = add nuw nsw i32 %75, 1
  %91 = icmp eq i32 %90, %68
  br i1 %91, label %92, label %74, !llvm.loop !225

92:                                               ; preds = %85, %61
  %93 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %94 = load ptr, ptr %93, align 8, !tbaa !315
  %95 = load i64, ptr %94, align 8, !tbaa !20
  %96 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %97 = load ptr, ptr %96, align 8, !tbaa !316
  %98 = load i32, ptr %97, align 4, !tbaa !11
  %99 = tail call i64 @_ZN3fmt3v116detail14format_decimalIcyNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %1, i64 noundef %95, i32 noundef %98)
  br label %100

100:                                              ; preds = %39, %92
  %101 = phi i64 [ %99, %92 ], [ %1, %39 ]
  ret i64 %101
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEeEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %0, ptr noundef %1, ptr noundef %2, i64 %3) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %5 = alloca %class.anon.45, align 8
  %6 = alloca %class.anon.30, align 8
  %7 = alloca %"struct.fmt::v11::format_specs", align 4
  %8 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %9 = alloca %"struct.fmt::v11::format_specs", align 4
  %10 = alloca x86_fp80, align 16
  %11 = alloca x86_fp80, align 16
  %12 = alloca %"struct.fmt::v11::detail::big_decimal_fp", align 8
  %13 = inttoptr i64 %0 to ptr
  %14 = load x86_fp80, ptr %1, align 16, !tbaa !57
  %15 = bitcast x86_fp80 %14 to i80
  %16 = icmp slt i80 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %4
  %18 = load i32, ptr %2, align 4, !tbaa !53
  %19 = lshr i32 %18, 10
  %20 = and i32 %19, 3
  br label %21

21:                                               ; preds = %4, %17
  %22 = phi i32 [ %20, %17 ], [ 1, %4 ]
  %23 = tail call x86_fp80 @llvm.fabs.f80(x86_fp80 %14)
  %24 = fcmp ueq x86_fp80 %23, 0xK7FFF8000000000000000
  br i1 %24, label %25, label %45

25:                                               ; preds = %21
  %26 = fcmp uno x86_fp80 %14, 0xK00000000000000000000
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 16, i1 false)
  %27 = load i32, ptr %7, align 4, !tbaa !53
  %28 = and i32 %27, 229376
  %29 = icmp eq i32 %28, 32768
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = getelementptr inbounds nuw i8, ptr %7, i64 4
  %32 = load i8, ptr %31, align 4, !tbaa !10
  %33 = icmp eq i8 %32, 48
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  store i8 32, ptr %31, align 4, !tbaa !10
  br label %35

35:                                               ; preds = %25, %30, %34
  %36 = and i32 %27, 4096
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, ptr @.str.28, ptr @.str.27
  %39 = select i1 %37, ptr @.str.30, ptr @.str.29
  %40 = select i1 %26, ptr %38, ptr %39
  %41 = icmp eq i32 %22, 0
  %42 = select i1 %41, i64 3, i64 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i32 %22, ptr %6, align 8, !tbaa !193
  %43 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store ptr %40, ptr %43, align 8, !tbaa !196
  %44 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %7, i64 noundef %42, i64 noundef %42, ptr noundef nonnull align 8 dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %149

45:                                               ; preds = %21
  %46 = load i32, ptr %2, align 4, !tbaa !53
  %47 = and i32 %46, 56
  %48 = icmp eq i32 %47, 32
  %49 = icmp ne i32 %22, 0
  %50 = and i1 %49, %48
  br i1 %50, label %51, label %76

51:                                               ; preds = %45
  %52 = shl nuw nsw i32 %22, 3
  %53 = lshr i32 539700480, %52
  %54 = trunc i32 %53 to i8
  %55 = getelementptr inbounds nuw i8, ptr %13, i64 8
  %56 = load i64, ptr %55, align 8, !tbaa !37
  %57 = add i64 %56, 1
  %58 = getelementptr inbounds nuw i8, ptr %13, i64 16
  %59 = load i64, ptr %58, align 8, !tbaa !18
  %60 = icmp ugt i64 %57, %59
  br i1 %60, label %61, label %66

61:                                               ; preds = %51
  %62 = getelementptr inbounds nuw i8, ptr %13, i64 24
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  tail call void %63(ptr noundef nonnull align 8 dereferenceable(32) %13, i64 noundef %57)
  %64 = load i64, ptr %55, align 8, !tbaa !37
  %65 = add i64 %64, 1
  br label %66

66:                                               ; preds = %51, %61
  %67 = phi i64 [ %57, %51 ], [ %65, %61 ]
  %68 = phi i64 [ %56, %51 ], [ %64, %61 ]
  %69 = load ptr, ptr %13, align 8, !tbaa !17
  store i64 %67, ptr %55, align 8, !tbaa !37
  %70 = getelementptr inbounds nuw i8, ptr %69, i64 %68
  store i8 %54, ptr %70, align 1, !tbaa !10
  %71 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %72 = load i32, ptr %71, align 4, !tbaa !125
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  %75 = add nsw i32 %72, -1
  store i32 %75, ptr %71, align 4, !tbaa !125
  br label %76

76:                                               ; preds = %66, %74, %45
  %77 = phi i32 [ 0, %74 ], [ 0, %66 ], [ %22, %45 ]
  %78 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %79 = load i32, ptr %78, align 4, !tbaa !55
  %80 = icmp slt i32 %79, 0
  %81 = load i32, ptr %2, align 4, !tbaa !53
  %82 = and i32 %81, 7
  %83 = icmp eq i32 %82, 0
  %84 = select i1 %83, i32 %79, i32 6
  %85 = select i1 %80, i32 %84, i32 %79
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %8) #30
  %86 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %87 = getelementptr inbounds nuw i8, ptr %8, i64 24
  %88 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 0, ptr %88, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %87, align 8, !tbaa !13
  %89 = getelementptr inbounds nuw i8, ptr %8, i64 32
  store ptr %89, ptr %8, align 8, !tbaa !17
  store i64 500, ptr %86, align 8, !tbaa !18
  %90 = trunc i32 %81 to i8
  %91 = and i8 %90, 7
  switch i8 %91, label %120 [
    i8 4, label %92
    i8 1, label %107
    i8 2, label %116
  ]

92:                                               ; preds = %76
  %93 = icmp eq i32 %77, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %92
  %95 = shl nuw nsw i32 %77, 3
  %96 = lshr i32 539700480, %95
  %97 = trunc i32 %96 to i8
  store i64 1, ptr %88, align 8, !tbaa !37
  store i8 %97, ptr %89, align 8, !tbaa !10
  br label %98

98:                                               ; preds = %94, %92
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %9, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #30
  store x86_fp80 %14, ptr %10, align 16, !tbaa !57
  invoke void @_ZN3fmt3v116detail15format_hexfloatIeTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE(ptr noundef nonnull %10, ptr noundef nonnull %9, ptr noundef nonnull align 8 dereferenceable(32) %8)
          to label %99 unwind label %105

99:                                               ; preds = %98
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #30
  %100 = load ptr, ptr %8, align 8, !tbaa !17
  %101 = load i64, ptr %88, align 8, !tbaa !37
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #30
  store ptr %100, ptr %5, align 8, !tbaa !19
  %102 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 %101, ptr %102, align 8, !tbaa !20
  %103 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_2ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %101, i64 noundef %101, ptr noundef nonnull align 8 dereferenceable(16) %5)
          to label %104 unwind label %105

104:                                              ; preds = %99
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #30
  br label %137

105:                                              ; preds = %99, %109, %98
  %106 = landingpad { ptr, i32 }
          cleanup
  br label %143

107:                                              ; preds = %76
  %108 = icmp eq i32 %85, 2147483647
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  invoke void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.37) #31
          to label %110 unwind label %105

110:                                              ; preds = %109
  unreachable

111:                                              ; preds = %107
  %112 = add nsw i32 %85, 1
  %113 = icmp eq i32 %79, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %111
  %115 = or i32 %81, 8192
  store i32 %115, ptr %2, align 4, !tbaa !53
  br label %122

116:                                              ; preds = %76
  %117 = icmp eq i32 %79, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %116
  %119 = or i32 %81, 8192
  store i32 %119, ptr %2, align 4, !tbaa !53
  br label %122

120:                                              ; preds = %76
  %121 = call i32 @llvm.umax.i32(i32 %85, i32 1)
  br label %122

122:                                              ; preds = %120, %118, %116, %111, %114
  %123 = phi i32 [ %112, %114 ], [ %112, %111 ], [ %85, %118 ], [ %85, %116 ], [ %121, %120 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #30
  store x86_fp80 %14, ptr %11, align 16, !tbaa !57
  %124 = invoke noundef i32 @_ZN3fmt3v116detail12format_floatIeEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE(ptr noundef nonnull %11, i32 noundef %123, ptr noundef nonnull align 4 dereferenceable(16) %2, i1 noundef zeroext false, ptr noundef nonnull align 8 dereferenceable(32) %8)
          to label %125 unwind label %133

125:                                              ; preds = %122
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #30
  store i32 %123, ptr %78, align 4, !tbaa !55
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #30
  %126 = load ptr, ptr %8, align 8, !tbaa !17
  store ptr %126, ptr %12, align 8, !tbaa !317
  %127 = getelementptr inbounds nuw i8, ptr %12, i64 8
  %128 = load i64, ptr %88, align 8, !tbaa !37
  %129 = trunc i64 %128 to i32
  store i32 %129, ptr %127, align 8, !tbaa !319
  %130 = getelementptr inbounds nuw i8, ptr %12, i64 12
  store i32 %124, ptr %130, align 4, !tbaa !320
  %131 = invoke i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %77, i32 noundef 16, i64 %3)
          to label %132 unwind label %135

132:                                              ; preds = %125
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #30
  br label %137

133:                                              ; preds = %122
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %143

135:                                              ; preds = %125
  %136 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #30
  br label %143

137:                                              ; preds = %104, %132
  %138 = phi i64 [ %131, %132 ], [ %103, %104 ]
  %139 = load ptr, ptr %8, align 8, !tbaa !17
  %140 = icmp eq ptr %139, %89
  br i1 %140, label %142, label %141

141:                                              ; preds = %137
  call void @free(ptr noundef %139)
  br label %142

142:                                              ; preds = %137, %141
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  br label %149

143:                                              ; preds = %133, %135, %105
  %144 = phi { ptr, i32 } [ %106, %105 ], [ %136, %135 ], [ %134, %133 ]
  %145 = load ptr, ptr %8, align 8, !tbaa !17
  %146 = icmp eq ptr %145, %89
  br i1 %146, label %148, label %147

147:                                              ; preds = %143
  call void @free(ptr noundef %145)
  br label %148

148:                                              ; preds = %143, %147
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  resume { ptr, i32 } %144

149:                                              ; preds = %142, %35
  %150 = phi i64 [ %138, %142 ], [ %44, %35 ]
  ret i64 %150
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail15format_hexfloatIeTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #25 comdat {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca [32 x i8], align 16
  %6 = load x86_fp80, ptr %0, align 16, !tbaa !57
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  store x86_fp80 %6, ptr %4, align 16, !tbaa !57
  %7 = load <2 x i64>, ptr %4, align 16
  %8 = bitcast <2 x i64> %7 to i128
  %9 = and i128 %8, 18446744073709551615
  %10 = bitcast <2 x i64> %7 to <4 x i32>
  %11 = extractelement <4 x i32> %10, i64 2
  %12 = and i32 %11, 32767
  %13 = tail call i32 @llvm.umax.i32(i32 %12, i32 1)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  %14 = add nsw i32 %13, -16383
  %15 = lshr i128 %9, 60
  %16 = trunc nuw nsw i128 %15 to i32
  %17 = icmp samesign ugt i32 %16, 1
  %18 = tail call range(i32 0, 33) i32 @llvm.ctlz.i32(i32 %16, i1 true)
  %19 = add nuw nsw i32 %18, -31
  %20 = select i1 %17, i32 %19, i32 0
  %21 = add nsw i32 %14, %20
  %22 = getelementptr inbounds nuw i8, ptr %1, i64 12
  %23 = load i32, ptr %22, align 4, !tbaa !55
  %24 = icmp ult i32 %23, 15
  br i1 %24, label %25, label %46

25:                                               ; preds = %3
  %26 = shl nuw nsw i32 %23, 2
  %27 = sub nuw nsw i32 56, %26
  %28 = zext nneg i32 %27 to i128
  %29 = shl nuw nsw i128 8, %28
  %30 = and i128 %29, %8
  %31 = icmp eq i128 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %25
  %33 = sub nuw nsw i32 60, %26
  %34 = zext nneg i32 %33 to i128
  %35 = shl nuw nsw i128 1, %34
  %36 = add nuw nsw i128 %35, %9
  %37 = sub nsw i128 0, %35
  %38 = and i128 %36, %37
  br label %39

39:                                               ; preds = %32, %25
  %40 = phi i128 [ %9, %25 ], [ %38, %32 ]
  %41 = and i128 %40, 18446744073709551616
  %42 = icmp eq i128 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = lshr i128 %40, 4
  %45 = add nsw i32 %21, 4
  br label %46

46:                                               ; preds = %39, %43, %3
  %47 = phi i128 [ %9, %3 ], [ %40, %39 ], [ %44, %43 ]
  %48 = phi i32 [ %21, %3 ], [ %21, %39 ], [ %45, %43 ]
  %49 = phi i32 [ 15, %3 ], [ %23, %39 ], [ %23, %43 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %5, i8 48, i64 32, i1 false)
  %50 = load i32, ptr %1, align 4, !tbaa !53
  %51 = and i32 %50, 4096
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %54 = select i1 %52, ptr @.str.24, ptr @.str.23
  br label %55

55:                                               ; preds = %55, %46
  %56 = phi i128 [ %63, %55 ], [ %47, %46 ]
  %57 = phi ptr [ %62, %55 ], [ %53, %46 ]
  %58 = trunc i128 %56 to i64
  %59 = and i64 %58, 15
  %60 = getelementptr inbounds nuw i8, ptr %54, i64 %59
  %61 = load i8, ptr %60, align 1, !tbaa !10
  %62 = getelementptr inbounds i8, ptr %57, i64 -1
  store i8 %61, ptr %62, align 1, !tbaa !10
  %63 = lshr i128 %56, 4
  %64 = icmp ult i128 %56, 16
  br i1 %64, label %65, label %55, !llvm.loop !159

65:                                               ; preds = %55
  %66 = icmp sgt i32 %49, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %65, %73
  %68 = phi i32 [ %74, %73 ], [ %49, %65 ]
  %69 = zext nneg i32 %68 to i64
  %70 = getelementptr inbounds nuw [32 x i8], ptr %5, i64 0, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !10
  %72 = icmp ne i8 %71, 48
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = add nsw i32 %68, -1
  %75 = icmp sgt i32 %68, 1
  br i1 %75, label %67, label %76, !llvm.loop !321

76:                                               ; preds = %67, %73, %65
  %77 = phi i32 [ %49, %65 ], [ 0, %73 ], [ %68, %67 ]
  %78 = phi i1 [ false, %65 ], [ %72, %73 ], [ %72, %67 ]
  %79 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %80 = load i64, ptr %79, align 8, !tbaa !37
  %81 = add i64 %80, 1
  %82 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %83 = load i64, ptr %82, align 8, !tbaa !18
  %84 = icmp ugt i64 %81, %83
  br i1 %84, label %85, label %90

85:                                               ; preds = %76
  %86 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  tail call void %87(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %81)
  %88 = load i64, ptr %79, align 8, !tbaa !37
  %89 = add i64 %88, 1
  br label %90

90:                                               ; preds = %76, %85
  %91 = phi i64 [ %81, %76 ], [ %89, %85 ]
  %92 = phi i64 [ %80, %76 ], [ %88, %85 ]
  %93 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %91, ptr %79, align 8, !tbaa !37
  %94 = getelementptr inbounds nuw i8, ptr %93, i64 %92
  store i8 48, ptr %94, align 1, !tbaa !10
  %95 = load i32, ptr %1, align 4, !tbaa !53
  %96 = and i32 %95, 4096
  %97 = icmp eq i32 %96, 0
  %98 = select i1 %97, i8 120, i8 88
  %99 = load i64, ptr %79, align 8, !tbaa !37
  %100 = add i64 %99, 1
  %101 = load i64, ptr %82, align 8, !tbaa !18
  %102 = icmp ugt i64 %100, %101
  br i1 %102, label %103, label %108

103:                                              ; preds = %90
  %104 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %105 = load ptr, ptr %104, align 8, !tbaa !13
  tail call void %105(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %100)
  %106 = load i64, ptr %79, align 8, !tbaa !37
  %107 = add i64 %106, 1
  br label %108

108:                                              ; preds = %90, %103
  %109 = phi i64 [ %100, %90 ], [ %107, %103 ]
  %110 = phi i64 [ %99, %90 ], [ %106, %103 ]
  %111 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %109, ptr %79, align 8, !tbaa !37
  %112 = getelementptr inbounds nuw i8, ptr %111, i64 %110
  store i8 %98, ptr %112, align 1, !tbaa !10
  %113 = load i64, ptr %79, align 8, !tbaa !37
  %114 = add i64 %113, 1
  %115 = load i64, ptr %82, align 8, !tbaa !18
  %116 = icmp ugt i64 %114, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %119 = load ptr, ptr %118, align 8, !tbaa !13
  tail call void %119(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %114)
  %120 = load i64, ptr %79, align 8, !tbaa !37
  %121 = add i64 %120, 1
  br label %122

122:                                              ; preds = %108, %117
  %123 = phi i64 [ %114, %108 ], [ %121, %117 ]
  %124 = phi i64 [ %113, %108 ], [ %120, %117 ]
  %125 = load i8, ptr %5, align 16, !tbaa !10
  %126 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %123, ptr %79, align 8, !tbaa !37
  %127 = getelementptr inbounds nuw i8, ptr %126, i64 %124
  store i8 %125, ptr %127, align 1, !tbaa !10
  %128 = load i32, ptr %1, align 4, !tbaa !53
  %129 = and i32 %128, 8192
  %130 = icmp ne i32 %129, 0
  %131 = or i1 %78, %130
  br i1 %131, label %135, label %132

132:                                              ; preds = %122
  %133 = load i32, ptr %22, align 4, !tbaa !55
  %134 = icmp slt i32 %77, %133
  br i1 %134, label %135, label %150

135:                                              ; preds = %132, %122
  %136 = load i64, ptr %79, align 8, !tbaa !37
  %137 = add i64 %136, 1
  %138 = load i64, ptr %82, align 8, !tbaa !18
  %139 = icmp ugt i64 %137, %138
  br i1 %139, label %140, label %145

140:                                              ; preds = %135
  %141 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %142 = load ptr, ptr %141, align 8, !tbaa !13
  tail call void %142(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %137)
  %143 = load i64, ptr %79, align 8, !tbaa !37
  %144 = add i64 %143, 1
  br label %145

145:                                              ; preds = %135, %140
  %146 = phi i64 [ %137, %135 ], [ %144, %140 ]
  %147 = phi i64 [ %136, %135 ], [ %143, %140 ]
  %148 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %146, ptr %79, align 8, !tbaa !37
  %149 = getelementptr inbounds nuw i8, ptr %148, i64 %147
  store i8 46, ptr %149, align 1, !tbaa !10
  br label %150

150:                                              ; preds = %145, %132
  %151 = sext i32 %77 to i64
  %152 = getelementptr i8, ptr %5, i64 %151
  %153 = getelementptr i8, ptr %152, i64 1
  %154 = icmp eq i32 %77, 0
  br i1 %154, label %263, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds nuw i8, ptr %5, i64 1
  %157 = ptrtoint ptr %153 to i64
  %158 = getelementptr inbounds nuw i8, ptr %2, i64 24
  br label %159

159:                                              ; preds = %239, %155
  %160 = phi ptr [ %156, %155 ], [ %242, %239 ]
  %161 = ptrtoint ptr %160 to i64
  %162 = sub i64 %157, %161
  %163 = icmp sgt i64 %162, -1
  br i1 %163, label %165, label %164

164:                                              ; preds = %159
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

165:                                              ; preds = %159
  %166 = load i64, ptr %79, align 8, !tbaa !37
  %167 = add i64 %166, %162
  %168 = load i64, ptr %82, align 8, !tbaa !18
  %169 = icmp ugt i64 %167, %168
  br i1 %169, label %170, label %174

170:                                              ; preds = %165
  %171 = load ptr, ptr %158, align 8, !tbaa !13
  call void %171(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %167)
  %172 = load i64, ptr %82, align 8, !tbaa !18
  %173 = load i64, ptr %79, align 8, !tbaa !37
  br label %174

174:                                              ; preds = %170, %165
  %175 = phi i64 [ %166, %165 ], [ %173, %170 ]
  %176 = phi i64 [ %168, %165 ], [ %172, %170 ]
  %177 = sub i64 %176, %175
  %178 = call i64 @llvm.umin.i64(i64 %177, i64 %162)
  %179 = load ptr, ptr %2, align 8, !tbaa !17
  %180 = ptrtoint ptr %179 to i64
  %181 = getelementptr inbounds nuw i8, ptr %179, i64 %175
  %182 = icmp eq i64 %178, 0
  br i1 %182, label %239, label %183

183:                                              ; preds = %174
  %184 = icmp ult i64 %178, 4
  br i1 %184, label %185, label %202

185:                                              ; preds = %222, %235, %202, %183
  %186 = phi i64 [ %209, %222 ], [ 0, %183 ], [ 0, %202 ], [ %227, %235 ]
  %187 = and i64 %178, 3
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %198, label %189

189:                                              ; preds = %185, %189
  %190 = phi i64 [ %195, %189 ], [ %186, %185 ]
  %191 = phi i64 [ %196, %189 ], [ 0, %185 ]
  %192 = getelementptr inbounds nuw i8, ptr %160, i64 %190
  %193 = load i8, ptr %192, align 1, !tbaa !10
  %194 = getelementptr inbounds nuw i8, ptr %181, i64 %190
  store i8 %193, ptr %194, align 1, !tbaa !10
  %195 = add nuw i64 %190, 1
  %196 = add i64 %191, 1
  %197 = icmp eq i64 %196, %187
  br i1 %197, label %198, label %189, !llvm.loop !322

198:                                              ; preds = %189, %185
  %199 = phi i64 [ %186, %185 ], [ %195, %189 ]
  %200 = sub nsw i64 %186, %178
  %201 = icmp ugt i64 %200, -4
  br i1 %201, label %237, label %244

202:                                              ; preds = %183
  %203 = add i64 %175, %180
  %204 = sub i64 %203, %161
  %205 = icmp ult i64 %204, 32
  br i1 %205, label %185, label %206

206:                                              ; preds = %202
  %207 = icmp ult i64 %178, 32
  br i1 %207, label %225, label %208

208:                                              ; preds = %206
  %209 = and i64 %178, 9223372036854775776
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %218, %210 ]
  %212 = getelementptr inbounds nuw i8, ptr %160, i64 %211
  %213 = getelementptr inbounds nuw i8, ptr %212, i64 16
  %214 = load <16 x i8>, ptr %212, align 1, !tbaa !10
  %215 = load <16 x i8>, ptr %213, align 1, !tbaa !10
  %216 = getelementptr inbounds nuw i8, ptr %181, i64 %211
  %217 = getelementptr inbounds nuw i8, ptr %216, i64 16
  store <16 x i8> %214, ptr %216, align 1, !tbaa !10
  store <16 x i8> %215, ptr %217, align 1, !tbaa !10
  %218 = add nuw i64 %211, 32
  %219 = icmp eq i64 %218, %209
  br i1 %219, label %220, label %210, !llvm.loop !323

220:                                              ; preds = %210
  %221 = icmp eq i64 %178, %209
  br i1 %221, label %237, label %222

222:                                              ; preds = %220
  %223 = and i64 %178, 28
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %185, label %225

225:                                              ; preds = %222, %206
  %226 = phi i64 [ %209, %222 ], [ 0, %206 ]
  %227 = and i64 %178, 9223372036854775804
  br label %228

228:                                              ; preds = %228, %225
  %229 = phi i64 [ %226, %225 ], [ %233, %228 ]
  %230 = getelementptr inbounds nuw i8, ptr %160, i64 %229
  %231 = load <4 x i8>, ptr %230, align 1, !tbaa !10
  %232 = getelementptr inbounds nuw i8, ptr %181, i64 %229
  store <4 x i8> %231, ptr %232, align 1, !tbaa !10
  %233 = add nuw i64 %229, 4
  %234 = icmp eq i64 %233, %227
  br i1 %234, label %235, label %228, !llvm.loop !324

235:                                              ; preds = %228
  %236 = icmp eq i64 %178, %227
  br i1 %236, label %237, label %185

237:                                              ; preds = %198, %244, %235, %220
  %238 = load i64, ptr %79, align 8, !tbaa !37
  br label %239

239:                                              ; preds = %237, %174
  %240 = phi i64 [ %238, %237 ], [ %175, %174 ]
  %241 = add i64 %240, %178
  store i64 %241, ptr %79, align 8, !tbaa !37
  %242 = getelementptr inbounds nuw i8, ptr %160, i64 %178
  %243 = icmp eq ptr %242, %153
  br i1 %243, label %263, label %159, !llvm.loop !77

244:                                              ; preds = %198, %244
  %245 = phi i64 [ %261, %244 ], [ %199, %198 ]
  %246 = getelementptr inbounds nuw i8, ptr %160, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !10
  %248 = getelementptr inbounds nuw i8, ptr %181, i64 %245
  store i8 %247, ptr %248, align 1, !tbaa !10
  %249 = add nuw i64 %245, 1
  %250 = getelementptr inbounds nuw i8, ptr %160, i64 %249
  %251 = load i8, ptr %250, align 1, !tbaa !10
  %252 = getelementptr inbounds nuw i8, ptr %181, i64 %249
  store i8 %251, ptr %252, align 1, !tbaa !10
  %253 = add nuw i64 %245, 2
  %254 = getelementptr inbounds nuw i8, ptr %160, i64 %253
  %255 = load i8, ptr %254, align 1, !tbaa !10
  %256 = getelementptr inbounds nuw i8, ptr %181, i64 %253
  store i8 %255, ptr %256, align 1, !tbaa !10
  %257 = add nuw i64 %245, 3
  %258 = getelementptr inbounds nuw i8, ptr %160, i64 %257
  %259 = load i8, ptr %258, align 1, !tbaa !10
  %260 = getelementptr inbounds nuw i8, ptr %181, i64 %257
  store i8 %259, ptr %260, align 1, !tbaa !10
  %261 = add nuw i64 %245, 4
  %262 = icmp eq i64 %261, %178
  br i1 %262, label %237, label %244, !llvm.loop !325

263:                                              ; preds = %239, %150
  %264 = load i32, ptr %22, align 4, !tbaa !55
  %265 = icmp slt i32 %77, %264
  br i1 %265, label %266, label %286

266:                                              ; preds = %263
  %267 = getelementptr inbounds nuw i8, ptr %2, i64 24
  br label %268

268:                                              ; preds = %266, %278
  %269 = phi i32 [ %77, %266 ], [ %283, %278 ]
  %270 = load i64, ptr %79, align 8, !tbaa !37
  %271 = add i64 %270, 1
  %272 = load i64, ptr %82, align 8, !tbaa !18
  %273 = icmp ugt i64 %271, %272
  br i1 %273, label %274, label %278

274:                                              ; preds = %268
  %275 = load ptr, ptr %267, align 8, !tbaa !13
  call void %275(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %271)
  %276 = load i64, ptr %79, align 8, !tbaa !37
  %277 = add i64 %276, 1
  br label %278

278:                                              ; preds = %268, %274
  %279 = phi i64 [ %271, %268 ], [ %277, %274 ]
  %280 = phi i64 [ %270, %268 ], [ %276, %274 ]
  %281 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %279, ptr %79, align 8, !tbaa !37
  %282 = getelementptr inbounds nuw i8, ptr %281, i64 %280
  store i8 48, ptr %282, align 1, !tbaa !10
  %283 = add nsw i32 %269, 1
  %284 = load i32, ptr %22, align 4, !tbaa !55
  %285 = icmp slt i32 %283, %284
  br i1 %285, label %268, label %286, !llvm.loop !326

286:                                              ; preds = %278, %263
  %287 = load i32, ptr %1, align 4, !tbaa !53
  %288 = and i32 %287, 4096
  %289 = icmp eq i32 %288, 0
  %290 = select i1 %289, i8 112, i8 80
  %291 = load i64, ptr %79, align 8, !tbaa !37
  %292 = add i64 %291, 1
  %293 = load i64, ptr %82, align 8, !tbaa !18
  %294 = icmp ugt i64 %292, %293
  br i1 %294, label %295, label %300

295:                                              ; preds = %286
  %296 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %297 = load ptr, ptr %296, align 8, !tbaa !13
  call void %297(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %292)
  %298 = load i64, ptr %79, align 8, !tbaa !37
  %299 = add i64 %298, 1
  br label %300

300:                                              ; preds = %286, %295
  %301 = phi i64 [ %292, %286 ], [ %299, %295 ]
  %302 = phi i64 [ %291, %286 ], [ %298, %295 ]
  %303 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %301, ptr %79, align 8, !tbaa !37
  %304 = getelementptr inbounds nuw i8, ptr %303, i64 %302
  store i8 %290, ptr %304, align 1, !tbaa !10
  %305 = icmp slt i32 %48, 0
  %306 = load i64, ptr %79, align 8, !tbaa !37
  %307 = add i64 %306, 1
  %308 = load i64, ptr %82, align 8, !tbaa !18
  %309 = icmp ugt i64 %307, %308
  br i1 %305, label %310, label %322

310:                                              ; preds = %300
  br i1 %309, label %311, label %316

311:                                              ; preds = %310
  %312 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %313 = load ptr, ptr %312, align 8, !tbaa !13
  call void %313(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %307)
  %314 = load i64, ptr %79, align 8, !tbaa !37
  %315 = add i64 %314, 1
  br label %316

316:                                              ; preds = %310, %311
  %317 = phi i64 [ %307, %310 ], [ %315, %311 ]
  %318 = phi i64 [ %306, %310 ], [ %314, %311 ]
  %319 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %317, ptr %79, align 8, !tbaa !37
  %320 = getelementptr inbounds nuw i8, ptr %319, i64 %318
  store i8 45, ptr %320, align 1, !tbaa !10
  %321 = sub nsw i32 0, %48
  br label %333

322:                                              ; preds = %300
  br i1 %309, label %323, label %328

323:                                              ; preds = %322
  %324 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %325 = load ptr, ptr %324, align 8, !tbaa !13
  call void %325(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %307)
  %326 = load i64, ptr %79, align 8, !tbaa !37
  %327 = add i64 %326, 1
  br label %328

328:                                              ; preds = %322, %323
  %329 = phi i64 [ %307, %322 ], [ %327, %323 ]
  %330 = phi i64 [ %306, %322 ], [ %326, %323 ]
  %331 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %329, ptr %79, align 8, !tbaa !37
  %332 = getelementptr inbounds nuw i8, ptr %331, i64 %330
  store i8 43, ptr %332, align 1, !tbaa !10
  br label %333

333:                                              ; preds = %328, %316
  %334 = phi i32 [ %321, %316 ], [ %48, %328 ]
  %335 = or i32 %334, 1
  %336 = call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %335, i1 true)
  %337 = xor i32 %336, 31
  %338 = zext nneg i32 %337 to i64
  %339 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %338
  %340 = load i64, ptr %339, align 8, !tbaa !20
  %341 = zext nneg i32 %334 to i64
  %342 = add i64 %340, %341
  %343 = lshr i64 %342, 32
  %344 = trunc nuw i64 %343 to i32
  %345 = ptrtoint ptr %2 to i64
  %346 = call i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %345, i32 noundef %334, i32 noundef %344)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #30
  ret void
}

; Function Attrs: inlinehint mustprogress noreturn uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112report_errorEPKc(ptr noundef %0) local_unnamed_addr #6 comdat personality ptr @__gxx_personality_seh0 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 16) #30
  invoke void @_ZN3fmt3v1112format_errorCI2St13runtime_errorEPKc(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef %0)
          to label %3 unwind label %4

3:                                                ; preds = %1
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTIN3fmt3v1112format_errorE, ptr nonnull @_ZNSt13runtime_errorD2Ev) #31
  unreachable

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %2) #30
  resume { ptr, i32 } %5
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3fmt3v116detail12format_floatIeEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE(ptr noundef %0, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(32) %4) local_unnamed_addr #25 comdat {
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca i32, align 4
  %9 = alloca %"struct.fmt::v11::detail::basic_fp", align 16
  %10 = load x86_fp80, ptr %0, align 16, !tbaa !57
  %11 = load i32, ptr %2, align 4, !tbaa !53
  %12 = and i32 %11, 7
  %13 = icmp ne i32 %12, 2
  %14 = fcmp oeq x86_fp80 %10, 0xK00000000000000000000
  br i1 %14, label %15, label %50

15:                                               ; preds = %5
  %16 = icmp slt i32 %1, 1
  %17 = or i1 %16, %13
  br i1 %17, label %18, label %35

18:                                               ; preds = %15
  %19 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %20 = load i64, ptr %19, align 8, !tbaa !37
  %21 = add i64 %20, 1
  %22 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %23 = load i64, ptr %22, align 8, !tbaa !18
  %24 = icmp ugt i64 %21, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %27 = load ptr, ptr %26, align 8, !tbaa !13
  tail call void %27(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %21)
  %28 = load i64, ptr %19, align 8, !tbaa !37
  %29 = add i64 %28, 1
  br label %30

30:                                               ; preds = %18, %25
  %31 = phi i64 [ %21, %18 ], [ %29, %25 ]
  %32 = phi i64 [ %20, %18 ], [ %28, %25 ]
  %33 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %31, ptr %19, align 8, !tbaa !37
  %34 = getelementptr inbounds nuw i8, ptr %33, i64 %32
  store i8 48, ptr %34, align 1, !tbaa !10
  br label %144

35:                                               ; preds = %15
  %36 = zext nneg i32 %1 to i64
  %37 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %38 = load i64, ptr %37, align 8, !tbaa !18
  %39 = icmp ult i64 %38, %36
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  tail call void %42(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %36)
  %43 = load i64, ptr %37, align 8, !tbaa !18
  br label %44

44:                                               ; preds = %40, %35
  %45 = phi i64 [ %38, %35 ], [ %43, %40 ]
  %46 = tail call noundef i64 @llvm.umin.i64(i64 %36, i64 %45)
  %47 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 %46, ptr %47, align 8, !tbaa !37
  %48 = load ptr, ptr %4, align 8, !tbaa !17
  tail call void @llvm.memset.p0.i64(ptr align 1 %48, i8 48, i64 %36, i1 false)
  %49 = sub nsw i32 0, %1
  br label %144

50:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #30
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  store x86_fp80 %10, ptr %7, align 16, !tbaa !57
  %51 = load <2 x i64>, ptr %7, align 16
  %52 = bitcast <2 x i64> %51 to i128
  %53 = bitcast <2 x i64> %51 to <4 x i32>
  %54 = extractelement <4 x i32> %53, i64 2
  %55 = and i32 %54, 32767
  %56 = tail call i32 @llvm.umax.i32(i32 %55, i32 1)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  %57 = lshr i128 %52, 1
  %58 = and i128 %57, 9223372036854775807
  %59 = tail call range(i128 65, 129) i128 @llvm.ctlz.i128(i128 %58, i1 false)
  %60 = trunc nuw nsw i128 %59 to i32
  %61 = sub nsw i32 %56, %60
  %62 = add nsw i32 %61, -16318
  %63 = sitofp i32 %62 to double
  %64 = tail call double @llvm.fmuladd.f64(double %63, double 0x3FD34413509F79FF, double -1.000000e-10)
  %65 = fptosi double %64 to i32
  %66 = sitofp i32 %65 to double
  %67 = fcmp ogt double %64, %66
  %68 = zext i1 %67 to i32
  %69 = add nsw i32 %68, %65
  store i32 %69, ptr %8, align 4, !tbaa !11
  br i1 %3, label %70, label %85

70:                                               ; preds = %50
  %71 = fptrunc x86_fp80 %10 to float
  %72 = bitcast float %71 to i32
  %73 = and i32 %72, 8388607
  %74 = zext nneg i32 %73 to i128
  %75 = and i32 %72, 2139095040
  %76 = icmp eq i32 %75, 0
  %77 = lshr exact i32 %75, 23
  %78 = or disjoint i128 %74, 8388608
  %79 = add nsw i32 %77, -150
  %80 = select i1 %76, i128 %74, i128 %78
  %81 = select i1 %76, i32 -149, i32 %79
  %82 = icmp eq i32 %73, 0
  %83 = icmp samesign ugt i32 %75, 16777215
  %84 = and i1 %82, %83
  br label %97

85:                                               ; preds = %50
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  store x86_fp80 %10, ptr %6, align 16, !tbaa !57
  %86 = load <2 x i64>, ptr %6, align 16
  %87 = bitcast <2 x i64> %86 to i128
  %88 = and i128 %87, 18446744073709551615
  %89 = bitcast <2 x i64> %86 to <4 x i32>
  %90 = extractelement <4 x i32> %89, i64 2
  %91 = and i32 %90, 32767
  %92 = icmp eq i128 %88, 0
  %93 = icmp samesign ugt i32 %91, 1
  %94 = and i1 %92, %93
  %95 = tail call i32 @llvm.umax.i32(i32 %91, i32 1)
  %96 = add nsw i32 %95, -16446
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  br label %97

97:                                               ; preds = %85, %70
  %98 = phi i32 [ %81, %70 ], [ %96, %85 ]
  %99 = phi i128 [ %80, %70 ], [ %88, %85 ]
  %100 = phi i1 [ %84, %70 ], [ %94, %85 ]
  %101 = select i1 %100, i32 3, i32 2
  %102 = or disjoint i32 %101, 4
  %103 = select i1 %13, i32 %101, i32 %102
  %104 = tail call i32 @llvm.smin.i32(i32 %1, i32 767)
  store i128 %99, ptr %9, align 16, !tbaa !49
  %105 = getelementptr inbounds nuw i8, ptr %9, i64 16
  store i32 %98, ptr %105, align 16, !tbaa !11
  call void @_ZN3fmt3v116detail13format_dragonENS1_8basic_fpIoEEjiRNS1_6bufferIcEERi(ptr noundef nonnull %9, i32 noundef %103, i32 noundef %104, ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 4 dereferenceable(4) %8)
  br i1 %13, label %106, label %142

106:                                              ; preds = %97
  %107 = load i32, ptr %2, align 4, !tbaa !53
  %108 = and i32 %107, 8192
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %142

110:                                              ; preds = %106
  %111 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %112 = load i64, ptr %111, align 8, !tbaa !37
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = load i32, ptr %8, align 4
  %116 = load ptr, ptr %4, align 8, !tbaa !17
  br label %117

117:                                              ; preds = %114, %124
  %118 = phi i64 [ %112, %114 ], [ %120, %124 ]
  %119 = phi i32 [ %115, %114 ], [ %125, %124 ]
  %120 = add i64 %118, -1
  %121 = getelementptr inbounds nuw i8, ptr %116, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !10
  %123 = icmp eq i8 %122, 48
  br i1 %123, label %124, label %130

124:                                              ; preds = %117
  %125 = add nsw i32 %119, 1
  store i32 %125, ptr %8, align 4, !tbaa !11
  %126 = icmp eq i64 %120, 0
  br i1 %126, label %127, label %117, !llvm.loop !327

127:                                              ; preds = %124, %110
  %128 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %129 = load i64, ptr %128, align 8, !tbaa !18
  br label %138

130:                                              ; preds = %117
  %131 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %132 = load i64, ptr %131, align 8, !tbaa !18
  %133 = icmp ugt i64 %118, %132
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %136 = load ptr, ptr %135, align 8, !tbaa !13
  call void %136(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %118)
  %137 = load i64, ptr %131, align 8, !tbaa !18
  br label %138

138:                                              ; preds = %127, %130, %134
  %139 = phi i64 [ %118, %130 ], [ %118, %134 ], [ 0, %127 ]
  %140 = phi i64 [ %132, %130 ], [ %137, %134 ], [ %129, %127 ]
  %141 = call noundef i64 @llvm.umin.i64(i64 %139, i64 %140)
  store i64 %141, ptr %111, align 8, !tbaa !37
  br label %142

142:                                              ; preds = %138, %106, %97
  %143 = load i32, ptr %8, align 4, !tbaa !11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #30
  br label %144

144:                                              ; preds = %142, %44, %30
  %145 = phi i32 [ 0, %30 ], [ %49, %44 ], [ %143, %142 ]
  ret i32 %145
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_2ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(16) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load ptr, ptr %4, align 8, !tbaa !38
  %47 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %48 = load i64, ptr %47, align 8, !tbaa !39
  %49 = getelementptr inbounds nuw i8, ptr %46, i64 %48
  %50 = icmp samesign eq i64 %48, 0
  br i1 %50, label %160, label %51

51:                                               ; preds = %43
  %52 = ptrtoint ptr %49 to i64
  %53 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %54 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %55 = getelementptr inbounds nuw i8, ptr %44, i64 24
  br label %56

56:                                               ; preds = %136, %51
  %57 = phi ptr [ %46, %51 ], [ %139, %136 ]
  %58 = ptrtoint ptr %57 to i64
  %59 = sub i64 %52, %58
  %60 = icmp sgt i64 %59, -1
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

62:                                               ; preds = %56
  %63 = load i64, ptr %53, align 8, !tbaa !37
  %64 = add i64 %63, %59
  %65 = load i64, ptr %54, align 8, !tbaa !18
  %66 = icmp ugt i64 %64, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %62
  %68 = load ptr, ptr %55, align 8, !tbaa !13
  tail call void %68(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %64)
  %69 = load i64, ptr %54, align 8, !tbaa !18
  %70 = load i64, ptr %53, align 8, !tbaa !37
  br label %71

71:                                               ; preds = %67, %62
  %72 = phi i64 [ %63, %62 ], [ %70, %67 ]
  %73 = phi i64 [ %65, %62 ], [ %69, %67 ]
  %74 = sub i64 %73, %72
  %75 = tail call i64 @llvm.umin.i64(i64 %74, i64 %59)
  %76 = load ptr, ptr %44, align 8, !tbaa !17
  %77 = ptrtoint ptr %76 to i64
  %78 = getelementptr inbounds nuw i8, ptr %76, i64 %72
  %79 = icmp eq i64 %75, 0
  br i1 %79, label %136, label %80

80:                                               ; preds = %71
  %81 = icmp ult i64 %75, 4
  br i1 %81, label %82, label %99

82:                                               ; preds = %119, %132, %99, %80
  %83 = phi i64 [ %106, %119 ], [ 0, %80 ], [ 0, %99 ], [ %124, %132 ]
  %84 = and i64 %75, 3
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %82, %86
  %87 = phi i64 [ %92, %86 ], [ %83, %82 ]
  %88 = phi i64 [ %93, %86 ], [ 0, %82 ]
  %89 = getelementptr inbounds nuw i8, ptr %57, i64 %87
  %90 = load i8, ptr %89, align 1, !tbaa !10
  %91 = getelementptr inbounds nuw i8, ptr %78, i64 %87
  store i8 %90, ptr %91, align 1, !tbaa !10
  %92 = add nuw i64 %87, 1
  %93 = add i64 %88, 1
  %94 = icmp eq i64 %93, %84
  br i1 %94, label %95, label %86, !llvm.loop !328

95:                                               ; preds = %86, %82
  %96 = phi i64 [ %83, %82 ], [ %92, %86 ]
  %97 = sub nsw i64 %83, %75
  %98 = icmp ugt i64 %97, -4
  br i1 %98, label %134, label %141

99:                                               ; preds = %80
  %100 = add i64 %72, %77
  %101 = sub i64 %100, %58
  %102 = icmp ult i64 %101, 32
  br i1 %102, label %82, label %103

103:                                              ; preds = %99
  %104 = icmp ult i64 %75, 32
  br i1 %104, label %122, label %105

105:                                              ; preds = %103
  %106 = and i64 %75, 9223372036854775776
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %115, %107 ]
  %109 = getelementptr inbounds nuw i8, ptr %57, i64 %108
  %110 = getelementptr inbounds nuw i8, ptr %109, i64 16
  %111 = load <16 x i8>, ptr %109, align 1, !tbaa !10
  %112 = load <16 x i8>, ptr %110, align 1, !tbaa !10
  %113 = getelementptr inbounds nuw i8, ptr %78, i64 %108
  %114 = getelementptr inbounds nuw i8, ptr %113, i64 16
  store <16 x i8> %111, ptr %113, align 1, !tbaa !10
  store <16 x i8> %112, ptr %114, align 1, !tbaa !10
  %115 = add nuw i64 %108, 32
  %116 = icmp eq i64 %115, %106
  br i1 %116, label %117, label %107, !llvm.loop !329

117:                                              ; preds = %107
  %118 = icmp eq i64 %75, %106
  br i1 %118, label %134, label %119

119:                                              ; preds = %117
  %120 = and i64 %75, 28
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %82, label %122

122:                                              ; preds = %119, %103
  %123 = phi i64 [ %106, %119 ], [ 0, %103 ]
  %124 = and i64 %75, 9223372036854775804
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ %123, %122 ], [ %130, %125 ]
  %127 = getelementptr inbounds nuw i8, ptr %57, i64 %126
  %128 = load <4 x i8>, ptr %127, align 1, !tbaa !10
  %129 = getelementptr inbounds nuw i8, ptr %78, i64 %126
  store <4 x i8> %128, ptr %129, align 1, !tbaa !10
  %130 = add nuw i64 %126, 4
  %131 = icmp eq i64 %130, %124
  br i1 %131, label %132, label %125, !llvm.loop !330

132:                                              ; preds = %125
  %133 = icmp eq i64 %75, %124
  br i1 %133, label %134, label %82

134:                                              ; preds = %95, %141, %132, %117
  %135 = load i64, ptr %53, align 8, !tbaa !37
  br label %136

136:                                              ; preds = %134, %71
  %137 = phi i64 [ %135, %134 ], [ %72, %71 ]
  %138 = add i64 %137, %75
  store i64 %138, ptr %53, align 8, !tbaa !37
  %139 = getelementptr inbounds nuw i8, ptr %57, i64 %75
  %140 = icmp eq ptr %139, %49
  br i1 %140, label %160, label %56, !llvm.loop !77

141:                                              ; preds = %95, %141
  %142 = phi i64 [ %158, %141 ], [ %96, %95 ]
  %143 = getelementptr inbounds nuw i8, ptr %57, i64 %142
  %144 = load i8, ptr %143, align 1, !tbaa !10
  %145 = getelementptr inbounds nuw i8, ptr %78, i64 %142
  store i8 %144, ptr %145, align 1, !tbaa !10
  %146 = add nuw i64 %142, 1
  %147 = getelementptr inbounds nuw i8, ptr %57, i64 %146
  %148 = load i8, ptr %147, align 1, !tbaa !10
  %149 = getelementptr inbounds nuw i8, ptr %78, i64 %146
  store i8 %148, ptr %149, align 1, !tbaa !10
  %150 = add nuw i64 %142, 2
  %151 = getelementptr inbounds nuw i8, ptr %57, i64 %150
  %152 = load i8, ptr %151, align 1, !tbaa !10
  %153 = getelementptr inbounds nuw i8, ptr %78, i64 %150
  store i8 %152, ptr %153, align 1, !tbaa !10
  %154 = add nuw i64 %142, 3
  %155 = getelementptr inbounds nuw i8, ptr %57, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !10
  %157 = getelementptr inbounds nuw i8, ptr %78, i64 %154
  store i8 %156, ptr %157, align 1, !tbaa !10
  %158 = add nuw i64 %142, 4
  %159 = icmp eq i64 %158, %75
  br i1 %159, label %134, label %141, !llvm.loop !331

160:                                              ; preds = %136, %43
  %161 = icmp eq i64 %12, %21
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %45, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %164

164:                                              ; preds = %162, %160
  %165 = phi i64 [ %163, %162 ], [ %45, %160 ]
  ret i64 %165
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112format_errorCI2St13runtime_errorEPKc(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1) unnamed_addr #5 comdat align 2 {
  tail call void @_ZNSt13runtime_errorC2EPKc(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1)
  store ptr getelementptr inbounds nuw inrange(-16, 24) (i8, ptr @_ZTVN3fmt3v1112format_errorE, i64 16), ptr %0, align 8, !tbaa !82
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #8

declare dso_local void @_ZNSt13runtime_errorC2EPKc(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) unnamed_addr #3

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112format_errorD0Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #18 comdat align 2 {
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #30
  tail call void @_ZdlPv(ptr noundef nonnull %0) #34
  ret void
}

; Function Attrs: nounwind
declare dso_local noundef ptr @_ZNKSt13runtime_error4whatEv(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #8

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #16

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail13format_dragonENS1_8basic_fpIoEEjiRNS1_6bufferIcEERi(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 4 dereferenceable(4) %4) local_unnamed_addr #5 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca %"class.fmt::v11::detail::bigint", align 8
  %7 = alloca %"class.fmt::v11::detail::bigint", align 8
  %8 = alloca %"class.fmt::v11::detail::bigint", align 8
  %9 = alloca %"class.fmt::v11::detail::bigint", align 8
  call void @llvm.lifetime.start.p0(i64 176, ptr nonnull %6) #30
  %10 = getelementptr inbounds nuw i8, ptr %6, i64 16
  %11 = getelementptr inbounds nuw i8, ptr %6, i64 24
  %12 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 0, ptr %12, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy, ptr %11, align 8, !tbaa !332
  %13 = getelementptr inbounds nuw i8, ptr %6, i64 32
  store ptr %13, ptr %6, align 8, !tbaa !334
  store i64 32, ptr %10, align 8, !tbaa !335
  %14 = getelementptr inbounds nuw i8, ptr %6, i64 168
  store i32 0, ptr %14, align 8, !tbaa !336
  call void @llvm.lifetime.start.p0(i64 176, ptr nonnull %7) #30
  %15 = getelementptr inbounds nuw i8, ptr %7, i64 16
  %16 = getelementptr inbounds nuw i8, ptr %7, i64 24
  %17 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 0, ptr %17, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy, ptr %16, align 8, !tbaa !332
  %18 = getelementptr inbounds nuw i8, ptr %7, i64 32
  store ptr %18, ptr %7, align 8, !tbaa !334
  store i64 32, ptr %15, align 8, !tbaa !335
  %19 = getelementptr inbounds nuw i8, ptr %7, i64 168
  store i32 0, ptr %19, align 8, !tbaa !336
  call void @llvm.lifetime.start.p0(i64 176, ptr nonnull %8) #30
  %20 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %21 = getelementptr inbounds nuw i8, ptr %8, i64 24
  %22 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 0, ptr %22, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy, ptr %21, align 8, !tbaa !332
  %23 = getelementptr inbounds nuw i8, ptr %8, i64 32
  store ptr %23, ptr %8, align 8, !tbaa !334
  store i64 32, ptr %20, align 8, !tbaa !335
  %24 = getelementptr inbounds nuw i8, ptr %8, i64 168
  store i32 0, ptr %24, align 8, !tbaa !336
  call void @llvm.lifetime.start.p0(i64 176, ptr nonnull %9) #30
  %25 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %26 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %27 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 0, ptr %27, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy, ptr %26, align 8, !tbaa !332
  %28 = getelementptr inbounds nuw i8, ptr %9, i64 32
  store ptr %28, ptr %9, align 8, !tbaa !334
  store i64 32, ptr %25, align 8, !tbaa !335
  %29 = getelementptr inbounds nuw i8, ptr %9, i64 168
  store i32 0, ptr %29, align 8, !tbaa !336
  %30 = and i32 %1, 1
  %31 = icmp eq i32 %30, 0
  %32 = add nuw nsw i32 %30, 1
  %33 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %34 = load i32, ptr %33, align 16, !tbaa !340
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %287

36:                                               ; preds = %5
  %37 = load i128, ptr %0, align 16, !tbaa !342
  %38 = icmp eq i128 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %182, %139, %56, %36, %709, %625, %592, %465
  %40 = phi i32 [ 2636, %465 ], [ 2621, %592 ], [ 2612, %625 ], [ 2621, %709 ], [ 2612, %36 ], [ 2621, %56 ], [ 2621, %139 ], [ 2621, %182 ]
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef %40, ptr noundef nonnull @.str.14) #31
          to label %41 unwind label %217

41:                                               ; preds = %39
  unreachable

42:                                               ; preds = %36, %42
  %43 = phi i128 [ %48, %42 ], [ %37, %36 ]
  %44 = phi i64 [ %46, %42 ], [ 0, %36 ]
  %45 = trunc i128 %43 to i32
  %46 = add nuw nsw i64 %44, 1
  %47 = getelementptr inbounds nuw i32, ptr %13, i64 %44
  store i32 %45, ptr %47, align 4, !tbaa !11
  %48 = lshr i128 %43, 32
  %49 = icmp ult i128 %43, 4294967296
  br i1 %49, label %50, label %42, !llvm.loop !343

50:                                               ; preds = %42
  %51 = icmp samesign ult i64 %44, 32
  br i1 %51, label %56, label %52

52:                                               ; preds = %50
  invoke void @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %46)
          to label %53 unwind label %217

53:                                               ; preds = %52
  %54 = load i64, ptr %10, align 8, !tbaa !335
  %55 = load i32, ptr %33, align 16, !tbaa !340
  br label %56

56:                                               ; preds = %53, %50
  %57 = phi i32 [ %34, %50 ], [ %55, %53 ]
  %58 = phi i64 [ 32, %50 ], [ %54, %53 ]
  %59 = call noundef i64 @llvm.umin.i64(i64 %46, i64 %58)
  store i64 %59, ptr %12, align 8, !tbaa !344
  store i32 0, ptr %14, align 8, !tbaa !336
  %60 = add nsw i32 %57, %32
  %61 = icmp sgt i32 %60, -1
  br i1 %61, label %62, label %39

62:                                               ; preds = %56
  %63 = lshr i32 %60, 5
  store i32 %63, ptr %14, align 8, !tbaa !336
  %64 = and i32 %60, 31
  %65 = icmp eq i32 %64, 0
  %66 = icmp eq i64 %58, 0
  %67 = or i1 %66, %65
  br i1 %67, label %129, label %68

68:                                               ; preds = %62
  %69 = load ptr, ptr %6, align 8, !tbaa !334
  %70 = sub nuw nsw i32 32, %64
  %71 = icmp samesign ult i64 %59, 8
  br i1 %71, label %99, label %72

72:                                               ; preds = %68
  %73 = and i64 %59, 9223372036854775800
  %74 = insertelement <4 x i32> poison, i32 %70, i64 0
  %75 = shufflevector <4 x i32> %74, <4 x i32> poison, <4 x i32> zeroinitializer
  %76 = insertelement <4 x i32> poison, i32 %64, i64 0
  %77 = shufflevector <4 x i32> %76, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %72
  %79 = phi i64 [ 0, %72 ], [ %93, %78 ]
  %80 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %72 ], [ %86, %78 ]
  %81 = getelementptr inbounds nuw i32, ptr %69, i64 %79
  %82 = getelementptr inbounds nuw i8, ptr %81, i64 16
  %83 = load <4 x i32>, ptr %81, align 4, !tbaa !11
  %84 = load <4 x i32>, ptr %82, align 4, !tbaa !11
  %85 = lshr <4 x i32> %83, %75
  %86 = lshr <4 x i32> %84, %75
  %87 = shufflevector <4 x i32> %80, <4 x i32> %85, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %88 = shufflevector <4 x i32> %85, <4 x i32> %86, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %89 = shl <4 x i32> %83, %77
  %90 = shl <4 x i32> %84, %77
  %91 = add <4 x i32> %89, %87
  %92 = add <4 x i32> %90, %88
  store <4 x i32> %91, ptr %81, align 4, !tbaa !11
  store <4 x i32> %92, ptr %82, align 4, !tbaa !11
  %93 = add nuw i64 %79, 8
  %94 = icmp eq i64 %93, %73
  br i1 %94, label %95, label %78, !llvm.loop !345

95:                                               ; preds = %78
  %96 = extractelement <4 x i32> %86, i64 3
  %97 = extractelement <4 x i32> %86, i64 3
  %98 = icmp eq i64 %59, %73
  br i1 %98, label %102, label %99

99:                                               ; preds = %68, %95
  %100 = phi i64 [ 0, %68 ], [ %73, %95 ]
  %101 = phi i32 [ 0, %68 ], [ %97, %95 ]
  br label %105

102:                                              ; preds = %105, %95
  %103 = phi i32 [ %96, %95 ], [ %110, %105 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %129, label %115

105:                                              ; preds = %99, %105
  %106 = phi i64 [ %113, %105 ], [ %100, %99 ]
  %107 = phi i32 [ %110, %105 ], [ %101, %99 ]
  %108 = getelementptr inbounds nuw i32, ptr %69, i64 %106
  %109 = load i32, ptr %108, align 4, !tbaa !11
  %110 = lshr i32 %109, %70
  %111 = shl i32 %109, %64
  %112 = add i32 %111, %107
  store i32 %112, ptr %108, align 4, !tbaa !11
  %113 = add nuw nsw i64 %106, 1
  %114 = icmp eq i64 %113, %59
  br i1 %114, label %102, label %105, !llvm.loop !346

115:                                              ; preds = %102
  %116 = add nuw i64 %59, 1
  %117 = icmp ult i64 %46, %58
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %119(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %116)
          to label %120 unwind label %217

120:                                              ; preds = %118
  %121 = load i64, ptr %12, align 8, !tbaa !344
  %122 = add i64 %121, 1
  %123 = load ptr, ptr %6, align 8, !tbaa !334
  br label %124

124:                                              ; preds = %120, %115
  %125 = phi ptr [ %69, %115 ], [ %123, %120 ]
  %126 = phi i64 [ %116, %115 ], [ %122, %120 ]
  %127 = phi i64 [ %59, %115 ], [ %121, %120 ]
  store i64 %126, ptr %12, align 8, !tbaa !344
  %128 = getelementptr inbounds nuw i32, ptr %125, i64 %127
  store i32 %103, ptr %128, align 4, !tbaa !11
  br label %129

129:                                              ; preds = %124, %102, %62
  %130 = load ptr, ptr %8, align 8, !tbaa !334
  store i32 1, ptr %130, align 4, !tbaa !11
  %131 = load i64, ptr %20, align 8, !tbaa !335
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = load ptr, ptr %21, align 8, !tbaa !332
  invoke void %134(ptr noundef nonnull align 8 dereferenceable(172) %8, i64 noundef 1)
          to label %135 unwind label %217

135:                                              ; preds = %133
  %136 = load i64, ptr %20, align 8, !tbaa !335
  %137 = icmp ne i64 %136, 0
  %138 = zext i1 %137 to i64
  br label %139

139:                                              ; preds = %135, %129
  %140 = phi i64 [ %131, %129 ], [ %136, %135 ]
  %141 = phi i64 [ 1, %129 ], [ %138, %135 ]
  store i64 %141, ptr %22, align 8, !tbaa !344
  store i32 0, ptr %24, align 8, !tbaa !336
  %142 = load i32, ptr %33, align 16, !tbaa !340
  %143 = icmp sgt i32 %142, -1
  br i1 %143, label %144, label %39

144:                                              ; preds = %139
  %145 = lshr i32 %142, 5
  store i32 %145, ptr %24, align 8, !tbaa !336
  %146 = and i32 %142, 31
  %147 = icmp eq i32 %146, 0
  %148 = icmp eq i64 %141, 0
  %149 = select i1 %147, i1 true, i1 %148
  br i1 %149, label %171, label %150

150:                                              ; preds = %144
  %151 = load ptr, ptr %8, align 8, !tbaa !334
  %152 = sub nuw nsw i32 32, %146
  %153 = load i32, ptr %151, align 4, !tbaa !11
  %154 = lshr i32 %153, %152
  %155 = shl i32 %153, %146
  store i32 %155, ptr %151, align 4, !tbaa !11
  %156 = icmp eq i32 %154, 0
  br i1 %156, label %171, label %157

157:                                              ; preds = %150
  %158 = icmp ult i64 %141, %140
  br i1 %158, label %166, label %159

159:                                              ; preds = %157
  %160 = add nuw nsw i64 %141, 1
  %161 = load ptr, ptr %21, align 8, !tbaa !332
  invoke void %161(ptr noundef nonnull align 8 dereferenceable(172) %8, i64 noundef %160)
          to label %162 unwind label %217

162:                                              ; preds = %159
  %163 = load i64, ptr %22, align 8, !tbaa !344
  %164 = add i64 %163, 1
  %165 = load ptr, ptr %8, align 8, !tbaa !334
  br label %166

166:                                              ; preds = %162, %157
  %167 = phi ptr [ %151, %157 ], [ %165, %162 ]
  %168 = phi i64 [ 2, %157 ], [ %164, %162 ]
  %169 = phi i64 [ 1, %157 ], [ %163, %162 ]
  store i64 %168, ptr %22, align 8, !tbaa !344
  %170 = getelementptr inbounds nuw i32, ptr %167, i64 %169
  store i32 %154, ptr %170, align 4, !tbaa !11
  br label %171

171:                                              ; preds = %166, %150, %144
  br i1 %31, label %219, label %172

172:                                              ; preds = %171
  %173 = load ptr, ptr %9, align 8, !tbaa !334
  store i32 1, ptr %173, align 4, !tbaa !11
  %174 = load i64, ptr %25, align 8, !tbaa !335
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %172
  %177 = load ptr, ptr %26, align 8, !tbaa !332
  invoke void %177(ptr noundef nonnull align 8 dereferenceable(172) %9, i64 noundef 1)
          to label %178 unwind label %217

178:                                              ; preds = %176
  %179 = load i64, ptr %25, align 8, !tbaa !335
  %180 = icmp ne i64 %179, 0
  %181 = zext i1 %180 to i64
  br label %182

182:                                              ; preds = %178, %172
  %183 = phi i64 [ %174, %172 ], [ %179, %178 ]
  %184 = phi i64 [ 1, %172 ], [ %181, %178 ]
  store i64 %184, ptr %27, align 8, !tbaa !344
  store i32 0, ptr %29, align 8, !tbaa !336
  %185 = load i32, ptr %33, align 16, !tbaa !340
  %186 = icmp sgt i32 %185, -2
  br i1 %186, label %187, label %39

187:                                              ; preds = %182
  %188 = add nsw i32 %185, 1
  %189 = lshr i32 %188, 5
  store i32 %189, ptr %29, align 8, !tbaa !336
  %190 = and i32 %188, 31
  %191 = icmp eq i32 %190, 0
  %192 = icmp eq i64 %184, 0
  %193 = select i1 %191, i1 true, i1 %192
  br i1 %193, label %219, label %194

194:                                              ; preds = %187
  %195 = load ptr, ptr %9, align 8, !tbaa !334
  %196 = sub nuw nsw i32 32, %190
  %197 = load i32, ptr %195, align 4, !tbaa !11
  %198 = lshr i32 %197, %196
  %199 = shl i32 %197, %190
  store i32 %199, ptr %195, align 4, !tbaa !11
  %200 = icmp eq i32 %198, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %194
  %202 = icmp ult i64 %184, %183
  br i1 %202, label %210, label %203

203:                                              ; preds = %201
  %204 = add nuw nsw i64 %184, 1
  %205 = load ptr, ptr %26, align 8, !tbaa !332
  invoke void %205(ptr noundef nonnull align 8 dereferenceable(172) %9, i64 noundef %204)
          to label %206 unwind label %217

206:                                              ; preds = %203
  %207 = load i64, ptr %27, align 8, !tbaa !344
  %208 = add i64 %207, 1
  %209 = load ptr, ptr %9, align 8, !tbaa !334
  br label %210

210:                                              ; preds = %206, %201
  %211 = phi ptr [ %195, %201 ], [ %209, %206 ]
  %212 = phi i64 [ 2, %201 ], [ %208, %206 ]
  %213 = phi i64 [ 1, %201 ], [ %207, %206 ]
  store i64 %212, ptr %27, align 8, !tbaa !344
  %214 = getelementptr inbounds nuw i32, ptr %211, i64 %213
  store i32 %198, ptr %214, align 4, !tbaa !11
  br label %219

215:                                              ; preds = %504
  %216 = landingpad { ptr, i32 }
          cleanup
  br label %1964

217:                                              ; preds = %39, %219, %290, %707, %52, %118, %133, %159, %176, %203, %276, %296, %352, %454, %571, %586, %613, %639, %696, %773, %788, %800
  %218 = landingpad { ptr, i32 }
          cleanup
  br label %1964

219:                                              ; preds = %210, %194, %187, %171
  %220 = phi ptr [ null, %171 ], [ %9, %187 ], [ %9, %194 ], [ %9, %210 ]
  %221 = load i32, ptr %4, align 4, !tbaa !11
  invoke void @_ZN3fmt3v116detail6bigint12assign_pow10Ei(ptr noundef nonnull align 8 dereferenceable(172) %7, i32 noundef %221)
          to label %222 unwind label %217

222:                                              ; preds = %219
  %223 = load i64, ptr %17, align 8, !tbaa !344
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %808, label %225

225:                                              ; preds = %222
  %226 = load ptr, ptr %7, align 8, !tbaa !334
  %227 = xor i32 %30, 31
  %228 = icmp ult i64 %223, 8
  br i1 %228, label %256, label %229

229:                                              ; preds = %225
  %230 = and i64 %223, -8
  %231 = insertelement <4 x i32> poison, i32 %227, i64 0
  %232 = shufflevector <4 x i32> %231, <4 x i32> poison, <4 x i32> zeroinitializer
  %233 = insertelement <4 x i32> poison, i32 %32, i64 0
  %234 = shufflevector <4 x i32> %233, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %235

235:                                              ; preds = %235, %229
  %236 = phi i64 [ 0, %229 ], [ %250, %235 ]
  %237 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %229 ], [ %243, %235 ]
  %238 = getelementptr inbounds nuw i32, ptr %226, i64 %236
  %239 = getelementptr inbounds nuw i8, ptr %238, i64 16
  %240 = load <4 x i32>, ptr %238, align 4, !tbaa !11
  %241 = load <4 x i32>, ptr %239, align 4, !tbaa !11
  %242 = lshr <4 x i32> %240, %232
  %243 = lshr <4 x i32> %241, %232
  %244 = shufflevector <4 x i32> %237, <4 x i32> %242, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %245 = shufflevector <4 x i32> %242, <4 x i32> %243, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %246 = shl <4 x i32> %240, %234
  %247 = shl <4 x i32> %241, %234
  %248 = add <4 x i32> %246, %244
  %249 = add <4 x i32> %247, %245
  store <4 x i32> %248, ptr %238, align 4, !tbaa !11
  store <4 x i32> %249, ptr %239, align 4, !tbaa !11
  %250 = add nuw i64 %236, 8
  %251 = icmp eq i64 %250, %230
  br i1 %251, label %252, label %235, !llvm.loop !347

252:                                              ; preds = %235
  %253 = extractelement <4 x i32> %243, i64 3
  %254 = extractelement <4 x i32> %243, i64 3
  %255 = icmp eq i64 %223, %230
  br i1 %255, label %259, label %256

256:                                              ; preds = %225, %252
  %257 = phi i64 [ 0, %225 ], [ %230, %252 ]
  %258 = phi i32 [ 0, %225 ], [ %254, %252 ]
  br label %262

259:                                              ; preds = %262, %252
  %260 = phi i32 [ %253, %252 ], [ %267, %262 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %808, label %272

262:                                              ; preds = %256, %262
  %263 = phi i64 [ %270, %262 ], [ %257, %256 ]
  %264 = phi i32 [ %267, %262 ], [ %258, %256 ]
  %265 = getelementptr inbounds nuw i32, ptr %226, i64 %263
  %266 = load i32, ptr %265, align 4, !tbaa !11
  %267 = lshr i32 %266, %227
  %268 = shl i32 %266, %32
  %269 = add i32 %268, %264
  store i32 %269, ptr %265, align 4, !tbaa !11
  %270 = add nuw i64 %263, 1
  %271 = icmp eq i64 %270, %223
  br i1 %271, label %259, label %262, !llvm.loop !348

272:                                              ; preds = %259
  %273 = add i64 %223, 1
  %274 = load i64, ptr %15, align 8, !tbaa !335
  %275 = icmp ugt i64 %273, %274
  br i1 %275, label %276, label %282

276:                                              ; preds = %272
  %277 = load ptr, ptr %16, align 8, !tbaa !332
  invoke void %277(ptr noundef nonnull align 8 dereferenceable(172) %7, i64 noundef %273)
          to label %278 unwind label %217

278:                                              ; preds = %276
  %279 = load i64, ptr %17, align 8, !tbaa !344
  %280 = add i64 %279, 1
  %281 = load ptr, ptr %7, align 8, !tbaa !334
  br label %282

282:                                              ; preds = %278, %272
  %283 = phi ptr [ %226, %272 ], [ %281, %278 ]
  %284 = phi i64 [ %273, %272 ], [ %280, %278 ]
  %285 = phi i64 [ %223, %272 ], [ %279, %278 ]
  store i64 %284, ptr %17, align 8, !tbaa !344
  %286 = getelementptr inbounds nuw i32, ptr %283, i64 %285
  store i32 %260, ptr %286, align 4, !tbaa !11
  br label %808

287:                                              ; preds = %5
  %288 = load i32, ptr %4, align 4, !tbaa !11
  %289 = icmp slt i32 %288, 0
  br i1 %289, label %290, label %625

290:                                              ; preds = %287
  %291 = sub nsw i32 0, %288
  invoke void @_ZN3fmt3v116detail6bigint12assign_pow10Ei(ptr noundef nonnull align 8 dereferenceable(172) %6, i32 noundef %291)
          to label %292 unwind label %217

292:                                              ; preds = %290
  %293 = load i64, ptr %12, align 8, !tbaa !344
  %294 = load i64, ptr %20, align 8, !tbaa !335
  %295 = icmp ugt i64 %293, %294
  br i1 %295, label %296, label %301

296:                                              ; preds = %292
  %297 = load ptr, ptr %21, align 8, !tbaa !332
  invoke void %297(ptr noundef nonnull align 8 dereferenceable(172) %8, i64 noundef %293)
          to label %298 unwind label %217

298:                                              ; preds = %296
  %299 = load i64, ptr %20, align 8, !tbaa !335
  %300 = call noundef i64 @llvm.umin.i64(i64 %293, i64 %299)
  store i64 %300, ptr %22, align 8, !tbaa !344
  br label %303

301:                                              ; preds = %292
  store i64 %293, ptr %22, align 8, !tbaa !344
  %302 = icmp eq i64 %293, 0
  br i1 %302, label %346, label %303

303:                                              ; preds = %301, %298
  %304 = load ptr, ptr %6, align 8, !tbaa !334
  %305 = getelementptr inbounds nuw i32, ptr %304, i64 %293
  %306 = load ptr, ptr %8, align 8, !tbaa !334
  %307 = add i64 %293, 4611686018427387903
  %308 = and i64 %307, 4611686018427387903
  %309 = add nuw nsw i64 %308, 1
  %310 = icmp samesign ult i64 %308, 7
  %311 = ptrtoint ptr %306 to i64
  %312 = ptrtoint ptr %304 to i64
  %313 = sub i64 %311, %312
  %314 = icmp ult i64 %313, 32
  %315 = select i1 %310, i1 true, i1 %314
  br i1 %315, label %336, label %316

316:                                              ; preds = %303
  %317 = and i64 %309, 9223372036854775800
  %318 = shl i64 %317, 2
  %319 = getelementptr i8, ptr %306, i64 %318
  %320 = shl i64 %317, 2
  %321 = getelementptr i8, ptr %304, i64 %320
  br label %322

322:                                              ; preds = %322, %316
  %323 = phi i64 [ 0, %316 ], [ %332, %322 ]
  %324 = shl i64 %323, 2
  %325 = getelementptr i8, ptr %306, i64 %324
  %326 = shl i64 %323, 2
  %327 = getelementptr i8, ptr %304, i64 %326
  %328 = getelementptr i8, ptr %327, i64 16
  %329 = load <4 x i32>, ptr %327, align 4, !tbaa !11
  %330 = load <4 x i32>, ptr %328, align 4, !tbaa !11
  %331 = getelementptr i8, ptr %325, i64 16
  store <4 x i32> %329, ptr %325, align 4, !tbaa !11
  store <4 x i32> %330, ptr %331, align 4, !tbaa !11
  %332 = add nuw i64 %323, 8
  %333 = icmp eq i64 %332, %317
  br i1 %333, label %334, label %322, !llvm.loop !349

334:                                              ; preds = %322
  %335 = icmp eq i64 %309, %317
  br i1 %335, label %346, label %336

336:                                              ; preds = %303, %334
  %337 = phi ptr [ %306, %303 ], [ %319, %334 ]
  %338 = phi ptr [ %304, %303 ], [ %321, %334 ]
  br label %339

339:                                              ; preds = %336, %339
  %340 = phi ptr [ %344, %339 ], [ %337, %336 ]
  %341 = phi ptr [ %342, %339 ], [ %338, %336 ]
  %342 = getelementptr inbounds nuw i8, ptr %341, i64 4
  %343 = load i32, ptr %341, align 4, !tbaa !11
  %344 = getelementptr inbounds nuw i8, ptr %340, i64 4
  store i32 %343, ptr %340, align 4, !tbaa !11
  %345 = icmp eq ptr %342, %305
  br i1 %345, label %346, label %339, !llvm.loop !350

346:                                              ; preds = %339, %334, %301
  %347 = load i32, ptr %14, align 8, !tbaa !336
  store i32 %347, ptr %24, align 8, !tbaa !336
  br i1 %31, label %465, label %348

348:                                              ; preds = %346
  %349 = load i64, ptr %12, align 8, !tbaa !344
  %350 = load i64, ptr %25, align 8, !tbaa !335
  %351 = icmp ugt i64 %349, %350
  br i1 %351, label %352, label %357

352:                                              ; preds = %348
  %353 = load ptr, ptr %26, align 8, !tbaa !332
  invoke void %353(ptr noundef nonnull align 8 dereferenceable(172) %9, i64 noundef %349)
          to label %354 unwind label %217

354:                                              ; preds = %352
  %355 = load i64, ptr %25, align 8, !tbaa !335
  %356 = call noundef i64 @llvm.umin.i64(i64 %349, i64 %355)
  store i64 %356, ptr %27, align 8, !tbaa !344
  br label %360

357:                                              ; preds = %348
  store i64 %349, ptr %27, align 8, !tbaa !344
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %357
  store i32 %347, ptr %29, align 8, !tbaa !336
  br label %465

360:                                              ; preds = %357, %354
  %361 = phi i64 [ %350, %357 ], [ %355, %354 ]
  %362 = phi i64 [ %349, %357 ], [ %356, %354 ]
  %363 = load ptr, ptr %6, align 8, !tbaa !334
  %364 = getelementptr inbounds nuw i32, ptr %363, i64 %349
  %365 = load ptr, ptr %9, align 8, !tbaa !334
  %366 = add i64 %349, 4611686018427387903
  %367 = and i64 %366, 4611686018427387903
  %368 = add nuw nsw i64 %367, 1
  %369 = icmp samesign ult i64 %367, 7
  %370 = ptrtoint ptr %365 to i64
  %371 = ptrtoint ptr %363 to i64
  %372 = sub i64 %370, %371
  %373 = icmp ult i64 %372, 32
  %374 = select i1 %369, i1 true, i1 %373
  br i1 %374, label %395, label %375

375:                                              ; preds = %360
  %376 = and i64 %368, 9223372036854775800
  %377 = shl i64 %376, 2
  %378 = getelementptr i8, ptr %365, i64 %377
  %379 = shl i64 %376, 2
  %380 = getelementptr i8, ptr %363, i64 %379
  br label %381

381:                                              ; preds = %381, %375
  %382 = phi i64 [ 0, %375 ], [ %391, %381 ]
  %383 = shl i64 %382, 2
  %384 = getelementptr i8, ptr %365, i64 %383
  %385 = shl i64 %382, 2
  %386 = getelementptr i8, ptr %363, i64 %385
  %387 = getelementptr i8, ptr %386, i64 16
  %388 = load <4 x i32>, ptr %386, align 4, !tbaa !11
  %389 = load <4 x i32>, ptr %387, align 4, !tbaa !11
  %390 = getelementptr i8, ptr %384, i64 16
  store <4 x i32> %388, ptr %384, align 4, !tbaa !11
  store <4 x i32> %389, ptr %390, align 4, !tbaa !11
  %391 = add nuw i64 %382, 8
  %392 = icmp eq i64 %391, %376
  br i1 %392, label %393, label %381, !llvm.loop !351

393:                                              ; preds = %381
  %394 = icmp eq i64 %368, %376
  br i1 %394, label %405, label %395

395:                                              ; preds = %360, %393
  %396 = phi ptr [ %365, %360 ], [ %378, %393 ]
  %397 = phi ptr [ %363, %360 ], [ %380, %393 ]
  br label %398

398:                                              ; preds = %395, %398
  %399 = phi ptr [ %403, %398 ], [ %396, %395 ]
  %400 = phi ptr [ %401, %398 ], [ %397, %395 ]
  %401 = getelementptr inbounds nuw i8, ptr %400, i64 4
  %402 = load i32, ptr %400, align 4, !tbaa !11
  %403 = getelementptr inbounds nuw i8, ptr %399, i64 4
  store i32 %402, ptr %399, align 4, !tbaa !11
  %404 = icmp eq ptr %401, %364
  br i1 %404, label %405, label %398, !llvm.loop !352

405:                                              ; preds = %398, %393
  %406 = load i32, ptr %14, align 8, !tbaa !336
  store i32 %406, ptr %29, align 8, !tbaa !336
  %407 = icmp eq i64 %362, 0
  br i1 %407, label %465, label %408

408:                                              ; preds = %405
  %409 = icmp ult i64 %362, 8
  br i1 %409, label %434, label %410

410:                                              ; preds = %408
  %411 = and i64 %362, -8
  br label %412

412:                                              ; preds = %412, %410
  %413 = phi i64 [ 0, %410 ], [ %427, %412 ]
  %414 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %410 ], [ %420, %412 ]
  %415 = getelementptr inbounds nuw i32, ptr %365, i64 %413
  %416 = getelementptr inbounds nuw i8, ptr %415, i64 16
  %417 = load <4 x i32>, ptr %415, align 4, !tbaa !11
  %418 = load <4 x i32>, ptr %416, align 4, !tbaa !11
  %419 = lshr <4 x i32> %417, splat (i32 31)
  %420 = lshr <4 x i32> %418, splat (i32 31)
  %421 = shufflevector <4 x i32> %414, <4 x i32> %419, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %422 = shufflevector <4 x i32> %419, <4 x i32> %420, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %423 = shl <4 x i32> %417, splat (i32 1)
  %424 = shl <4 x i32> %418, splat (i32 1)
  %425 = or disjoint <4 x i32> %423, %421
  %426 = or disjoint <4 x i32> %424, %422
  store <4 x i32> %425, ptr %415, align 4, !tbaa !11
  store <4 x i32> %426, ptr %416, align 4, !tbaa !11
  %427 = add nuw i64 %413, 8
  %428 = icmp eq i64 %427, %411
  br i1 %428, label %429, label %412, !llvm.loop !353

429:                                              ; preds = %412
  %430 = extractelement <4 x i32> %418, i64 3
  %431 = extractelement <4 x i32> %420, i64 3
  %432 = extractelement <4 x i32> %420, i64 3
  %433 = icmp eq i64 %362, %411
  br i1 %433, label %437, label %434

434:                                              ; preds = %408, %429
  %435 = phi i64 [ 0, %408 ], [ %411, %429 ]
  %436 = phi i32 [ 0, %408 ], [ %432, %429 ]
  br label %441

437:                                              ; preds = %441, %429
  %438 = phi i32 [ %430, %429 ], [ %445, %441 ]
  %439 = phi i32 [ %431, %429 ], [ %446, %441 ]
  %440 = icmp sgt i32 %438, -1
  br i1 %440, label %465, label %451

441:                                              ; preds = %434, %441
  %442 = phi i64 [ %449, %441 ], [ %435, %434 ]
  %443 = phi i32 [ %446, %441 ], [ %436, %434 ]
  %444 = getelementptr inbounds nuw i32, ptr %365, i64 %442
  %445 = load i32, ptr %444, align 4, !tbaa !11
  %446 = lshr i32 %445, 31
  %447 = shl i32 %445, 1
  %448 = or disjoint i32 %447, %443
  store i32 %448, ptr %444, align 4, !tbaa !11
  %449 = add nuw i64 %442, 1
  %450 = icmp eq i64 %449, %362
  br i1 %450, label %437, label %441, !llvm.loop !354

451:                                              ; preds = %437
  %452 = add i64 %362, 1
  %453 = icmp ugt i64 %452, %361
  br i1 %453, label %454, label %460

454:                                              ; preds = %451
  %455 = load ptr, ptr %26, align 8, !tbaa !332
  invoke void %455(ptr noundef nonnull align 8 dereferenceable(172) %9, i64 noundef %452)
          to label %456 unwind label %217

456:                                              ; preds = %454
  %457 = load i64, ptr %27, align 8, !tbaa !344
  %458 = add i64 %457, 1
  %459 = load ptr, ptr %9, align 8, !tbaa !334
  br label %460

460:                                              ; preds = %456, %451
  %461 = phi ptr [ %365, %451 ], [ %459, %456 ]
  %462 = phi i64 [ %452, %451 ], [ %458, %456 ]
  %463 = phi i64 [ %362, %451 ], [ %457, %456 ]
  store i64 %462, ptr %27, align 8, !tbaa !344
  %464 = getelementptr inbounds nuw i32, ptr %461, i64 %463
  store i32 %439, ptr %464, align 4, !tbaa !11
  br label %465

465:                                              ; preds = %460, %437, %405, %359, %346
  %466 = phi ptr [ null, %346 ], [ %9, %359 ], [ %9, %405 ], [ %9, %437 ], [ %9, %460 ]
  %467 = load i128, ptr %0, align 16, !tbaa !342
  %468 = icmp eq i128 %467, 0
  br i1 %468, label %39, label %469

469:                                              ; preds = %465
  %470 = and i128 %467, 18446744073709551615
  %471 = load i64, ptr %12, align 8, !tbaa !344
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %582, label %473

473:                                              ; preds = %469
  %474 = load ptr, ptr %6, align 8, !tbaa !334
  %475 = lshr i128 %467, 32
  %476 = and i128 %475, 79228162514264337589248983040
  br label %479

477:                                              ; preds = %479
  %478 = icmp eq i128 %492, 0
  br i1 %478, label %519, label %496

479:                                              ; preds = %479, %473
  %480 = phi i128 [ 0, %473 ], [ %492, %479 ]
  %481 = phi i64 [ 0, %473 ], [ %494, %479 ]
  %482 = getelementptr inbounds nuw i32, ptr %474, i64 %481
  %483 = load i32, ptr %482, align 4, !tbaa !11
  %484 = zext i32 %483 to i128
  %485 = mul nuw nsw i128 %470, %484
  %486 = and i128 %480, 4294967295
  %487 = add nuw nsw i128 %485, %486
  %488 = mul nuw i128 %476, %484
  %489 = lshr i128 %487, 32
  %490 = lshr i128 %480, 32
  %491 = add nuw i128 %488, %490
  %492 = add nuw i128 %491, %489
  %493 = trunc i128 %487 to i32
  store i32 %493, ptr %482, align 4, !tbaa !11
  %494 = add nuw i64 %481, 1
  %495 = icmp eq i64 %494, %471
  br i1 %495, label %477, label %479, !llvm.loop !355

496:                                              ; preds = %477, %510
  %497 = phi ptr [ %511, %510 ], [ %474, %477 ]
  %498 = phi i64 [ %512, %510 ], [ %471, %477 ]
  %499 = phi i128 [ %515, %510 ], [ %492, %477 ]
  %500 = trunc i128 %499 to i32
  %501 = add i64 %498, 1
  %502 = load i64, ptr %10, align 8, !tbaa !335
  %503 = icmp ugt i64 %501, %502
  br i1 %503, label %504, label %510

504:                                              ; preds = %496
  %505 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %505(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %501)
          to label %506 unwind label %215

506:                                              ; preds = %504
  %507 = load i64, ptr %12, align 8, !tbaa !344
  %508 = add i64 %507, 1
  %509 = load ptr, ptr %6, align 8, !tbaa !334
  br label %510

510:                                              ; preds = %506, %496
  %511 = phi ptr [ %497, %496 ], [ %509, %506 ]
  %512 = phi i64 [ %501, %496 ], [ %508, %506 ]
  %513 = phi i64 [ %498, %496 ], [ %507, %506 ]
  store i64 %512, ptr %12, align 8, !tbaa !344
  %514 = getelementptr inbounds nuw i32, ptr %511, i64 %513
  store i32 %500, ptr %514, align 4, !tbaa !11
  %515 = lshr i128 %499, 32
  %516 = icmp ult i128 %499, 4294967296
  br i1 %516, label %517, label %496, !llvm.loop !356

517:                                              ; preds = %510
  %518 = icmp eq i64 %512, 0
  br i1 %518, label %582, label %519

519:                                              ; preds = %477, %517
  %520 = phi i64 [ %512, %517 ], [ %471, %477 ]
  %521 = load ptr, ptr %6, align 8, !tbaa !334
  %522 = xor i32 %30, 31
  %523 = icmp ult i64 %520, 8
  br i1 %523, label %551, label %524

524:                                              ; preds = %519
  %525 = and i64 %520, -8
  %526 = insertelement <4 x i32> poison, i32 %522, i64 0
  %527 = shufflevector <4 x i32> %526, <4 x i32> poison, <4 x i32> zeroinitializer
  %528 = insertelement <4 x i32> poison, i32 %32, i64 0
  %529 = shufflevector <4 x i32> %528, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %530

530:                                              ; preds = %530, %524
  %531 = phi i64 [ 0, %524 ], [ %545, %530 ]
  %532 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %524 ], [ %538, %530 ]
  %533 = getelementptr inbounds nuw i32, ptr %521, i64 %531
  %534 = getelementptr inbounds nuw i8, ptr %533, i64 16
  %535 = load <4 x i32>, ptr %533, align 4, !tbaa !11
  %536 = load <4 x i32>, ptr %534, align 4, !tbaa !11
  %537 = lshr <4 x i32> %535, %527
  %538 = lshr <4 x i32> %536, %527
  %539 = shufflevector <4 x i32> %532, <4 x i32> %537, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %540 = shufflevector <4 x i32> %537, <4 x i32> %538, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %541 = shl <4 x i32> %535, %529
  %542 = shl <4 x i32> %536, %529
  %543 = add <4 x i32> %541, %539
  %544 = add <4 x i32> %542, %540
  store <4 x i32> %543, ptr %533, align 4, !tbaa !11
  store <4 x i32> %544, ptr %534, align 4, !tbaa !11
  %545 = add nuw i64 %531, 8
  %546 = icmp eq i64 %545, %525
  br i1 %546, label %547, label %530, !llvm.loop !357

547:                                              ; preds = %530
  %548 = extractelement <4 x i32> %538, i64 3
  %549 = extractelement <4 x i32> %538, i64 3
  %550 = icmp eq i64 %520, %525
  br i1 %550, label %554, label %551

551:                                              ; preds = %519, %547
  %552 = phi i64 [ 0, %519 ], [ %525, %547 ]
  %553 = phi i32 [ 0, %519 ], [ %549, %547 ]
  br label %557

554:                                              ; preds = %557, %547
  %555 = phi i32 [ %548, %547 ], [ %562, %557 ]
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %582, label %567

557:                                              ; preds = %551, %557
  %558 = phi i64 [ %565, %557 ], [ %552, %551 ]
  %559 = phi i32 [ %562, %557 ], [ %553, %551 ]
  %560 = getelementptr inbounds nuw i32, ptr %521, i64 %558
  %561 = load i32, ptr %560, align 4, !tbaa !11
  %562 = lshr i32 %561, %522
  %563 = shl i32 %561, %32
  %564 = add i32 %563, %559
  store i32 %564, ptr %560, align 4, !tbaa !11
  %565 = add nuw i64 %558, 1
  %566 = icmp eq i64 %565, %520
  br i1 %566, label %554, label %557, !llvm.loop !358

567:                                              ; preds = %554
  %568 = add i64 %520, 1
  %569 = load i64, ptr %10, align 8, !tbaa !335
  %570 = icmp ugt i64 %568, %569
  br i1 %570, label %571, label %577

571:                                              ; preds = %567
  %572 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %572(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %568)
          to label %573 unwind label %217

573:                                              ; preds = %571
  %574 = load i64, ptr %12, align 8, !tbaa !344
  %575 = add i64 %574, 1
  %576 = load ptr, ptr %6, align 8, !tbaa !334
  br label %577

577:                                              ; preds = %573, %567
  %578 = phi ptr [ %521, %567 ], [ %576, %573 ]
  %579 = phi i64 [ %568, %567 ], [ %575, %573 ]
  %580 = phi i64 [ %520, %567 ], [ %574, %573 ]
  store i64 %579, ptr %12, align 8, !tbaa !344
  %581 = getelementptr inbounds nuw i32, ptr %578, i64 %580
  store i32 %555, ptr %581, align 4, !tbaa !11
  br label %582

582:                                              ; preds = %469, %577, %554, %517
  %583 = load ptr, ptr %7, align 8, !tbaa !334
  store i32 1, ptr %583, align 4, !tbaa !11
  %584 = load i64, ptr %15, align 8, !tbaa !335
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %592

586:                                              ; preds = %582
  %587 = load ptr, ptr %16, align 8, !tbaa !332
  invoke void %587(ptr noundef nonnull align 8 dereferenceable(172) %7, i64 noundef 1)
          to label %588 unwind label %217

588:                                              ; preds = %586
  %589 = load i64, ptr %15, align 8, !tbaa !335
  %590 = icmp ne i64 %589, 0
  %591 = zext i1 %590 to i64
  br label %592

592:                                              ; preds = %588, %582
  %593 = phi i64 [ %584, %582 ], [ %589, %588 ]
  %594 = phi i64 [ 1, %582 ], [ %591, %588 ]
  store i64 %594, ptr %17, align 8, !tbaa !344
  store i32 0, ptr %19, align 8, !tbaa !336
  %595 = load i32, ptr %33, align 16, !tbaa !340
  %596 = sub nsw i32 %32, %595
  %597 = icmp sgt i32 %596, -1
  br i1 %597, label %598, label %39

598:                                              ; preds = %592
  %599 = lshr i32 %596, 5
  store i32 %599, ptr %19, align 8, !tbaa !336
  %600 = and i32 %596, 31
  %601 = icmp eq i32 %600, 0
  %602 = icmp eq i64 %594, 0
  %603 = select i1 %601, i1 true, i1 %602
  br i1 %603, label %808, label %604

604:                                              ; preds = %598
  %605 = load ptr, ptr %7, align 8, !tbaa !334
  %606 = sub nuw nsw i32 32, %600
  %607 = load i32, ptr %605, align 4, !tbaa !11
  %608 = lshr i32 %607, %606
  %609 = shl i32 %607, %600
  store i32 %609, ptr %605, align 4, !tbaa !11
  %610 = icmp eq i32 %608, 0
  br i1 %610, label %808, label %611

611:                                              ; preds = %604
  %612 = icmp ult i64 %594, %593
  br i1 %612, label %620, label %613

613:                                              ; preds = %611
  %614 = add nuw nsw i64 %594, 1
  %615 = load ptr, ptr %16, align 8, !tbaa !332
  invoke void %615(ptr noundef nonnull align 8 dereferenceable(172) %7, i64 noundef %614)
          to label %616 unwind label %217

616:                                              ; preds = %613
  %617 = load i64, ptr %17, align 8, !tbaa !344
  %618 = add i64 %617, 1
  %619 = load ptr, ptr %7, align 8, !tbaa !334
  br label %620

620:                                              ; preds = %616, %611
  %621 = phi ptr [ %605, %611 ], [ %619, %616 ]
  %622 = phi i64 [ 2, %611 ], [ %618, %616 ]
  %623 = phi i64 [ 1, %611 ], [ %617, %616 ]
  store i64 %622, ptr %17, align 8, !tbaa !344
  %624 = getelementptr inbounds nuw i32, ptr %621, i64 %623
  store i32 %608, ptr %624, align 4, !tbaa !11
  br label %808

625:                                              ; preds = %287
  %626 = load i128, ptr %0, align 16, !tbaa !342
  %627 = icmp eq i128 %626, 0
  br i1 %627, label %39, label %628

628:                                              ; preds = %625, %628
  %629 = phi i128 [ %634, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %632, %628 ], [ 0, %625 ]
  %631 = trunc i128 %629 to i32
  %632 = add nuw nsw i64 %630, 1
  %633 = getelementptr inbounds nuw i32, ptr %13, i64 %630
  store i32 %631, ptr %633, align 4, !tbaa !11
  %634 = lshr i128 %629, 32
  %635 = icmp ult i128 %629, 4294967296
  br i1 %635, label %636, label %628, !llvm.loop !343

636:                                              ; preds = %628
  %637 = icmp samesign ult i64 %630, 32
  br i1 %637, label %638, label %639

638:                                              ; preds = %636
  store i64 %632, ptr %12, align 8, !tbaa !344
  store i32 0, ptr %14, align 8, !tbaa !336
  br label %644

639:                                              ; preds = %636
  invoke void @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %632)
          to label %640 unwind label %217

640:                                              ; preds = %639
  %641 = load i64, ptr %10, align 8, !tbaa !335
  %642 = call noundef i64 @llvm.umin.i64(i64 %632, i64 %641)
  store i64 %642, ptr %12, align 8, !tbaa !344
  store i32 0, ptr %14, align 8, !tbaa !336
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %707, label %644

644:                                              ; preds = %638, %640
  %645 = phi i64 [ %632, %638 ], [ %642, %640 ]
  %646 = phi i64 [ 32, %638 ], [ %641, %640 ]
  %647 = load ptr, ptr %6, align 8, !tbaa !334
  %648 = xor i32 %30, 31
  %649 = icmp ult i64 %645, 8
  br i1 %649, label %677, label %650

650:                                              ; preds = %644
  %651 = and i64 %645, -8
  %652 = insertelement <4 x i32> poison, i32 %648, i64 0
  %653 = shufflevector <4 x i32> %652, <4 x i32> poison, <4 x i32> zeroinitializer
  %654 = insertelement <4 x i32> poison, i32 %32, i64 0
  %655 = shufflevector <4 x i32> %654, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %656

656:                                              ; preds = %656, %650
  %657 = phi i64 [ 0, %650 ], [ %671, %656 ]
  %658 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %650 ], [ %664, %656 ]
  %659 = getelementptr inbounds nuw i32, ptr %647, i64 %657
  %660 = getelementptr inbounds nuw i8, ptr %659, i64 16
  %661 = load <4 x i32>, ptr %659, align 4, !tbaa !11
  %662 = load <4 x i32>, ptr %660, align 4, !tbaa !11
  %663 = lshr <4 x i32> %661, %653
  %664 = lshr <4 x i32> %662, %653
  %665 = shufflevector <4 x i32> %658, <4 x i32> %663, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %666 = shufflevector <4 x i32> %663, <4 x i32> %664, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %667 = shl <4 x i32> %661, %655
  %668 = shl <4 x i32> %662, %655
  %669 = add <4 x i32> %667, %665
  %670 = add <4 x i32> %668, %666
  store <4 x i32> %669, ptr %659, align 4, !tbaa !11
  store <4 x i32> %670, ptr %660, align 4, !tbaa !11
  %671 = add nuw i64 %657, 8
  %672 = icmp eq i64 %671, %651
  br i1 %672, label %673, label %656, !llvm.loop !359

673:                                              ; preds = %656
  %674 = extractelement <4 x i32> %664, i64 3
  %675 = extractelement <4 x i32> %664, i64 3
  %676 = icmp eq i64 %645, %651
  br i1 %676, label %680, label %677

677:                                              ; preds = %644, %673
  %678 = phi i64 [ 0, %644 ], [ %651, %673 ]
  %679 = phi i32 [ 0, %644 ], [ %675, %673 ]
  br label %683

680:                                              ; preds = %683, %673
  %681 = phi i32 [ %674, %673 ], [ %688, %683 ]
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %707, label %693

683:                                              ; preds = %677, %683
  %684 = phi i64 [ %691, %683 ], [ %678, %677 ]
  %685 = phi i32 [ %688, %683 ], [ %679, %677 ]
  %686 = getelementptr inbounds nuw i32, ptr %647, i64 %684
  %687 = load i32, ptr %686, align 4, !tbaa !11
  %688 = lshr i32 %687, %648
  %689 = shl i32 %687, %32
  %690 = add i32 %689, %685
  store i32 %690, ptr %686, align 4, !tbaa !11
  %691 = add nuw nsw i64 %684, 1
  %692 = icmp eq i64 %691, %645
  br i1 %692, label %680, label %683, !llvm.loop !360

693:                                              ; preds = %680
  %694 = add nuw i64 %645, 1
  %695 = icmp ult i64 %632, %646
  br i1 %695, label %702, label %696

696:                                              ; preds = %693
  %697 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %697(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %694)
          to label %698 unwind label %217

698:                                              ; preds = %696
  %699 = load i64, ptr %12, align 8, !tbaa !344
  %700 = add i64 %699, 1
  %701 = load ptr, ptr %6, align 8, !tbaa !334
  br label %702

702:                                              ; preds = %698, %693
  %703 = phi ptr [ %647, %693 ], [ %701, %698 ]
  %704 = phi i64 [ %694, %693 ], [ %700, %698 ]
  %705 = phi i64 [ %645, %693 ], [ %699, %698 ]
  store i64 %704, ptr %12, align 8, !tbaa !344
  %706 = getelementptr inbounds nuw i32, ptr %703, i64 %705
  store i32 %681, ptr %706, align 4, !tbaa !11
  br label %707

707:                                              ; preds = %702, %680, %640
  %708 = load i32, ptr %4, align 4, !tbaa !11
  invoke void @_ZN3fmt3v116detail6bigint12assign_pow10Ei(ptr noundef nonnull align 8 dereferenceable(172) %7, i32 noundef %708)
          to label %709 unwind label %217

709:                                              ; preds = %707
  %710 = load i32, ptr %33, align 16, !tbaa !340
  %711 = sub nsw i32 %32, %710
  %712 = icmp sgt i32 %711, -1
  br i1 %712, label %713, label %39

713:                                              ; preds = %709
  %714 = lshr i32 %711, 5
  %715 = load i32, ptr %19, align 8, !tbaa !336
  %716 = add nsw i32 %715, %714
  store i32 %716, ptr %19, align 8, !tbaa !336
  %717 = and i32 %711, 31
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %784, label %719

719:                                              ; preds = %713
  %720 = load i64, ptr %17, align 8, !tbaa !344
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %784, label %722

722:                                              ; preds = %719
  %723 = load ptr, ptr %7, align 8, !tbaa !334
  %724 = sub nuw nsw i32 32, %717
  %725 = icmp ult i64 %720, 8
  br i1 %725, label %753, label %726

726:                                              ; preds = %722
  %727 = and i64 %720, -8
  %728 = insertelement <4 x i32> poison, i32 %724, i64 0
  %729 = shufflevector <4 x i32> %728, <4 x i32> poison, <4 x i32> zeroinitializer
  %730 = insertelement <4 x i32> poison, i32 %717, i64 0
  %731 = shufflevector <4 x i32> %730, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %732

732:                                              ; preds = %732, %726
  %733 = phi i64 [ 0, %726 ], [ %747, %732 ]
  %734 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %726 ], [ %740, %732 ]
  %735 = getelementptr inbounds nuw i32, ptr %723, i64 %733
  %736 = getelementptr inbounds nuw i8, ptr %735, i64 16
  %737 = load <4 x i32>, ptr %735, align 4, !tbaa !11
  %738 = load <4 x i32>, ptr %736, align 4, !tbaa !11
  %739 = lshr <4 x i32> %737, %729
  %740 = lshr <4 x i32> %738, %729
  %741 = shufflevector <4 x i32> %734, <4 x i32> %739, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %742 = shufflevector <4 x i32> %739, <4 x i32> %740, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %743 = shl <4 x i32> %737, %731
  %744 = shl <4 x i32> %738, %731
  %745 = add <4 x i32> %743, %741
  %746 = add <4 x i32> %744, %742
  store <4 x i32> %745, ptr %735, align 4, !tbaa !11
  store <4 x i32> %746, ptr %736, align 4, !tbaa !11
  %747 = add nuw i64 %733, 8
  %748 = icmp eq i64 %747, %727
  br i1 %748, label %749, label %732, !llvm.loop !361

749:                                              ; preds = %732
  %750 = extractelement <4 x i32> %740, i64 3
  %751 = extractelement <4 x i32> %740, i64 3
  %752 = icmp eq i64 %720, %727
  br i1 %752, label %756, label %753

753:                                              ; preds = %722, %749
  %754 = phi i64 [ 0, %722 ], [ %727, %749 ]
  %755 = phi i32 [ 0, %722 ], [ %751, %749 ]
  br label %759

756:                                              ; preds = %759, %749
  %757 = phi i32 [ %750, %749 ], [ %764, %759 ]
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %784, label %769

759:                                              ; preds = %753, %759
  %760 = phi i64 [ %767, %759 ], [ %754, %753 ]
  %761 = phi i32 [ %764, %759 ], [ %755, %753 ]
  %762 = getelementptr inbounds nuw i32, ptr %723, i64 %760
  %763 = load i32, ptr %762, align 4, !tbaa !11
  %764 = lshr i32 %763, %724
  %765 = shl i32 %763, %717
  %766 = add i32 %765, %761
  store i32 %766, ptr %762, align 4, !tbaa !11
  %767 = add nuw i64 %760, 1
  %768 = icmp eq i64 %767, %720
  br i1 %768, label %756, label %759, !llvm.loop !362

769:                                              ; preds = %756
  %770 = add i64 %720, 1
  %771 = load i64, ptr %15, align 8, !tbaa !335
  %772 = icmp ugt i64 %770, %771
  br i1 %772, label %773, label %779

773:                                              ; preds = %769
  %774 = load ptr, ptr %16, align 8, !tbaa !332
  invoke void %774(ptr noundef nonnull align 8 dereferenceable(172) %7, i64 noundef %770)
          to label %775 unwind label %217

775:                                              ; preds = %773
  %776 = load i64, ptr %17, align 8, !tbaa !344
  %777 = add i64 %776, 1
  %778 = load ptr, ptr %7, align 8, !tbaa !334
  br label %779

779:                                              ; preds = %775, %769
  %780 = phi ptr [ %723, %769 ], [ %778, %775 ]
  %781 = phi i64 [ %770, %769 ], [ %777, %775 ]
  %782 = phi i64 [ %720, %769 ], [ %776, %775 ]
  store i64 %781, ptr %17, align 8, !tbaa !344
  %783 = getelementptr inbounds nuw i32, ptr %780, i64 %782
  store i32 %757, ptr %783, align 4, !tbaa !11
  br label %784

784:                                              ; preds = %779, %756, %719, %713
  %785 = load ptr, ptr %8, align 8, !tbaa !334
  store i32 1, ptr %785, align 4, !tbaa !11
  %786 = load i64, ptr %20, align 8, !tbaa !335
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %788, label %794

788:                                              ; preds = %784
  %789 = load ptr, ptr %21, align 8, !tbaa !332
  invoke void %789(ptr noundef nonnull align 8 dereferenceable(172) %8, i64 noundef 1)
          to label %790 unwind label %217

790:                                              ; preds = %788
  %791 = load i64, ptr %20, align 8, !tbaa !335
  %792 = icmp ne i64 %791, 0
  %793 = zext i1 %792 to i64
  br label %794

794:                                              ; preds = %790, %784
  %795 = phi i64 [ 1, %784 ], [ %793, %790 ]
  store i64 %795, ptr %22, align 8, !tbaa !344
  store i32 0, ptr %24, align 8, !tbaa !336
  br i1 %31, label %808, label %796

796:                                              ; preds = %794
  %797 = load ptr, ptr %9, align 8, !tbaa !334
  store i32 2, ptr %797, align 4, !tbaa !11
  %798 = load i64, ptr %25, align 8, !tbaa !335
  %799 = icmp eq i64 %798, 0
  br i1 %799, label %800, label %806

800:                                              ; preds = %796
  %801 = load ptr, ptr %26, align 8, !tbaa !332
  invoke void %801(ptr noundef nonnull align 8 dereferenceable(172) %9, i64 noundef 1)
          to label %802 unwind label %217

802:                                              ; preds = %800
  %803 = load i64, ptr %25, align 8, !tbaa !335
  %804 = icmp ne i64 %803, 0
  %805 = zext i1 %804 to i64
  br label %806

806:                                              ; preds = %796, %802
  %807 = phi i64 [ 1, %796 ], [ %805, %802 ]
  store i64 %807, ptr %27, align 8, !tbaa !344
  store i32 0, ptr %29, align 8, !tbaa !336
  br label %808

808:                                              ; preds = %620, %604, %598, %282, %259, %222, %806, %794
  %809 = phi ptr [ null, %794 ], [ %9, %806 ], [ %220, %222 ], [ %220, %259 ], [ %220, %282 ], [ %466, %598 ], [ %466, %604 ], [ %466, %620 ]
  %810 = load i128, ptr %0, align 16, !tbaa !342
  %811 = trunc i128 %810 to i32
  %812 = and i32 %811, 1
  %813 = xor i32 %812, 1
  %814 = icmp eq ptr %809, null
  %815 = select i1 %814, ptr %8, ptr %809
  %816 = icmp slt i32 %2, 0
  %817 = and i32 %1, 2
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %1129, label %819

819:                                              ; preds = %808
  %820 = load i64, ptr %12, align 8, !tbaa !344
  %821 = trunc i64 %820 to i32
  %822 = load i32, ptr %14, align 8, !tbaa !336
  %823 = add nsw i32 %822, %821
  %824 = getelementptr inbounds nuw i8, ptr %809, i64 8
  %825 = select i1 %814, ptr %22, ptr %824
  %826 = load i64, ptr %825, align 8, !tbaa !344
  %827 = trunc i64 %826 to i32
  %828 = getelementptr inbounds nuw i8, ptr %809, i64 168
  %829 = select i1 %814, ptr %24, ptr %828
  %830 = load i32, ptr %829, align 8, !tbaa !336
  %831 = add nsw i32 %830, %827
  %832 = call noundef i32 @llvm.smax.i32(i32 %823, i32 %831)
  %833 = load i64, ptr %17, align 8, !tbaa !344
  %834 = trunc i64 %833 to i32
  %835 = load i32, ptr %19, align 8, !tbaa !336
  %836 = add nsw i32 %835, %834
  %837 = add nsw i32 %832, 1
  %838 = icmp slt i32 %837, %836
  br i1 %838, label %905, label %839

839:                                              ; preds = %819
  %840 = icmp sgt i32 %832, %836
  br i1 %840, label %905, label %841

841:                                              ; preds = %839
  %842 = call noundef i32 @llvm.smin.i32(i32 %822, i32 %830)
  %843 = call noundef i32 @llvm.smin.i32(i32 %842, i32 %835)
  %844 = icmp sgt i32 %836, %843
  br i1 %844, label %845, label %905

845:                                              ; preds = %841
  %846 = load ptr, ptr %6, align 8
  %847 = load ptr, ptr %815, align 8
  %848 = load ptr, ptr %7, align 8
  %849 = sext i32 %835 to i64
  %850 = shl i64 %833, 32
  %851 = ashr exact i64 %850, 32
  %852 = add nsw i64 %851, %849
  %853 = sext i32 %836 to i64
  %854 = sext i32 %831 to i64
  %855 = sext i32 %830 to i64
  %856 = sext i32 %823 to i64
  %857 = sext i32 %822 to i64
  %858 = sext i32 %843 to i64
  br label %859

859:                                              ; preds = %899, %845
  %860 = phi i64 [ %852, %845 ], [ %862, %899 ]
  %861 = phi i64 [ 0, %845 ], [ %900, %899 ]
  %862 = add nsw i64 %860, -1
  %863 = icmp sgt i64 %860, %857
  %864 = icmp sle i64 %860, %856
  %865 = and i1 %863, %864
  br i1 %865, label %866, label %871

866:                                              ; preds = %859
  %867 = sub nsw i64 %862, %857
  %868 = getelementptr inbounds i32, ptr %846, i64 %867
  %869 = load i32, ptr %868, align 4, !tbaa !11
  %870 = zext i32 %869 to i64
  br label %871

871:                                              ; preds = %866, %859
  %872 = phi i64 [ %870, %866 ], [ 0, %859 ]
  %873 = icmp sgt i64 %860, %855
  %874 = icmp sle i64 %860, %854
  %875 = and i1 %873, %874
  br i1 %875, label %876, label %881

876:                                              ; preds = %871
  %877 = sub nsw i64 %862, %855
  %878 = getelementptr inbounds i32, ptr %847, i64 %877
  %879 = load i32, ptr %878, align 4, !tbaa !11
  %880 = zext i32 %879 to i64
  br label %881

881:                                              ; preds = %876, %871
  %882 = phi i64 [ %880, %876 ], [ 0, %871 ]
  %883 = add nuw nsw i64 %882, %872
  %884 = icmp sgt i64 %860, %849
  %885 = icmp sle i64 %860, %853
  %886 = and i1 %884, %885
  br i1 %886, label %887, label %892

887:                                              ; preds = %881
  %888 = sub nsw i64 %862, %849
  %889 = getelementptr inbounds i32, ptr %848, i64 %888
  %890 = load i32, ptr %889, align 4, !tbaa !11
  %891 = zext i32 %890 to i64
  br label %892

892:                                              ; preds = %887, %881
  %893 = phi i64 [ %891, %887 ], [ 0, %881 ]
  %894 = or disjoint i64 %893, %861
  %895 = icmp samesign ugt i64 %883, %894
  br i1 %895, label %905, label %896

896:                                              ; preds = %892
  %897 = sub nuw nsw i64 %894, %883
  %898 = icmp samesign ugt i64 %897, 1
  br i1 %898, label %905, label %899

899:                                              ; preds = %896
  %900 = shl nuw nsw i64 %897, 32
  %901 = icmp sgt i64 %862, %858
  br i1 %901, label %859, label %902, !llvm.loop !363

902:                                              ; preds = %899
  %903 = icmp ne i64 %894, %883
  %904 = sext i1 %903 to i32
  br label %905

905:                                              ; preds = %896, %892, %902, %841, %839, %819
  %906 = phi i32 [ -1, %819 ], [ 1, %839 ], [ 0, %841 ], [ %904, %902 ], [ -1, %896 ], [ 1, %892 ]
  %907 = add nsw i32 %906, %813
  %908 = icmp slt i32 %907, 1
  br i1 %908, label %909, label %1111

909:                                              ; preds = %905
  %910 = load i32, ptr %4, align 4, !tbaa !11
  %911 = add nsw i32 %910, -1
  store i32 %911, ptr %4, align 4, !tbaa !11
  %912 = icmp eq i64 %820, 0
  br i1 %912, label %975, label %913

913:                                              ; preds = %909
  %914 = load ptr, ptr %6, align 8, !tbaa !334
  %915 = and i64 %820, 1
  %916 = icmp eq i64 %820, 1
  br i1 %916, label %919, label %917

917:                                              ; preds = %913
  %918 = and i64 %820, -2
  br label %938

919:                                              ; preds = %938, %913
  %920 = phi i64 [ poison, %913 ], [ %954, %938 ]
  %921 = phi i64 [ poison, %913 ], [ %956, %938 ]
  %922 = phi i64 [ 0, %913 ], [ %957, %938 ]
  %923 = phi i64 [ 0, %913 ], [ %956, %938 ]
  %924 = icmp eq i64 %915, 0
  br i1 %924, label %933, label %925

925:                                              ; preds = %919
  %926 = getelementptr inbounds nuw i32, ptr %914, i64 %922
  %927 = load i32, ptr %926, align 4, !tbaa !11
  %928 = zext i32 %927 to i64
  %929 = mul nuw nsw i64 %928, 10
  %930 = add nuw nsw i64 %929, %923
  %931 = trunc i64 %930 to i32
  store i32 %931, ptr %926, align 4, !tbaa !11
  %932 = lshr i64 %930, 32
  br label %933

933:                                              ; preds = %919, %925
  %934 = phi i64 [ %920, %919 ], [ %930, %925 ]
  %935 = phi i64 [ %921, %919 ], [ %932, %925 ]
  %936 = trunc nuw nsw i64 %935 to i32
  %937 = icmp samesign ult i64 %934, 4294967296
  br i1 %937, label %975, label %960

938:                                              ; preds = %938, %917
  %939 = phi i64 [ 0, %917 ], [ %957, %938 ]
  %940 = phi i64 [ 0, %917 ], [ %956, %938 ]
  %941 = phi i64 [ 0, %917 ], [ %958, %938 ]
  %942 = getelementptr inbounds nuw i32, ptr %914, i64 %939
  %943 = load i32, ptr %942, align 4, !tbaa !11
  %944 = zext i32 %943 to i64
  %945 = mul nuw nsw i64 %944, 10
  %946 = add nuw nsw i64 %945, %940
  %947 = trunc i64 %946 to i32
  store i32 %947, ptr %942, align 4, !tbaa !11
  %948 = lshr i64 %946, 32
  %949 = or disjoint i64 %939, 1
  %950 = getelementptr inbounds nuw i32, ptr %914, i64 %949
  %951 = load i32, ptr %950, align 4, !tbaa !11
  %952 = zext i32 %951 to i64
  %953 = mul nuw nsw i64 %952, 10
  %954 = add nuw nsw i64 %953, %948
  %955 = trunc i64 %954 to i32
  store i32 %955, ptr %950, align 4, !tbaa !11
  %956 = lshr i64 %954, 32
  %957 = add nuw i64 %939, 2
  %958 = add i64 %941, 2
  %959 = icmp eq i64 %958, %918
  br i1 %959, label %919, label %938, !llvm.loop !364

960:                                              ; preds = %933
  %961 = add i64 %820, 1
  %962 = load i64, ptr %10, align 8, !tbaa !335
  %963 = icmp ugt i64 %961, %962
  br i1 %963, label %964, label %970

964:                                              ; preds = %960
  %965 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %965(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %961)
          to label %966 unwind label %1109

966:                                              ; preds = %964
  %967 = load i64, ptr %12, align 8, !tbaa !344
  %968 = add i64 %967, 1
  %969 = load ptr, ptr %6, align 8, !tbaa !334
  br label %970

970:                                              ; preds = %966, %960
  %971 = phi ptr [ %914, %960 ], [ %969, %966 ]
  %972 = phi i64 [ %961, %960 ], [ %968, %966 ]
  %973 = phi i64 [ %820, %960 ], [ %967, %966 ]
  store i64 %972, ptr %12, align 8, !tbaa !344
  %974 = getelementptr inbounds nuw i32, ptr %971, i64 %973
  store i32 %936, ptr %974, align 4, !tbaa !11
  br label %975

975:                                              ; preds = %970, %933, %909
  br i1 %816, label %976, label %1111

976:                                              ; preds = %975
  %977 = load i64, ptr %22, align 8, !tbaa !344
  %978 = icmp eq i64 %977, 0
  br i1 %978, label %1041, label %979

979:                                              ; preds = %976
  %980 = load ptr, ptr %8, align 8, !tbaa !334
  %981 = and i64 %977, 1
  %982 = icmp eq i64 %977, 1
  br i1 %982, label %985, label %983

983:                                              ; preds = %979
  %984 = and i64 %977, -2
  br label %1004

985:                                              ; preds = %1004, %979
  %986 = phi i64 [ poison, %979 ], [ %1020, %1004 ]
  %987 = phi i64 [ poison, %979 ], [ %1022, %1004 ]
  %988 = phi i64 [ 0, %979 ], [ %1023, %1004 ]
  %989 = phi i64 [ 0, %979 ], [ %1022, %1004 ]
  %990 = icmp eq i64 %981, 0
  br i1 %990, label %999, label %991

991:                                              ; preds = %985
  %992 = getelementptr inbounds nuw i32, ptr %980, i64 %988
  %993 = load i32, ptr %992, align 4, !tbaa !11
  %994 = zext i32 %993 to i64
  %995 = mul nuw nsw i64 %994, 10
  %996 = add nuw nsw i64 %995, %989
  %997 = trunc i64 %996 to i32
  store i32 %997, ptr %992, align 4, !tbaa !11
  %998 = lshr i64 %996, 32
  br label %999

999:                                              ; preds = %985, %991
  %1000 = phi i64 [ %986, %985 ], [ %996, %991 ]
  %1001 = phi i64 [ %987, %985 ], [ %998, %991 ]
  %1002 = trunc nuw nsw i64 %1001 to i32
  %1003 = icmp samesign ult i64 %1000, 4294967296
  br i1 %1003, label %1041, label %1026

1004:                                             ; preds = %1004, %983
  %1005 = phi i64 [ 0, %983 ], [ %1023, %1004 ]
  %1006 = phi i64 [ 0, %983 ], [ %1022, %1004 ]
  %1007 = phi i64 [ 0, %983 ], [ %1024, %1004 ]
  %1008 = getelementptr inbounds nuw i32, ptr %980, i64 %1005
  %1009 = load i32, ptr %1008, align 4, !tbaa !11
  %1010 = zext i32 %1009 to i64
  %1011 = mul nuw nsw i64 %1010, 10
  %1012 = add nuw nsw i64 %1011, %1006
  %1013 = trunc i64 %1012 to i32
  store i32 %1013, ptr %1008, align 4, !tbaa !11
  %1014 = lshr i64 %1012, 32
  %1015 = or disjoint i64 %1005, 1
  %1016 = getelementptr inbounds nuw i32, ptr %980, i64 %1015
  %1017 = load i32, ptr %1016, align 4, !tbaa !11
  %1018 = zext i32 %1017 to i64
  %1019 = mul nuw nsw i64 %1018, 10
  %1020 = add nuw nsw i64 %1019, %1014
  %1021 = trunc i64 %1020 to i32
  store i32 %1021, ptr %1016, align 4, !tbaa !11
  %1022 = lshr i64 %1020, 32
  %1023 = add nuw i64 %1005, 2
  %1024 = add i64 %1007, 2
  %1025 = icmp eq i64 %1024, %984
  br i1 %1025, label %985, label %1004, !llvm.loop !364

1026:                                             ; preds = %999
  %1027 = add i64 %977, 1
  %1028 = load i64, ptr %20, align 8, !tbaa !335
  %1029 = icmp ugt i64 %1027, %1028
  br i1 %1029, label %1030, label %1036

1030:                                             ; preds = %1026
  %1031 = load ptr, ptr %21, align 8, !tbaa !332
  invoke void %1031(ptr noundef nonnull align 8 dereferenceable(172) %8, i64 noundef %1027)
          to label %1032 unwind label %1109

1032:                                             ; preds = %1030
  %1033 = load i64, ptr %22, align 8, !tbaa !344
  %1034 = add i64 %1033, 1
  %1035 = load ptr, ptr %8, align 8, !tbaa !334
  br label %1036

1036:                                             ; preds = %1032, %1026
  %1037 = phi ptr [ %980, %1026 ], [ %1035, %1032 ]
  %1038 = phi i64 [ %1027, %1026 ], [ %1034, %1032 ]
  %1039 = phi i64 [ %977, %1026 ], [ %1033, %1032 ]
  store i64 %1038, ptr %22, align 8, !tbaa !344
  %1040 = getelementptr inbounds nuw i32, ptr %1037, i64 %1039
  store i32 %1002, ptr %1040, align 4, !tbaa !11
  br label %1041

1041:                                             ; preds = %1036, %999, %976
  br i1 %814, label %1111, label %1042

1042:                                             ; preds = %1041
  %1043 = load i64, ptr %824, align 8, !tbaa !344
  %1044 = icmp eq i64 %1043, 0
  br i1 %1044, label %1111, label %1045

1045:                                             ; preds = %1042
  %1046 = load ptr, ptr %809, align 8, !tbaa !334
  %1047 = and i64 %1043, 1
  %1048 = icmp eq i64 %1043, 1
  br i1 %1048, label %1051, label %1049

1049:                                             ; preds = %1045
  %1050 = and i64 %1043, -2
  br label %1070

1051:                                             ; preds = %1070, %1045
  %1052 = phi i64 [ poison, %1045 ], [ %1086, %1070 ]
  %1053 = phi i64 [ poison, %1045 ], [ %1088, %1070 ]
  %1054 = phi i64 [ 0, %1045 ], [ %1089, %1070 ]
  %1055 = phi i64 [ 0, %1045 ], [ %1088, %1070 ]
  %1056 = icmp eq i64 %1047, 0
  br i1 %1056, label %1065, label %1057

1057:                                             ; preds = %1051
  %1058 = getelementptr inbounds nuw i32, ptr %1046, i64 %1054
  %1059 = load i32, ptr %1058, align 4, !tbaa !11
  %1060 = zext i32 %1059 to i64
  %1061 = mul nuw nsw i64 %1060, 10
  %1062 = add nuw nsw i64 %1061, %1055
  %1063 = trunc i64 %1062 to i32
  store i32 %1063, ptr %1058, align 4, !tbaa !11
  %1064 = lshr i64 %1062, 32
  br label %1065

1065:                                             ; preds = %1051, %1057
  %1066 = phi i64 [ %1052, %1051 ], [ %1062, %1057 ]
  %1067 = phi i64 [ %1053, %1051 ], [ %1064, %1057 ]
  %1068 = trunc nuw nsw i64 %1067 to i32
  %1069 = icmp samesign ult i64 %1066, 4294967296
  br i1 %1069, label %1111, label %1092

1070:                                             ; preds = %1070, %1049
  %1071 = phi i64 [ 0, %1049 ], [ %1089, %1070 ]
  %1072 = phi i64 [ 0, %1049 ], [ %1088, %1070 ]
  %1073 = phi i64 [ 0, %1049 ], [ %1090, %1070 ]
  %1074 = getelementptr inbounds nuw i32, ptr %1046, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !11
  %1076 = zext i32 %1075 to i64
  %1077 = mul nuw nsw i64 %1076, 10
  %1078 = add nuw nsw i64 %1077, %1072
  %1079 = trunc i64 %1078 to i32
  store i32 %1079, ptr %1074, align 4, !tbaa !11
  %1080 = lshr i64 %1078, 32
  %1081 = or disjoint i64 %1071, 1
  %1082 = getelementptr inbounds nuw i32, ptr %1046, i64 %1081
  %1083 = load i32, ptr %1082, align 4, !tbaa !11
  %1084 = zext i32 %1083 to i64
  %1085 = mul nuw nsw i64 %1084, 10
  %1086 = add nuw nsw i64 %1085, %1080
  %1087 = trunc i64 %1086 to i32
  store i32 %1087, ptr %1082, align 4, !tbaa !11
  %1088 = lshr i64 %1086, 32
  %1089 = add nuw i64 %1071, 2
  %1090 = add i64 %1073, 2
  %1091 = icmp eq i64 %1090, %1050
  br i1 %1091, label %1051, label %1070, !llvm.loop !364

1092:                                             ; preds = %1065
  %1093 = add i64 %1043, 1
  %1094 = getelementptr inbounds nuw i8, ptr %809, i64 16
  %1095 = load i64, ptr %1094, align 8, !tbaa !335
  %1096 = icmp ugt i64 %1093, %1095
  br i1 %1096, label %1097, label %1104

1097:                                             ; preds = %1092
  %1098 = getelementptr inbounds nuw i8, ptr %809, i64 24
  %1099 = load ptr, ptr %1098, align 8, !tbaa !332
  invoke void %1099(ptr noundef nonnull align 8 dereferenceable(172) %809, i64 noundef %1093)
          to label %1100 unwind label %1109

1100:                                             ; preds = %1097
  %1101 = load i64, ptr %824, align 8, !tbaa !344
  %1102 = add i64 %1101, 1
  %1103 = load ptr, ptr %809, align 8, !tbaa !334
  br label %1104

1104:                                             ; preds = %1100, %1092
  %1105 = phi ptr [ %1046, %1092 ], [ %1103, %1100 ]
  %1106 = phi i64 [ %1093, %1092 ], [ %1102, %1100 ]
  %1107 = phi i64 [ %1043, %1092 ], [ %1101, %1100 ]
  store i64 %1106, ptr %824, align 8, !tbaa !344
  %1108 = getelementptr inbounds nuw i32, ptr %1105, i64 %1107
  store i32 %1068, ptr %1108, align 4, !tbaa !11
  br label %1111

1109:                                             ; preds = %1728, %1122, %1097, %1030, %964
  %1110 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1111:                                             ; preds = %1104, %1065, %1042, %975, %1041, %905
  %1112 = and i32 %1, 4
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1129, label %1114

1114:                                             ; preds = %1111
  %1115 = load i32, ptr %4, align 4, !tbaa !11
  %1116 = icmp sgt i32 %1115, -1
  %1117 = sub nsw i32 2147483646, %1115
  %1118 = icmp sgt i32 %2, %1117
  %1119 = select i1 %1116, i1 %1118, i1 false
  br i1 %1119, label %1120, label %1126

1120:                                             ; preds = %1114
  %1121 = call ptr @__cxa_allocate_exception(i64 16) #30
  invoke void @_ZNSt13runtime_errorC2EPKc(ptr noundef nonnull align 8 dereferenceable(16) %1121, ptr noundef nonnull @.str.37)
          to label %1122 unwind label %1124

1122:                                             ; preds = %1120
  store ptr getelementptr inbounds nuw inrange(-16, 24) (i8, ptr @_ZTVN3fmt3v1112format_errorE, i64 16), ptr %1121, align 8, !tbaa !82
  invoke void @__cxa_throw(ptr nonnull %1121, ptr nonnull @_ZTIN3fmt3v1112format_errorE, ptr nonnull @_ZNSt13runtime_errorD2Ev) #31
          to label %1123 unwind label %1109

1123:                                             ; preds = %1122
  unreachable

1124:                                             ; preds = %1120
  %1125 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %1121) #30
  br label %1964

1126:                                             ; preds = %1114
  %1127 = add i32 %2, 1
  %1128 = add i32 %1127, %1115
  br label %1129

1129:                                             ; preds = %1126, %1111, %808
  %1130 = phi i32 [ %2, %808 ], [ %2, %1111 ], [ %1128, %1126 ]
  br i1 %816, label %1131, label %1570

1131:                                             ; preds = %1129
  %1132 = load ptr, ptr %3, align 8, !tbaa !17
  %1133 = sub nsw i32 0, %813
  %1134 = getelementptr inbounds nuw i8, ptr %809, i64 8
  %1135 = select i1 %814, ptr %22, ptr %1134
  %1136 = getelementptr inbounds nuw i8, ptr %809, i64 168
  %1137 = select i1 %814, ptr %24, ptr %1136
  %1138 = getelementptr inbounds nuw i8, ptr %809, i64 16
  %1139 = getelementptr inbounds nuw i8, ptr %809, i64 24
  br label %1140

1140:                                             ; preds = %1569, %1131
  %1141 = phi i64 [ 0, %1131 ], [ %1272, %1569 ]
  %1142 = invoke noundef i32 @_ZN3fmt3v116detail6bigint13divmod_assignERKS2_(ptr noundef nonnull align 8 dereferenceable(172) %6, ptr noundef nonnull align 8 dereferenceable(172) %7)
          to label %1143 unwind label %1277

1143:                                             ; preds = %1140
  %1144 = load i64, ptr %12, align 8, !tbaa !344
  %1145 = trunc i64 %1144 to i32
  %1146 = load i32, ptr %14, align 8, !tbaa !336
  %1147 = add nsw i32 %1146, %1145
  %1148 = load i64, ptr %22, align 8, !tbaa !344
  %1149 = trunc i64 %1148 to i32
  %1150 = load i32, ptr %24, align 8, !tbaa !336
  %1151 = add nsw i32 %1150, %1149
  %1152 = icmp eq i32 %1147, %1151
  br i1 %1152, label %1156, label %1153

1153:                                             ; preds = %1143
  %1154 = icmp sgt i32 %1147, %1151
  %1155 = select i1 %1154, i32 1, i32 -1
  br label %1187

1156:                                             ; preds = %1143
  %1157 = sub i32 %1145, %1149
  %1158 = call i32 @llvm.smax.i32(i32 %1157, i32 0)
  %1159 = load ptr, ptr %6, align 8
  %1160 = load ptr, ptr %8, align 8
  %1161 = shl i64 %1144, 32
  %1162 = ashr exact i64 %1161, 32
  %1163 = zext nneg i32 %1158 to i64
  %1164 = shl i64 %1148, 32
  %1165 = ashr exact i64 %1164, 32
  %1166 = call i64 @llvm.smin.i64(i64 %1162, i64 %1163)
  br label %1167

1167:                                             ; preds = %1171, %1156
  %1168 = phi i64 [ %1173, %1171 ], [ %1165, %1156 ]
  %1169 = phi i64 [ %1172, %1171 ], [ %1162, %1156 ]
  %1170 = icmp sgt i64 %1169, %1163
  br i1 %1170, label %1171, label %1179

1171:                                             ; preds = %1167
  %1172 = add nsw i64 %1169, -1
  %1173 = add nsw i64 %1168, -1
  %1174 = getelementptr inbounds i32, ptr %1159, i64 %1172
  %1175 = load i32, ptr %1174, align 4, !tbaa !11
  %1176 = getelementptr inbounds i32, ptr %1160, i64 %1173
  %1177 = load i32, ptr %1176, align 4, !tbaa !11
  %1178 = icmp eq i32 %1175, %1177
  br i1 %1178, label %1167, label %1184, !llvm.loop !365

1179:                                             ; preds = %1167
  %1180 = icmp eq i64 %1166, %1168
  br i1 %1180, label %1187, label %1181

1181:                                             ; preds = %1179
  %1182 = icmp sgt i64 %1166, %1168
  %1183 = select i1 %1182, i32 1, i32 -1
  br label %1187

1184:                                             ; preds = %1171
  %1185 = icmp ugt i32 %1175, %1177
  %1186 = select i1 %1185, i32 1, i32 -1
  br label %1187

1187:                                             ; preds = %1153, %1179, %1181, %1184
  %1188 = phi i32 [ %1155, %1153 ], [ %1183, %1181 ], [ 0, %1179 ], [ %1186, %1184 ]
  %1189 = icmp slt i32 %1188, %813
  %1190 = load i64, ptr %1135, align 8, !tbaa !344
  %1191 = trunc i64 %1190 to i32
  %1192 = load i32, ptr %1137, align 8, !tbaa !336
  %1193 = add nsw i32 %1192, %1191
  %1194 = call noundef i32 @llvm.smax.i32(i32 %1147, i32 %1193)
  %1195 = load i64, ptr %17, align 8, !tbaa !344
  %1196 = trunc i64 %1195 to i32
  %1197 = load i32, ptr %19, align 8, !tbaa !336
  %1198 = add nsw i32 %1197, %1196
  %1199 = add nsw i32 %1194, 1
  %1200 = icmp slt i32 %1199, %1198
  br i1 %1200, label %1267, label %1201

1201:                                             ; preds = %1187
  %1202 = icmp sgt i32 %1194, %1198
  br i1 %1202, label %1267, label %1203

1203:                                             ; preds = %1201
  %1204 = call noundef i32 @llvm.smin.i32(i32 %1146, i32 %1192)
  %1205 = call noundef i32 @llvm.smin.i32(i32 %1204, i32 %1197)
  %1206 = icmp sgt i32 %1198, %1205
  br i1 %1206, label %1207, label %1267

1207:                                             ; preds = %1203
  %1208 = load ptr, ptr %6, align 8
  %1209 = load ptr, ptr %815, align 8
  %1210 = load ptr, ptr %7, align 8
  %1211 = sext i32 %1197 to i64
  %1212 = shl i64 %1195, 32
  %1213 = ashr exact i64 %1212, 32
  %1214 = add nsw i64 %1213, %1211
  %1215 = sext i32 %1198 to i64
  %1216 = sext i32 %1193 to i64
  %1217 = sext i32 %1192 to i64
  %1218 = sext i32 %1147 to i64
  %1219 = sext i32 %1146 to i64
  %1220 = sext i32 %1205 to i64
  br label %1221

1221:                                             ; preds = %1261, %1207
  %1222 = phi i64 [ %1214, %1207 ], [ %1224, %1261 ]
  %1223 = phi i64 [ 0, %1207 ], [ %1262, %1261 ]
  %1224 = add nsw i64 %1222, -1
  %1225 = icmp sgt i64 %1222, %1219
  %1226 = icmp sle i64 %1222, %1218
  %1227 = and i1 %1225, %1226
  br i1 %1227, label %1228, label %1233

1228:                                             ; preds = %1221
  %1229 = sub nsw i64 %1224, %1219
  %1230 = getelementptr inbounds i32, ptr %1208, i64 %1229
  %1231 = load i32, ptr %1230, align 4, !tbaa !11
  %1232 = zext i32 %1231 to i64
  br label %1233

1233:                                             ; preds = %1228, %1221
  %1234 = phi i64 [ %1232, %1228 ], [ 0, %1221 ]
  %1235 = icmp sgt i64 %1222, %1217
  %1236 = icmp sle i64 %1222, %1216
  %1237 = and i1 %1235, %1236
  br i1 %1237, label %1238, label %1243

1238:                                             ; preds = %1233
  %1239 = sub nsw i64 %1224, %1217
  %1240 = getelementptr inbounds i32, ptr %1209, i64 %1239
  %1241 = load i32, ptr %1240, align 4, !tbaa !11
  %1242 = zext i32 %1241 to i64
  br label %1243

1243:                                             ; preds = %1238, %1233
  %1244 = phi i64 [ %1242, %1238 ], [ 0, %1233 ]
  %1245 = add nuw nsw i64 %1244, %1234
  %1246 = icmp sgt i64 %1222, %1211
  %1247 = icmp sle i64 %1222, %1215
  %1248 = and i1 %1246, %1247
  br i1 %1248, label %1249, label %1254

1249:                                             ; preds = %1243
  %1250 = sub nsw i64 %1224, %1211
  %1251 = getelementptr inbounds i32, ptr %1210, i64 %1250
  %1252 = load i32, ptr %1251, align 4, !tbaa !11
  %1253 = zext i32 %1252 to i64
  br label %1254

1254:                                             ; preds = %1249, %1243
  %1255 = phi i64 [ %1253, %1249 ], [ 0, %1243 ]
  %1256 = or disjoint i64 %1255, %1223
  %1257 = icmp samesign ugt i64 %1245, %1256
  br i1 %1257, label %1267, label %1258

1258:                                             ; preds = %1254
  %1259 = sub nuw nsw i64 %1256, %1245
  %1260 = icmp samesign ugt i64 %1259, 1
  br i1 %1260, label %1267, label %1261

1261:                                             ; preds = %1258
  %1262 = shl nuw nsw i64 %1259, 32
  %1263 = icmp sgt i64 %1224, %1220
  br i1 %1263, label %1221, label %1264, !llvm.loop !363

1264:                                             ; preds = %1261
  %1265 = icmp ne i64 %1256, %1245
  %1266 = sext i1 %1265 to i32
  br label %1267

1267:                                             ; preds = %1258, %1254, %1264, %1203, %1201, %1187
  %1268 = phi i32 [ -1, %1187 ], [ 1, %1201 ], [ 0, %1203 ], [ %1266, %1264 ], [ -1, %1258 ], [ 1, %1254 ]
  %1269 = icmp sgt i32 %1268, %1133
  %1270 = trunc i32 %1142 to i8
  %1271 = add i8 %1270, 48
  %1272 = add nuw nsw i64 %1141, 1
  %1273 = getelementptr inbounds nuw i8, ptr %1132, i64 %1141
  store i8 %1271, ptr %1273, align 1, !tbaa !10
  %1274 = select i1 %1189, i1 true, i1 %1269
  br i1 %1274, label %1275, label %1373

1275:                                             ; preds = %1267
  %1276 = trunc nuw nsw i64 %1141 to i32
  br i1 %1189, label %1283, label %1351

1277:                                             ; preds = %1140
  %1278 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1279:                                             ; preds = %1427, %1492, %1558
  %1280 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1281:                                             ; preds = %1362
  %1282 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1283:                                             ; preds = %1275
  br i1 %1269, label %1284, label %1357

1284:                                             ; preds = %1283
  %1285 = load i64, ptr %12, align 8, !tbaa !344
  %1286 = trunc i64 %1285 to i32
  %1287 = load i32, ptr %14, align 8, !tbaa !336
  %1288 = add nsw i32 %1287, %1286
  %1289 = load i64, ptr %17, align 8, !tbaa !344
  %1290 = trunc i64 %1289 to i32
  %1291 = load i32, ptr %19, align 8, !tbaa !336
  %1292 = add nsw i32 %1291, %1290
  %1293 = add nsw i32 %1288, 1
  %1294 = icmp slt i32 %1293, %1292
  br i1 %1294, label %1357, label %1295

1295:                                             ; preds = %1284
  %1296 = icmp sgt i32 %1288, %1292
  br i1 %1296, label %1351, label %1297

1297:                                             ; preds = %1295
  %1298 = call noundef i32 @llvm.smin.i32(i32 %1287, i32 %1291)
  %1299 = icmp sgt i32 %1292, %1298
  br i1 %1299, label %1300, label %1346

1300:                                             ; preds = %1297
  %1301 = load ptr, ptr %6, align 8
  %1302 = load ptr, ptr %7, align 8
  %1303 = sext i32 %1291 to i64
  %1304 = shl i64 %1289, 32
  %1305 = ashr exact i64 %1304, 32
  %1306 = add nsw i64 %1305, %1303
  %1307 = sext i32 %1292 to i64
  %1308 = sext i32 %1288 to i64
  %1309 = sext i32 %1287 to i64
  %1310 = sext i32 %1298 to i64
  br label %1311

1311:                                             ; preds = %1341, %1300
  %1312 = phi i64 [ %1306, %1300 ], [ %1314, %1341 ]
  %1313 = phi i64 [ 0, %1300 ], [ %1342, %1341 ]
  %1314 = add nsw i64 %1312, -1
  %1315 = icmp sgt i64 %1312, %1309
  %1316 = icmp sle i64 %1312, %1308
  %1317 = and i1 %1315, %1316
  br i1 %1317, label %1318, label %1324

1318:                                             ; preds = %1311
  %1319 = sub nsw i64 %1314, %1309
  %1320 = getelementptr inbounds i32, ptr %1301, i64 %1319
  %1321 = load i32, ptr %1320, align 4, !tbaa !11
  %1322 = zext i32 %1321 to i64
  %1323 = shl nuw nsw i64 %1322, 1
  br label %1324

1324:                                             ; preds = %1311, %1318
  %1325 = phi i64 [ %1323, %1318 ], [ 0, %1311 ]
  %1326 = icmp sgt i64 %1312, %1303
  %1327 = icmp sle i64 %1312, %1307
  %1328 = and i1 %1326, %1327
  br i1 %1328, label %1329, label %1334

1329:                                             ; preds = %1324
  %1330 = sub nsw i64 %1314, %1303
  %1331 = getelementptr inbounds i32, ptr %1302, i64 %1330
  %1332 = load i32, ptr %1331, align 4, !tbaa !11
  %1333 = zext i32 %1332 to i64
  br label %1334

1334:                                             ; preds = %1329, %1324
  %1335 = phi i64 [ %1333, %1329 ], [ 0, %1324 ]
  %1336 = or disjoint i64 %1335, %1313
  %1337 = icmp samesign ugt i64 %1325, %1336
  br i1 %1337, label %1351, label %1338

1338:                                             ; preds = %1334
  %1339 = sub nuw nsw i64 %1336, %1325
  %1340 = icmp samesign ugt i64 %1339, 1
  br i1 %1340, label %1357, label %1341

1341:                                             ; preds = %1338
  %1342 = shl nuw nsw i64 %1339, 32
  %1343 = icmp sgt i64 %1314, %1310
  br i1 %1343, label %1311, label %1344, !llvm.loop !363

1344:                                             ; preds = %1341
  %1345 = icmp ne i64 %1336, %1325
  br label %1346

1346:                                             ; preds = %1297, %1344
  %1347 = phi i1 [ %1345, %1344 ], [ false, %1297 ]
  %1348 = and i32 %1142, 1
  %1349 = icmp eq i32 %1348, 0
  %1350 = or i1 %1349, %1347
  br i1 %1350, label %1357, label %1351

1351:                                             ; preds = %1334, %1346, %1295, %1275
  %1352 = and i64 %1272, 4294967295
  %1353 = getelementptr i8, ptr %1132, i64 %1352
  %1354 = getelementptr i8, ptr %1353, i64 -1
  %1355 = load i8, ptr %1354, align 1, !tbaa !10
  %1356 = add i8 %1355, 1
  store i8 %1356, ptr %1354, align 1, !tbaa !10
  br label %1357

1357:                                             ; preds = %1338, %1351, %1283, %1346, %1284
  %1358 = and i64 %1272, 4294967295
  %1359 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %1360 = load i64, ptr %1359, align 8, !tbaa !18
  %1361 = icmp ult i64 %1360, %1358
  br i1 %1361, label %1362, label %1367

1362:                                             ; preds = %1357
  %1363 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %1364 = load ptr, ptr %1363, align 8, !tbaa !13
  invoke void %1364(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %1358)
          to label %1365 unwind label %1281

1365:                                             ; preds = %1362
  %1366 = load i64, ptr %1359, align 8, !tbaa !18
  br label %1367

1367:                                             ; preds = %1365, %1357
  %1368 = phi i64 [ %1360, %1357 ], [ %1366, %1365 ]
  %1369 = call noundef i64 @llvm.umin.i64(i64 %1358, i64 %1368)
  %1370 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store i64 %1369, ptr %1370, align 8, !tbaa !37
  %1371 = load i32, ptr %4, align 4, !tbaa !11
  %1372 = sub nsw i32 %1371, %1276
  store i32 %1372, ptr %4, align 4, !tbaa !11
  br label %1947

1373:                                             ; preds = %1267
  %1374 = load i64, ptr %12, align 8, !tbaa !344
  %1375 = icmp eq i64 %1374, 0
  br i1 %1375, label %1438, label %1376

1376:                                             ; preds = %1373
  %1377 = load ptr, ptr %6, align 8, !tbaa !334
  %1378 = and i64 %1374, 1
  %1379 = icmp eq i64 %1374, 1
  br i1 %1379, label %1382, label %1380

1380:                                             ; preds = %1376
  %1381 = and i64 %1374, -2
  br label %1401

1382:                                             ; preds = %1401, %1376
  %1383 = phi i64 [ poison, %1376 ], [ %1417, %1401 ]
  %1384 = phi i64 [ poison, %1376 ], [ %1419, %1401 ]
  %1385 = phi i64 [ 0, %1376 ], [ %1420, %1401 ]
  %1386 = phi i64 [ 0, %1376 ], [ %1419, %1401 ]
  %1387 = icmp eq i64 %1378, 0
  br i1 %1387, label %1396, label %1388

1388:                                             ; preds = %1382
  %1389 = getelementptr inbounds nuw i32, ptr %1377, i64 %1385
  %1390 = load i32, ptr %1389, align 4, !tbaa !11
  %1391 = zext i32 %1390 to i64
  %1392 = mul nuw nsw i64 %1391, 10
  %1393 = add nuw nsw i64 %1392, %1386
  %1394 = trunc i64 %1393 to i32
  store i32 %1394, ptr %1389, align 4, !tbaa !11
  %1395 = lshr i64 %1393, 32
  br label %1396

1396:                                             ; preds = %1382, %1388
  %1397 = phi i64 [ %1383, %1382 ], [ %1393, %1388 ]
  %1398 = phi i64 [ %1384, %1382 ], [ %1395, %1388 ]
  %1399 = trunc nuw nsw i64 %1398 to i32
  %1400 = icmp samesign ult i64 %1397, 4294967296
  br i1 %1400, label %1438, label %1423

1401:                                             ; preds = %1401, %1380
  %1402 = phi i64 [ 0, %1380 ], [ %1420, %1401 ]
  %1403 = phi i64 [ 0, %1380 ], [ %1419, %1401 ]
  %1404 = phi i64 [ 0, %1380 ], [ %1421, %1401 ]
  %1405 = getelementptr inbounds nuw i32, ptr %1377, i64 %1402
  %1406 = load i32, ptr %1405, align 4, !tbaa !11
  %1407 = zext i32 %1406 to i64
  %1408 = mul nuw nsw i64 %1407, 10
  %1409 = add nuw nsw i64 %1408, %1403
  %1410 = trunc i64 %1409 to i32
  store i32 %1410, ptr %1405, align 4, !tbaa !11
  %1411 = lshr i64 %1409, 32
  %1412 = or disjoint i64 %1402, 1
  %1413 = getelementptr inbounds nuw i32, ptr %1377, i64 %1412
  %1414 = load i32, ptr %1413, align 4, !tbaa !11
  %1415 = zext i32 %1414 to i64
  %1416 = mul nuw nsw i64 %1415, 10
  %1417 = add nuw nsw i64 %1416, %1411
  %1418 = trunc i64 %1417 to i32
  store i32 %1418, ptr %1413, align 4, !tbaa !11
  %1419 = lshr i64 %1417, 32
  %1420 = add nuw i64 %1402, 2
  %1421 = add i64 %1404, 2
  %1422 = icmp eq i64 %1421, %1381
  br i1 %1422, label %1382, label %1401, !llvm.loop !364

1423:                                             ; preds = %1396
  %1424 = add i64 %1374, 1
  %1425 = load i64, ptr %10, align 8, !tbaa !335
  %1426 = icmp ugt i64 %1424, %1425
  br i1 %1426, label %1427, label %1433

1427:                                             ; preds = %1423
  %1428 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %1428(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %1424)
          to label %1429 unwind label %1279

1429:                                             ; preds = %1427
  %1430 = load i64, ptr %12, align 8, !tbaa !344
  %1431 = add i64 %1430, 1
  %1432 = load ptr, ptr %6, align 8, !tbaa !334
  br label %1433

1433:                                             ; preds = %1429, %1423
  %1434 = phi ptr [ %1377, %1423 ], [ %1432, %1429 ]
  %1435 = phi i64 [ %1424, %1423 ], [ %1431, %1429 ]
  %1436 = phi i64 [ %1374, %1423 ], [ %1430, %1429 ]
  store i64 %1435, ptr %12, align 8, !tbaa !344
  %1437 = getelementptr inbounds nuw i32, ptr %1434, i64 %1436
  store i32 %1399, ptr %1437, align 4, !tbaa !11
  br label %1438

1438:                                             ; preds = %1433, %1396, %1373
  %1439 = load i64, ptr %22, align 8, !tbaa !344
  %1440 = icmp eq i64 %1439, 0
  br i1 %1440, label %1503, label %1441

1441:                                             ; preds = %1438
  %1442 = load ptr, ptr %8, align 8, !tbaa !334
  %1443 = and i64 %1439, 1
  %1444 = icmp eq i64 %1439, 1
  br i1 %1444, label %1447, label %1445

1445:                                             ; preds = %1441
  %1446 = and i64 %1439, -2
  br label %1466

1447:                                             ; preds = %1466, %1441
  %1448 = phi i64 [ poison, %1441 ], [ %1482, %1466 ]
  %1449 = phi i64 [ poison, %1441 ], [ %1484, %1466 ]
  %1450 = phi i64 [ 0, %1441 ], [ %1485, %1466 ]
  %1451 = phi i64 [ 0, %1441 ], [ %1484, %1466 ]
  %1452 = icmp eq i64 %1443, 0
  br i1 %1452, label %1461, label %1453

1453:                                             ; preds = %1447
  %1454 = getelementptr inbounds nuw i32, ptr %1442, i64 %1450
  %1455 = load i32, ptr %1454, align 4, !tbaa !11
  %1456 = zext i32 %1455 to i64
  %1457 = mul nuw nsw i64 %1456, 10
  %1458 = add nuw nsw i64 %1457, %1451
  %1459 = trunc i64 %1458 to i32
  store i32 %1459, ptr %1454, align 4, !tbaa !11
  %1460 = lshr i64 %1458, 32
  br label %1461

1461:                                             ; preds = %1447, %1453
  %1462 = phi i64 [ %1448, %1447 ], [ %1458, %1453 ]
  %1463 = phi i64 [ %1449, %1447 ], [ %1460, %1453 ]
  %1464 = trunc nuw nsw i64 %1463 to i32
  %1465 = icmp samesign ult i64 %1462, 4294967296
  br i1 %1465, label %1503, label %1488

1466:                                             ; preds = %1466, %1445
  %1467 = phi i64 [ 0, %1445 ], [ %1485, %1466 ]
  %1468 = phi i64 [ 0, %1445 ], [ %1484, %1466 ]
  %1469 = phi i64 [ 0, %1445 ], [ %1486, %1466 ]
  %1470 = getelementptr inbounds nuw i32, ptr %1442, i64 %1467
  %1471 = load i32, ptr %1470, align 4, !tbaa !11
  %1472 = zext i32 %1471 to i64
  %1473 = mul nuw nsw i64 %1472, 10
  %1474 = add nuw nsw i64 %1473, %1468
  %1475 = trunc i64 %1474 to i32
  store i32 %1475, ptr %1470, align 4, !tbaa !11
  %1476 = lshr i64 %1474, 32
  %1477 = or disjoint i64 %1467, 1
  %1478 = getelementptr inbounds nuw i32, ptr %1442, i64 %1477
  %1479 = load i32, ptr %1478, align 4, !tbaa !11
  %1480 = zext i32 %1479 to i64
  %1481 = mul nuw nsw i64 %1480, 10
  %1482 = add nuw nsw i64 %1481, %1476
  %1483 = trunc i64 %1482 to i32
  store i32 %1483, ptr %1478, align 4, !tbaa !11
  %1484 = lshr i64 %1482, 32
  %1485 = add nuw i64 %1467, 2
  %1486 = add i64 %1469, 2
  %1487 = icmp eq i64 %1486, %1446
  br i1 %1487, label %1447, label %1466, !llvm.loop !364

1488:                                             ; preds = %1461
  %1489 = add i64 %1439, 1
  %1490 = load i64, ptr %20, align 8, !tbaa !335
  %1491 = icmp ugt i64 %1489, %1490
  br i1 %1491, label %1492, label %1498

1492:                                             ; preds = %1488
  %1493 = load ptr, ptr %21, align 8, !tbaa !332
  invoke void %1493(ptr noundef nonnull align 8 dereferenceable(172) %8, i64 noundef %1489)
          to label %1494 unwind label %1279

1494:                                             ; preds = %1492
  %1495 = load i64, ptr %22, align 8, !tbaa !344
  %1496 = add i64 %1495, 1
  %1497 = load ptr, ptr %8, align 8, !tbaa !334
  br label %1498

1498:                                             ; preds = %1494, %1488
  %1499 = phi ptr [ %1442, %1488 ], [ %1497, %1494 ]
  %1500 = phi i64 [ %1489, %1488 ], [ %1496, %1494 ]
  %1501 = phi i64 [ %1439, %1488 ], [ %1495, %1494 ]
  store i64 %1500, ptr %22, align 8, !tbaa !344
  %1502 = getelementptr inbounds nuw i32, ptr %1499, i64 %1501
  store i32 %1464, ptr %1502, align 4, !tbaa !11
  br label %1503

1503:                                             ; preds = %1498, %1461, %1438
  br i1 %814, label %1569, label %1504

1504:                                             ; preds = %1503
  %1505 = load i64, ptr %1134, align 8, !tbaa !344
  %1506 = icmp eq i64 %1505, 0
  br i1 %1506, label %1569, label %1507

1507:                                             ; preds = %1504
  %1508 = load ptr, ptr %809, align 8, !tbaa !334
  %1509 = and i64 %1505, 1
  %1510 = icmp eq i64 %1505, 1
  br i1 %1510, label %1513, label %1511

1511:                                             ; preds = %1507
  %1512 = and i64 %1505, -2
  br label %1532

1513:                                             ; preds = %1532, %1507
  %1514 = phi i64 [ poison, %1507 ], [ %1548, %1532 ]
  %1515 = phi i64 [ poison, %1507 ], [ %1550, %1532 ]
  %1516 = phi i64 [ 0, %1507 ], [ %1551, %1532 ]
  %1517 = phi i64 [ 0, %1507 ], [ %1550, %1532 ]
  %1518 = icmp eq i64 %1509, 0
  br i1 %1518, label %1527, label %1519

1519:                                             ; preds = %1513
  %1520 = getelementptr inbounds nuw i32, ptr %1508, i64 %1516
  %1521 = load i32, ptr %1520, align 4, !tbaa !11
  %1522 = zext i32 %1521 to i64
  %1523 = mul nuw nsw i64 %1522, 10
  %1524 = add nuw nsw i64 %1523, %1517
  %1525 = trunc i64 %1524 to i32
  store i32 %1525, ptr %1520, align 4, !tbaa !11
  %1526 = lshr i64 %1524, 32
  br label %1527

1527:                                             ; preds = %1513, %1519
  %1528 = phi i64 [ %1514, %1513 ], [ %1524, %1519 ]
  %1529 = phi i64 [ %1515, %1513 ], [ %1526, %1519 ]
  %1530 = trunc nuw nsw i64 %1529 to i32
  %1531 = icmp samesign ult i64 %1528, 4294967296
  br i1 %1531, label %1569, label %1554

1532:                                             ; preds = %1532, %1511
  %1533 = phi i64 [ 0, %1511 ], [ %1551, %1532 ]
  %1534 = phi i64 [ 0, %1511 ], [ %1550, %1532 ]
  %1535 = phi i64 [ 0, %1511 ], [ %1552, %1532 ]
  %1536 = getelementptr inbounds nuw i32, ptr %1508, i64 %1533
  %1537 = load i32, ptr %1536, align 4, !tbaa !11
  %1538 = zext i32 %1537 to i64
  %1539 = mul nuw nsw i64 %1538, 10
  %1540 = add nuw nsw i64 %1539, %1534
  %1541 = trunc i64 %1540 to i32
  store i32 %1541, ptr %1536, align 4, !tbaa !11
  %1542 = lshr i64 %1540, 32
  %1543 = or disjoint i64 %1533, 1
  %1544 = getelementptr inbounds nuw i32, ptr %1508, i64 %1543
  %1545 = load i32, ptr %1544, align 4, !tbaa !11
  %1546 = zext i32 %1545 to i64
  %1547 = mul nuw nsw i64 %1546, 10
  %1548 = add nuw nsw i64 %1547, %1542
  %1549 = trunc i64 %1548 to i32
  store i32 %1549, ptr %1544, align 4, !tbaa !11
  %1550 = lshr i64 %1548, 32
  %1551 = add nuw i64 %1533, 2
  %1552 = add i64 %1535, 2
  %1553 = icmp eq i64 %1552, %1512
  br i1 %1553, label %1513, label %1532, !llvm.loop !364

1554:                                             ; preds = %1527
  %1555 = add i64 %1505, 1
  %1556 = load i64, ptr %1138, align 8, !tbaa !335
  %1557 = icmp ugt i64 %1555, %1556
  br i1 %1557, label %1558, label %1564

1558:                                             ; preds = %1554
  %1559 = load ptr, ptr %1139, align 8, !tbaa !332
  invoke void %1559(ptr noundef nonnull align 8 dereferenceable(172) %809, i64 noundef %1555)
          to label %1560 unwind label %1279

1560:                                             ; preds = %1558
  %1561 = load i64, ptr %1134, align 8, !tbaa !344
  %1562 = add i64 %1561, 1
  %1563 = load ptr, ptr %809, align 8, !tbaa !334
  br label %1564

1564:                                             ; preds = %1560, %1554
  %1565 = phi ptr [ %1508, %1554 ], [ %1563, %1560 ]
  %1566 = phi i64 [ %1555, %1554 ], [ %1562, %1560 ]
  %1567 = phi i64 [ %1505, %1554 ], [ %1561, %1560 ]
  store i64 %1566, ptr %1134, align 8, !tbaa !344
  %1568 = getelementptr inbounds nuw i32, ptr %1565, i64 %1567
  store i32 %1530, ptr %1568, align 4, !tbaa !11
  br label %1569

1569:                                             ; preds = %1564, %1527, %1504, %1503
  br label %1140, !llvm.loop !366

1570:                                             ; preds = %1129
  %1571 = add i32 %1130, -1
  %1572 = load i32, ptr %4, align 4, !tbaa !11
  %1573 = sub nsw i32 %1572, %1571
  store i32 %1573, ptr %4, align 4, !tbaa !11
  %1574 = icmp slt i32 %1130, 1
  br i1 %1574, label %1575, label %1723

1575:                                             ; preds = %1570
  %1576 = icmp eq i32 %1130, 0
  br i1 %1576, label %1577, label %1704

1577:                                             ; preds = %1575
  %1578 = load i64, ptr %17, align 8, !tbaa !344
  %1579 = icmp eq i64 %1578, 0
  br i1 %1579, label %1642, label %1580

1580:                                             ; preds = %1577
  %1581 = load ptr, ptr %7, align 8, !tbaa !334
  %1582 = and i64 %1578, 1
  %1583 = icmp eq i64 %1578, 1
  br i1 %1583, label %1586, label %1584

1584:                                             ; preds = %1580
  %1585 = and i64 %1578, -2
  br label %1605

1586:                                             ; preds = %1605, %1580
  %1587 = phi i64 [ poison, %1580 ], [ %1621, %1605 ]
  %1588 = phi i64 [ poison, %1580 ], [ %1623, %1605 ]
  %1589 = phi i64 [ 0, %1580 ], [ %1624, %1605 ]
  %1590 = phi i64 [ 0, %1580 ], [ %1623, %1605 ]
  %1591 = icmp eq i64 %1582, 0
  br i1 %1591, label %1600, label %1592

1592:                                             ; preds = %1586
  %1593 = getelementptr inbounds nuw i32, ptr %1581, i64 %1589
  %1594 = load i32, ptr %1593, align 4, !tbaa !11
  %1595 = zext i32 %1594 to i64
  %1596 = mul nuw nsw i64 %1595, 10
  %1597 = add nuw nsw i64 %1596, %1590
  %1598 = trunc i64 %1597 to i32
  store i32 %1598, ptr %1593, align 4, !tbaa !11
  %1599 = lshr i64 %1597, 32
  br label %1600

1600:                                             ; preds = %1586, %1592
  %1601 = phi i64 [ %1587, %1586 ], [ %1597, %1592 ]
  %1602 = phi i64 [ %1588, %1586 ], [ %1599, %1592 ]
  %1603 = trunc nuw nsw i64 %1602 to i32
  %1604 = icmp samesign ult i64 %1601, 4294967296
  br i1 %1604, label %1642, label %1627

1605:                                             ; preds = %1605, %1584
  %1606 = phi i64 [ 0, %1584 ], [ %1624, %1605 ]
  %1607 = phi i64 [ 0, %1584 ], [ %1623, %1605 ]
  %1608 = phi i64 [ 0, %1584 ], [ %1625, %1605 ]
  %1609 = getelementptr inbounds nuw i32, ptr %1581, i64 %1606
  %1610 = load i32, ptr %1609, align 4, !tbaa !11
  %1611 = zext i32 %1610 to i64
  %1612 = mul nuw nsw i64 %1611, 10
  %1613 = add nuw nsw i64 %1612, %1607
  %1614 = trunc i64 %1613 to i32
  store i32 %1614, ptr %1609, align 4, !tbaa !11
  %1615 = lshr i64 %1613, 32
  %1616 = or disjoint i64 %1606, 1
  %1617 = getelementptr inbounds nuw i32, ptr %1581, i64 %1616
  %1618 = load i32, ptr %1617, align 4, !tbaa !11
  %1619 = zext i32 %1618 to i64
  %1620 = mul nuw nsw i64 %1619, 10
  %1621 = add nuw nsw i64 %1620, %1615
  %1622 = trunc i64 %1621 to i32
  store i32 %1622, ptr %1617, align 4, !tbaa !11
  %1623 = lshr i64 %1621, 32
  %1624 = add nuw i64 %1606, 2
  %1625 = add i64 %1608, 2
  %1626 = icmp eq i64 %1625, %1585
  br i1 %1626, label %1586, label %1605, !llvm.loop !364

1627:                                             ; preds = %1600
  %1628 = add i64 %1578, 1
  %1629 = load i64, ptr %15, align 8, !tbaa !335
  %1630 = icmp ugt i64 %1628, %1629
  br i1 %1630, label %1631, label %1637

1631:                                             ; preds = %1627
  %1632 = load ptr, ptr %16, align 8, !tbaa !332
  invoke void %1632(ptr noundef nonnull align 8 dereferenceable(172) %7, i64 noundef %1628)
          to label %1633 unwind label %1702

1633:                                             ; preds = %1631
  %1634 = load i64, ptr %17, align 8, !tbaa !344
  %1635 = add i64 %1634, 1
  %1636 = load ptr, ptr %7, align 8, !tbaa !334
  br label %1637

1637:                                             ; preds = %1633, %1627
  %1638 = phi ptr [ %1581, %1627 ], [ %1636, %1633 ]
  %1639 = phi i64 [ %1628, %1627 ], [ %1635, %1633 ]
  %1640 = phi i64 [ %1578, %1627 ], [ %1634, %1633 ]
  store i64 %1639, ptr %17, align 8, !tbaa !344
  %1641 = getelementptr inbounds nuw i32, ptr %1638, i64 %1640
  store i32 %1603, ptr %1641, align 4, !tbaa !11
  br label %1642

1642:                                             ; preds = %1637, %1600, %1577
  %1643 = phi i64 [ %1639, %1637 ], [ %1578, %1600 ], [ 0, %1577 ]
  %1644 = load i64, ptr %12, align 8, !tbaa !344
  %1645 = trunc i64 %1644 to i32
  %1646 = load i32, ptr %14, align 8, !tbaa !336
  %1647 = add nsw i32 %1646, %1645
  %1648 = trunc i64 %1643 to i32
  %1649 = load i32, ptr %19, align 8, !tbaa !336
  %1650 = add nsw i32 %1649, %1648
  %1651 = add nsw i32 %1647, 1
  %1652 = icmp slt i32 %1651, %1650
  br i1 %1652, label %1704, label %1653

1653:                                             ; preds = %1642
  %1654 = icmp sgt i32 %1647, %1650
  br i1 %1654, label %1704, label %1655

1655:                                             ; preds = %1653
  %1656 = call noundef i32 @llvm.smin.i32(i32 %1646, i32 %1649)
  %1657 = icmp sgt i32 %1650, %1656
  br i1 %1657, label %1658, label %1704

1658:                                             ; preds = %1655
  %1659 = load ptr, ptr %6, align 8
  %1660 = load ptr, ptr %7, align 8
  %1661 = sext i32 %1649 to i64
  %1662 = shl i64 %1643, 32
  %1663 = ashr exact i64 %1662, 32
  %1664 = add nsw i64 %1663, %1661
  %1665 = sext i32 %1650 to i64
  %1666 = sext i32 %1647 to i64
  %1667 = sext i32 %1646 to i64
  %1668 = sext i32 %1656 to i64
  br label %1669

1669:                                             ; preds = %1696, %1658
  %1670 = phi i64 [ %1664, %1658 ], [ %1672, %1696 ]
  %1671 = phi i64 [ 0, %1658 ], [ %1699, %1696 ]
  %1672 = add nsw i64 %1670, -1
  %1673 = icmp sgt i64 %1670, %1667
  %1674 = icmp sle i64 %1670, %1666
  %1675 = and i1 %1673, %1674
  br i1 %1675, label %1676, label %1682

1676:                                             ; preds = %1669
  %1677 = sub nsw i64 %1672, %1667
  %1678 = getelementptr inbounds i32, ptr %1659, i64 %1677
  %1679 = load i32, ptr %1678, align 4, !tbaa !11
  %1680 = zext i32 %1679 to i64
  %1681 = shl nuw nsw i64 %1680, 1
  br label %1682

1682:                                             ; preds = %1669, %1676
  %1683 = phi i64 [ %1681, %1676 ], [ 0, %1669 ]
  %1684 = icmp sgt i64 %1670, %1661
  %1685 = icmp sle i64 %1670, %1665
  %1686 = and i1 %1684, %1685
  br i1 %1686, label %1687, label %1692

1687:                                             ; preds = %1682
  %1688 = sub nsw i64 %1672, %1661
  %1689 = getelementptr inbounds i32, ptr %1660, i64 %1688
  %1690 = load i32, ptr %1689, align 4, !tbaa !11
  %1691 = zext i32 %1690 to i64
  br label %1692

1692:                                             ; preds = %1687, %1682
  %1693 = phi i64 [ %1691, %1687 ], [ 0, %1682 ]
  %1694 = or disjoint i64 %1693, %1671
  %1695 = icmp samesign ugt i64 %1683, %1694
  br i1 %1695, label %1704, label %1696

1696:                                             ; preds = %1692
  %1697 = sub nuw nsw i64 %1694, %1683
  %1698 = icmp samesign ult i64 %1697, 2
  %1699 = shl nuw nsw i64 %1697, 32
  %1700 = icmp sgt i64 %1672, %1668
  %1701 = select i1 %1698, i1 %1700, i1 false
  br i1 %1701, label %1669, label %1704, !llvm.loop !363

1702:                                             ; preds = %1712, %1631
  %1703 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1704:                                             ; preds = %1696, %1692, %1655, %1642, %1653, %1575
  %1705 = phi i8 [ 48, %1575 ], [ 49, %1653 ], [ 48, %1642 ], [ 48, %1655 ], [ 48, %1696 ], [ 49, %1692 ]
  %1706 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %1707 = load i64, ptr %1706, align 8, !tbaa !37
  %1708 = add i64 %1707, 1
  %1709 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %1710 = load i64, ptr %1709, align 8, !tbaa !18
  %1711 = icmp ugt i64 %1708, %1710
  br i1 %1711, label %1712, label %1718

1712:                                             ; preds = %1704
  %1713 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %1714 = load ptr, ptr %1713, align 8, !tbaa !13
  invoke void %1714(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %1708)
          to label %1715 unwind label %1702

1715:                                             ; preds = %1712
  %1716 = load i64, ptr %1706, align 8, !tbaa !37
  %1717 = add i64 %1716, 1
  br label %1718

1718:                                             ; preds = %1715, %1704
  %1719 = phi i64 [ %1708, %1704 ], [ %1717, %1715 ]
  %1720 = phi i64 [ %1707, %1704 ], [ %1716, %1715 ]
  %1721 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %1719, ptr %1706, align 8, !tbaa !37
  %1722 = getelementptr inbounds nuw i8, ptr %1721, i64 %1720
  store i8 %1705, ptr %1722, align 1, !tbaa !10
  br label %1947

1723:                                             ; preds = %1570
  %1724 = zext nneg i32 %1130 to i64
  %1725 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %1726 = load i64, ptr %1725, align 8, !tbaa !18
  %1727 = icmp ult i64 %1726, %1724
  br i1 %1727, label %1728, label %1733

1728:                                             ; preds = %1723
  %1729 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %1730 = load ptr, ptr %1729, align 8, !tbaa !13
  invoke void %1730(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %1724)
          to label %1731 unwind label %1109

1731:                                             ; preds = %1728
  %1732 = load i64, ptr %1725, align 8, !tbaa !18
  br label %1733

1733:                                             ; preds = %1723, %1731
  %1734 = phi i64 [ %1726, %1723 ], [ %1732, %1731 ]
  %1735 = call noundef i64 @llvm.umin.i64(i64 %1724, i64 %1734)
  %1736 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store i64 %1735, ptr %1736, align 8, !tbaa !37
  %1737 = icmp eq i32 %1130, 1
  br i1 %1737, label %1740, label %1738

1738:                                             ; preds = %1733
  %1739 = zext nneg i32 %1571 to i64
  br label %1742

1740:                                             ; preds = %1814, %1733
  %1741 = invoke noundef i32 @_ZN3fmt3v116detail6bigint13divmod_assignERKS2_(ptr noundef nonnull align 8 dereferenceable(172) %6, ptr noundef nonnull align 8 dereferenceable(172) %7)
          to label %1819 unwind label %1904

1742:                                             ; preds = %1738, %1814
  %1743 = phi i64 [ 0, %1738 ], [ %1815, %1814 ]
  %1744 = invoke noundef i32 @_ZN3fmt3v116detail6bigint13divmod_assignERKS2_(ptr noundef nonnull align 8 dereferenceable(172) %6, ptr noundef nonnull align 8 dereferenceable(172) %7)
          to label %1745 unwind label %1817

1745:                                             ; preds = %1742
  %1746 = trunc i32 %1744 to i8
  %1747 = add i8 %1746, 48
  %1748 = load ptr, ptr %3, align 8, !tbaa !17
  %1749 = getelementptr inbounds nuw i8, ptr %1748, i64 %1743
  store i8 %1747, ptr %1749, align 1, !tbaa !10
  %1750 = load i64, ptr %12, align 8, !tbaa !344
  %1751 = icmp eq i64 %1750, 0
  br i1 %1751, label %1814, label %1752

1752:                                             ; preds = %1745
  %1753 = load ptr, ptr %6, align 8, !tbaa !334
  %1754 = and i64 %1750, 1
  %1755 = icmp eq i64 %1750, 1
  br i1 %1755, label %1758, label %1756

1756:                                             ; preds = %1752
  %1757 = and i64 %1750, -2
  br label %1777

1758:                                             ; preds = %1777, %1752
  %1759 = phi i64 [ poison, %1752 ], [ %1793, %1777 ]
  %1760 = phi i64 [ poison, %1752 ], [ %1795, %1777 ]
  %1761 = phi i64 [ 0, %1752 ], [ %1796, %1777 ]
  %1762 = phi i64 [ 0, %1752 ], [ %1795, %1777 ]
  %1763 = icmp eq i64 %1754, 0
  br i1 %1763, label %1772, label %1764

1764:                                             ; preds = %1758
  %1765 = getelementptr inbounds nuw i32, ptr %1753, i64 %1761
  %1766 = load i32, ptr %1765, align 4, !tbaa !11
  %1767 = zext i32 %1766 to i64
  %1768 = mul nuw nsw i64 %1767, 10
  %1769 = add nuw nsw i64 %1768, %1762
  %1770 = trunc i64 %1769 to i32
  store i32 %1770, ptr %1765, align 4, !tbaa !11
  %1771 = lshr i64 %1769, 32
  br label %1772

1772:                                             ; preds = %1758, %1764
  %1773 = phi i64 [ %1759, %1758 ], [ %1769, %1764 ]
  %1774 = phi i64 [ %1760, %1758 ], [ %1771, %1764 ]
  %1775 = trunc nuw nsw i64 %1774 to i32
  %1776 = icmp samesign ult i64 %1773, 4294967296
  br i1 %1776, label %1814, label %1799

1777:                                             ; preds = %1777, %1756
  %1778 = phi i64 [ 0, %1756 ], [ %1796, %1777 ]
  %1779 = phi i64 [ 0, %1756 ], [ %1795, %1777 ]
  %1780 = phi i64 [ 0, %1756 ], [ %1797, %1777 ]
  %1781 = getelementptr inbounds nuw i32, ptr %1753, i64 %1778
  %1782 = load i32, ptr %1781, align 4, !tbaa !11
  %1783 = zext i32 %1782 to i64
  %1784 = mul nuw nsw i64 %1783, 10
  %1785 = add nuw nsw i64 %1784, %1779
  %1786 = trunc i64 %1785 to i32
  store i32 %1786, ptr %1781, align 4, !tbaa !11
  %1787 = lshr i64 %1785, 32
  %1788 = or disjoint i64 %1778, 1
  %1789 = getelementptr inbounds nuw i32, ptr %1753, i64 %1788
  %1790 = load i32, ptr %1789, align 4, !tbaa !11
  %1791 = zext i32 %1790 to i64
  %1792 = mul nuw nsw i64 %1791, 10
  %1793 = add nuw nsw i64 %1792, %1787
  %1794 = trunc i64 %1793 to i32
  store i32 %1794, ptr %1789, align 4, !tbaa !11
  %1795 = lshr i64 %1793, 32
  %1796 = add nuw i64 %1778, 2
  %1797 = add i64 %1780, 2
  %1798 = icmp eq i64 %1797, %1757
  br i1 %1798, label %1758, label %1777, !llvm.loop !364

1799:                                             ; preds = %1772
  %1800 = add i64 %1750, 1
  %1801 = load i64, ptr %10, align 8, !tbaa !335
  %1802 = icmp ugt i64 %1800, %1801
  br i1 %1802, label %1803, label %1809

1803:                                             ; preds = %1799
  %1804 = load ptr, ptr %11, align 8, !tbaa !332
  invoke void %1804(ptr noundef nonnull align 8 dereferenceable(172) %6, i64 noundef %1800)
          to label %1805 unwind label %1817

1805:                                             ; preds = %1803
  %1806 = load i64, ptr %12, align 8, !tbaa !344
  %1807 = add i64 %1806, 1
  %1808 = load ptr, ptr %6, align 8, !tbaa !334
  br label %1809

1809:                                             ; preds = %1805, %1799
  %1810 = phi ptr [ %1753, %1799 ], [ %1808, %1805 ]
  %1811 = phi i64 [ %1800, %1799 ], [ %1807, %1805 ]
  %1812 = phi i64 [ %1750, %1799 ], [ %1806, %1805 ]
  store i64 %1811, ptr %12, align 8, !tbaa !344
  %1813 = getelementptr inbounds nuw i32, ptr %1810, i64 %1812
  store i32 %1775, ptr %1813, align 4, !tbaa !11
  br label %1814

1814:                                             ; preds = %1809, %1772, %1745
  %1815 = add nuw nsw i64 %1743, 1
  %1816 = icmp eq i64 %1815, %1739
  br i1 %1816, label %1740, label %1742, !llvm.loop !367

1817:                                             ; preds = %1803, %1742
  %1818 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1819:                                             ; preds = %1740
  %1820 = load i64, ptr %12, align 8, !tbaa !344
  %1821 = trunc i64 %1820 to i32
  %1822 = load i32, ptr %14, align 8, !tbaa !336
  %1823 = add nsw i32 %1822, %1821
  %1824 = load i64, ptr %17, align 8, !tbaa !344
  %1825 = trunc i64 %1824 to i32
  %1826 = load i32, ptr %19, align 8, !tbaa !336
  %1827 = add nsw i32 %1826, %1825
  %1828 = add nsw i32 %1823, 1
  %1829 = icmp slt i32 %1828, %1827
  br i1 %1829, label %1940, label %1830

1830:                                             ; preds = %1819
  %1831 = icmp sgt i32 %1823, %1827
  br i1 %1831, label %1886, label %1832

1832:                                             ; preds = %1830
  %1833 = call noundef i32 @llvm.smin.i32(i32 %1822, i32 %1826)
  %1834 = icmp sgt i32 %1827, %1833
  br i1 %1834, label %1835, label %1881

1835:                                             ; preds = %1832
  %1836 = load ptr, ptr %6, align 8
  %1837 = load ptr, ptr %7, align 8
  %1838 = sext i32 %1826 to i64
  %1839 = shl i64 %1824, 32
  %1840 = ashr exact i64 %1839, 32
  %1841 = add nsw i64 %1840, %1838
  %1842 = sext i32 %1827 to i64
  %1843 = sext i32 %1823 to i64
  %1844 = sext i32 %1822 to i64
  %1845 = sext i32 %1833 to i64
  br label %1846

1846:                                             ; preds = %1876, %1835
  %1847 = phi i64 [ %1841, %1835 ], [ %1849, %1876 ]
  %1848 = phi i64 [ 0, %1835 ], [ %1877, %1876 ]
  %1849 = add nsw i64 %1847, -1
  %1850 = icmp sgt i64 %1847, %1844
  %1851 = icmp sle i64 %1847, %1843
  %1852 = and i1 %1850, %1851
  br i1 %1852, label %1853, label %1859

1853:                                             ; preds = %1846
  %1854 = sub nsw i64 %1849, %1844
  %1855 = getelementptr inbounds i32, ptr %1836, i64 %1854
  %1856 = load i32, ptr %1855, align 4, !tbaa !11
  %1857 = zext i32 %1856 to i64
  %1858 = shl nuw nsw i64 %1857, 1
  br label %1859

1859:                                             ; preds = %1846, %1853
  %1860 = phi i64 [ %1858, %1853 ], [ 0, %1846 ]
  %1861 = icmp sgt i64 %1847, %1838
  %1862 = icmp sle i64 %1847, %1842
  %1863 = and i1 %1861, %1862
  br i1 %1863, label %1864, label %1869

1864:                                             ; preds = %1859
  %1865 = sub nsw i64 %1849, %1838
  %1866 = getelementptr inbounds i32, ptr %1837, i64 %1865
  %1867 = load i32, ptr %1866, align 4, !tbaa !11
  %1868 = zext i32 %1867 to i64
  br label %1869

1869:                                             ; preds = %1864, %1859
  %1870 = phi i64 [ %1868, %1864 ], [ 0, %1859 ]
  %1871 = or disjoint i64 %1870, %1848
  %1872 = icmp samesign ugt i64 %1860, %1871
  br i1 %1872, label %1886, label %1873

1873:                                             ; preds = %1869
  %1874 = sub nuw nsw i64 %1871, %1860
  %1875 = icmp samesign ugt i64 %1874, 1
  br i1 %1875, label %1940, label %1876

1876:                                             ; preds = %1873
  %1877 = shl nuw nsw i64 %1874, 32
  %1878 = icmp sgt i64 %1849, %1845
  br i1 %1878, label %1846, label %1879, !llvm.loop !363

1879:                                             ; preds = %1876
  %1880 = icmp ne i64 %1871, %1860
  br label %1881

1881:                                             ; preds = %1832, %1879
  %1882 = phi i1 [ %1880, %1879 ], [ false, %1832 ]
  %1883 = and i32 %1741, 1
  %1884 = icmp eq i32 %1883, 0
  %1885 = or i1 %1884, %1882
  br i1 %1885, label %1940, label %1886

1886:                                             ; preds = %1869, %1830, %1881
  %1887 = icmp eq i32 %1741, 9
  br i1 %1887, label %1888, label %1938

1888:                                             ; preds = %1886
  %1889 = load ptr, ptr %3, align 8, !tbaa !17
  %1890 = sext i32 %1571 to i64
  %1891 = getelementptr inbounds i8, ptr %1889, i64 %1890
  store i8 58, ptr %1891, align 1, !tbaa !10
  br i1 %1737, label %1900, label %1892

1892:                                             ; preds = %1888, %1906
  %1893 = phi i64 [ %1894, %1906 ], [ %1724, %1888 ]
  %1894 = add nsw i64 %1893, -1
  %1895 = load ptr, ptr %3, align 8, !tbaa !17
  %1896 = and i64 %1894, 4294967295
  %1897 = getelementptr inbounds nuw i8, ptr %1895, i64 %1896
  %1898 = load i8, ptr %1897, align 1, !tbaa !10
  %1899 = icmp eq i8 %1898, 58
  br i1 %1899, label %1906, label %1900

1900:                                             ; preds = %1892, %1906, %1888
  %1901 = load ptr, ptr %3, align 8, !tbaa !17
  %1902 = load i8, ptr %1901, align 1, !tbaa !10
  %1903 = icmp eq i8 %1902, 58
  br i1 %1903, label %1914, label %1947

1904:                                             ; preds = %1740
  %1905 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1906:                                             ; preds = %1892
  store i8 48, ptr %1897, align 1, !tbaa !10
  %1907 = load ptr, ptr %3, align 8, !tbaa !17
  %1908 = getelementptr i8, ptr %1907, i64 %1893
  %1909 = getelementptr i8, ptr %1908, i64 -2
  %1910 = load i8, ptr %1909, align 1, !tbaa !10
  %1911 = add i8 %1910, 1
  store i8 %1911, ptr %1909, align 1, !tbaa !10
  %1912 = trunc nuw i64 %1893 to i32
  %1913 = icmp sgt i32 %1912, 2
  br i1 %1913, label %1892, label %1900, !llvm.loop !368

1914:                                             ; preds = %1900
  store i8 49, ptr %1901, align 1, !tbaa !10
  %1915 = and i32 %1, 4
  %1916 = icmp eq i32 %1915, 0
  br i1 %1916, label %1935, label %1917

1917:                                             ; preds = %1914
  %1918 = load i64, ptr %1736, align 8, !tbaa !37
  %1919 = add i64 %1918, 1
  %1920 = load i64, ptr %1725, align 8, !tbaa !18
  %1921 = icmp ugt i64 %1919, %1920
  br i1 %1921, label %1922, label %1928

1922:                                             ; preds = %1917
  %1923 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %1924 = load ptr, ptr %1923, align 8, !tbaa !13
  invoke void %1924(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %1919)
          to label %1925 unwind label %1933

1925:                                             ; preds = %1922
  %1926 = load i64, ptr %1736, align 8, !tbaa !37
  %1927 = add i64 %1926, 1
  br label %1928

1928:                                             ; preds = %1925, %1917
  %1929 = phi i64 [ %1919, %1917 ], [ %1927, %1925 ]
  %1930 = phi i64 [ %1918, %1917 ], [ %1926, %1925 ]
  %1931 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %1929, ptr %1736, align 8, !tbaa !37
  %1932 = getelementptr inbounds nuw i8, ptr %1931, i64 %1930
  store i8 48, ptr %1932, align 1, !tbaa !10
  br label %1947

1933:                                             ; preds = %1922
  %1934 = landingpad { ptr, i32 }
          cleanup
  br label %1964

1935:                                             ; preds = %1914
  %1936 = load i32, ptr %4, align 4, !tbaa !11
  %1937 = add nsw i32 %1936, 1
  store i32 %1937, ptr %4, align 4, !tbaa !11
  br label %1947

1938:                                             ; preds = %1886
  %1939 = add nsw i32 %1741, 1
  br label %1940

1940:                                             ; preds = %1873, %1819, %1938, %1881
  %1941 = phi i32 [ %1939, %1938 ], [ %1741, %1881 ], [ %1741, %1819 ], [ %1741, %1873 ]
  %1942 = trunc i32 %1941 to i8
  %1943 = add i8 %1942, 48
  %1944 = load ptr, ptr %3, align 8, !tbaa !17
  %1945 = sext i32 %1571 to i64
  %1946 = getelementptr inbounds i8, ptr %1944, i64 %1945
  store i8 %1943, ptr %1946, align 1, !tbaa !10
  br label %1947

1947:                                             ; preds = %1940, %1928, %1935, %1900, %1718, %1367
  %1948 = load ptr, ptr %9, align 8, !tbaa !334
  %1949 = icmp eq ptr %1948, %28
  br i1 %1949, label %1951, label %1950

1950:                                             ; preds = %1947
  call void @free(ptr noundef %1948)
  br label %1951

1951:                                             ; preds = %1947, %1950
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %9) #30
  %1952 = load ptr, ptr %8, align 8, !tbaa !334
  %1953 = icmp eq ptr %1952, %23
  br i1 %1953, label %1955, label %1954

1954:                                             ; preds = %1951
  call void @free(ptr noundef %1952)
  br label %1955

1955:                                             ; preds = %1951, %1954
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %8) #30
  %1956 = load ptr, ptr %7, align 8, !tbaa !334
  %1957 = icmp eq ptr %1956, %18
  br i1 %1957, label %1959, label %1958

1958:                                             ; preds = %1955
  call void @free(ptr noundef %1956)
  br label %1959

1959:                                             ; preds = %1955, %1958
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %7) #30
  %1960 = load ptr, ptr %6, align 8, !tbaa !334
  %1961 = icmp eq ptr %1960, %13
  br i1 %1961, label %1963, label %1962

1962:                                             ; preds = %1959
  call void @free(ptr noundef %1960)
  br label %1963

1963:                                             ; preds = %1959, %1962
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %6) #30
  ret void

1964:                                             ; preds = %1279, %1281, %215, %217, %1109, %1124, %1702, %1817, %1277, %1933, %1904
  %1965 = phi { ptr, i32 } [ %1703, %1702 ], [ %1818, %1817 ], [ %1278, %1277 ], [ %1905, %1904 ], [ %1934, %1933 ], [ %1110, %1109 ], [ %1125, %1124 ], [ %216, %215 ], [ %218, %217 ], [ %1280, %1279 ], [ %1282, %1281 ]
  %1966 = load ptr, ptr %9, align 8, !tbaa !334
  %1967 = icmp eq ptr %1966, %28
  br i1 %1967, label %1969, label %1968

1968:                                             ; preds = %1964
  call void @free(ptr noundef %1966)
  br label %1969

1969:                                             ; preds = %1968, %1964
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %9) #30
  %1970 = load ptr, ptr %8, align 8, !tbaa !334
  %1971 = icmp eq ptr %1970, %23
  br i1 %1971, label %1973, label %1972

1972:                                             ; preds = %1969
  call void @free(ptr noundef %1970)
  br label %1973

1973:                                             ; preds = %1972, %1969
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %8) #30
  %1974 = load ptr, ptr %7, align 8, !tbaa !334
  %1975 = icmp eq ptr %1974, %18
  br i1 %1975, label %1977, label %1976

1976:                                             ; preds = %1973
  call void @free(ptr noundef %1974)
  br label %1977

1977:                                             ; preds = %1976, %1973
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %7) #30
  %1978 = load ptr, ptr %6, align 8, !tbaa !334
  %1979 = icmp eq ptr %1978, %13
  br i1 %1979, label %1981, label %1980

1980:                                             ; preds = %1977
  call void @free(ptr noundef %1978)
  br label %1981

1981:                                             ; preds = %1977, %1980
  call void @llvm.lifetime.end.p0(i64 176, ptr nonnull %6) #30
  resume { ptr, i32 } %1965
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail6bigint12assign_pow10Ei(ptr noundef nonnull align 8 dereferenceable(172) %0, i32 noundef %1) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2678, ptr noundef nonnull @.str.14) #31
  unreachable

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %5
  %8 = load ptr, ptr %0, align 8, !tbaa !334
  store i32 1, ptr %8, align 4, !tbaa !11
  %9 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %10 = load i64, ptr %9, align 8, !tbaa !335
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %14 = load ptr, ptr %13, align 8, !tbaa !332
  tail call void %14(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef 1)
  %15 = load i64, ptr %9, align 8, !tbaa !335
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  br label %18

18:                                               ; preds = %7, %12
  %19 = phi i64 [ 1, %7 ], [ %17, %12 ]
  %20 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i64 %19, ptr %20, align 8, !tbaa !344
  %21 = getelementptr inbounds nuw i8, ptr %0, i64 168
  store i32 0, ptr %21, align 8, !tbaa !336
  br label %187

22:                                               ; preds = %5
  %23 = tail call noundef range(i32 0, 33) i32 @llvm.ctlz.i32(i32 %1, i1 true)
  %24 = xor i32 %23, 31
  %25 = shl nuw nsw i32 1, %24
  %26 = load ptr, ptr %0, align 8, !tbaa !334
  store i32 5, ptr %26, align 4, !tbaa !11
  %27 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %28 = load i64, ptr %27, align 8, !tbaa !335
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %22
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %32 = load ptr, ptr %31, align 8, !tbaa !332
  tail call void %32(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef 1)
  %33 = load i64, ptr %27, align 8, !tbaa !335
  %34 = icmp ne i64 %33, 0
  %35 = zext i1 %34 to i64
  br label %36

36:                                               ; preds = %22, %30
  %37 = phi i64 [ 1, %22 ], [ %35, %30 ]
  %38 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i64 %37, ptr %38, align 8, !tbaa !344
  %39 = getelementptr inbounds nuw i8, ptr %0, i64 168
  store i32 0, ptr %39, align 8, !tbaa !336
  %40 = icmp eq i32 %23, 31
  br i1 %40, label %116, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds nuw i8, ptr %0, i64 24
  br label %43

43:                                               ; preds = %41, %112
  %44 = phi i32 [ %25, %41 ], [ %45, %112 ]
  %45 = lshr i32 %44, 1
  tail call void @_ZN3fmt3v116detail6bigint6squareEv(ptr noundef nonnull align 8 dereferenceable(172) %0)
  %46 = and i32 %45, %1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %112, label %48

48:                                               ; preds = %43
  %49 = load i64, ptr %38, align 8, !tbaa !344
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %112, label %51

51:                                               ; preds = %48
  %52 = load ptr, ptr %0, align 8, !tbaa !334
  %53 = and i64 %49, 1
  %54 = icmp eq i64 %49, 1
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = and i64 %49, -2
  br label %76

57:                                               ; preds = %76, %51
  %58 = phi i64 [ poison, %51 ], [ %92, %76 ]
  %59 = phi i64 [ poison, %51 ], [ %94, %76 ]
  %60 = phi i64 [ 0, %51 ], [ %95, %76 ]
  %61 = phi i64 [ 0, %51 ], [ %94, %76 ]
  %62 = icmp eq i64 %53, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds nuw i32, ptr %52, i64 %60
  %65 = load i32, ptr %64, align 4, !tbaa !11
  %66 = zext i32 %65 to i64
  %67 = mul nuw nsw i64 %66, 5
  %68 = add nuw nsw i64 %67, %61
  %69 = trunc i64 %68 to i32
  store i32 %69, ptr %64, align 4, !tbaa !11
  %70 = lshr i64 %68, 32
  br label %71

71:                                               ; preds = %57, %63
  %72 = phi i64 [ %58, %57 ], [ %68, %63 ]
  %73 = phi i64 [ %59, %57 ], [ %70, %63 ]
  %74 = trunc nuw nsw i64 %73 to i32
  %75 = icmp samesign ult i64 %72, 4294967296
  br i1 %75, label %112, label %98

76:                                               ; preds = %76, %55
  %77 = phi i64 [ 0, %55 ], [ %95, %76 ]
  %78 = phi i64 [ 0, %55 ], [ %94, %76 ]
  %79 = phi i64 [ 0, %55 ], [ %96, %76 ]
  %80 = getelementptr inbounds nuw i32, ptr %52, i64 %77
  %81 = load i32, ptr %80, align 4, !tbaa !11
  %82 = zext i32 %81 to i64
  %83 = mul nuw nsw i64 %82, 5
  %84 = add nuw nsw i64 %83, %78
  %85 = trunc i64 %84 to i32
  store i32 %85, ptr %80, align 4, !tbaa !11
  %86 = lshr i64 %84, 32
  %87 = or disjoint i64 %77, 1
  %88 = getelementptr inbounds nuw i32, ptr %52, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !11
  %90 = zext i32 %89 to i64
  %91 = mul nuw nsw i64 %90, 5
  %92 = add nuw nsw i64 %91, %86
  %93 = trunc i64 %92 to i32
  store i32 %93, ptr %88, align 4, !tbaa !11
  %94 = lshr i64 %92, 32
  %95 = add nuw i64 %77, 2
  %96 = add i64 %79, 2
  %97 = icmp eq i64 %96, %56
  br i1 %97, label %57, label %76, !llvm.loop !364

98:                                               ; preds = %71
  %99 = add i64 %49, 1
  %100 = load i64, ptr %27, align 8, !tbaa !335
  %101 = icmp ugt i64 %99, %100
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = load ptr, ptr %42, align 8, !tbaa !332
  tail call void %103(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef %99)
  %104 = load i64, ptr %38, align 8, !tbaa !344
  %105 = add i64 %104, 1
  %106 = load ptr, ptr %0, align 8, !tbaa !334
  br label %107

107:                                              ; preds = %102, %98
  %108 = phi ptr [ %52, %98 ], [ %106, %102 ]
  %109 = phi i64 [ %99, %98 ], [ %105, %102 ]
  %110 = phi i64 [ %49, %98 ], [ %104, %102 ]
  store i64 %109, ptr %38, align 8, !tbaa !344
  %111 = getelementptr inbounds nuw i32, ptr %108, i64 %110
  store i32 %74, ptr %111, align 4, !tbaa !11
  br label %112

112:                                              ; preds = %107, %71, %48, %43
  %113 = icmp samesign ult i32 %44, 4
  br i1 %113, label %114, label %43, !llvm.loop !369

114:                                              ; preds = %112
  %115 = load i32, ptr %39, align 8, !tbaa !336
  br label %116

116:                                              ; preds = %114, %36
  %117 = phi i32 [ %115, %114 ], [ 0, %36 ]
  %118 = lshr i32 %1, 5
  %119 = add nsw i32 %117, %118
  store i32 %119, ptr %39, align 8, !tbaa !336
  %120 = and i32 %1, 31
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %187, label %122

122:                                              ; preds = %116
  %123 = load i64, ptr %38, align 8, !tbaa !344
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %187, label %125

125:                                              ; preds = %122
  %126 = load ptr, ptr %0, align 8, !tbaa !334
  %127 = sub nuw nsw i32 32, %120
  %128 = icmp ult i64 %123, 8
  br i1 %128, label %156, label %129

129:                                              ; preds = %125
  %130 = and i64 %123, -8
  %131 = insertelement <4 x i32> poison, i32 %127, i64 0
  %132 = shufflevector <4 x i32> %131, <4 x i32> poison, <4 x i32> zeroinitializer
  %133 = insertelement <4 x i32> poison, i32 %120, i64 0
  %134 = shufflevector <4 x i32> %133, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %135

135:                                              ; preds = %135, %129
  %136 = phi i64 [ 0, %129 ], [ %150, %135 ]
  %137 = phi <4 x i32> [ <i32 poison, i32 poison, i32 poison, i32 0>, %129 ], [ %143, %135 ]
  %138 = getelementptr inbounds nuw i32, ptr %126, i64 %136
  %139 = getelementptr inbounds nuw i8, ptr %138, i64 16
  %140 = load <4 x i32>, ptr %138, align 4, !tbaa !11
  %141 = load <4 x i32>, ptr %139, align 4, !tbaa !11
  %142 = lshr <4 x i32> %140, %132
  %143 = lshr <4 x i32> %141, %132
  %144 = shufflevector <4 x i32> %137, <4 x i32> %142, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %145 = shufflevector <4 x i32> %142, <4 x i32> %143, <4 x i32> <i32 3, i32 4, i32 5, i32 6>
  %146 = shl <4 x i32> %140, %134
  %147 = shl <4 x i32> %141, %134
  %148 = add <4 x i32> %146, %144
  %149 = add <4 x i32> %147, %145
  store <4 x i32> %148, ptr %138, align 4, !tbaa !11
  store <4 x i32> %149, ptr %139, align 4, !tbaa !11
  %150 = add nuw i64 %136, 8
  %151 = icmp eq i64 %150, %130
  br i1 %151, label %152, label %135, !llvm.loop !370

152:                                              ; preds = %135
  %153 = extractelement <4 x i32> %143, i64 3
  %154 = extractelement <4 x i32> %143, i64 3
  %155 = icmp eq i64 %123, %130
  br i1 %155, label %159, label %156

156:                                              ; preds = %125, %152
  %157 = phi i64 [ 0, %125 ], [ %130, %152 ]
  %158 = phi i32 [ 0, %125 ], [ %154, %152 ]
  br label %162

159:                                              ; preds = %162, %152
  %160 = phi i32 [ %153, %152 ], [ %167, %162 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %187, label %172

162:                                              ; preds = %156, %162
  %163 = phi i64 [ %170, %162 ], [ %157, %156 ]
  %164 = phi i32 [ %167, %162 ], [ %158, %156 ]
  %165 = getelementptr inbounds nuw i32, ptr %126, i64 %163
  %166 = load i32, ptr %165, align 4, !tbaa !11
  %167 = lshr i32 %166, %127
  %168 = shl i32 %166, %120
  %169 = add i32 %168, %164
  store i32 %169, ptr %165, align 4, !tbaa !11
  %170 = add nuw i64 %163, 1
  %171 = icmp eq i64 %170, %123
  br i1 %171, label %159, label %162, !llvm.loop !371

172:                                              ; preds = %159
  %173 = add i64 %123, 1
  %174 = load i64, ptr %27, align 8, !tbaa !335
  %175 = icmp ugt i64 %173, %174
  br i1 %175, label %176, label %182

176:                                              ; preds = %172
  %177 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %178 = load ptr, ptr %177, align 8, !tbaa !332
  tail call void %178(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef %173)
  %179 = load i64, ptr %38, align 8, !tbaa !344
  %180 = add i64 %179, 1
  %181 = load ptr, ptr %0, align 8, !tbaa !334
  br label %182

182:                                              ; preds = %176, %172
  %183 = phi ptr [ %126, %172 ], [ %181, %176 ]
  %184 = phi i64 [ %173, %172 ], [ %180, %176 ]
  %185 = phi i64 [ %123, %172 ], [ %179, %176 ]
  store i64 %184, ptr %38, align 8, !tbaa !344
  %186 = getelementptr inbounds nuw i32, ptr %183, i64 %185
  store i32 %160, ptr %186, align 4, !tbaa !11
  br label %187

187:                                              ; preds = %182, %159, %122, %116, %18
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3fmt3v116detail6bigint13divmod_assignERKS2_(ptr noundef nonnull align 8 dereferenceable(172) %0, ptr noundef nonnull align 8 dereferenceable(172) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq ptr %0, %1
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2738, ptr noundef nonnull @.str.14) #31
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %7 = load i64, ptr %6, align 8, !tbaa !344
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds nuw i8, ptr %0, i64 168
  %10 = load i32, ptr %9, align 8, !tbaa !336
  %11 = add nsw i32 %10, %8
  %12 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %13 = load i64, ptr %12, align 8, !tbaa !344
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds nuw i8, ptr %1, i64 168
  %16 = load i32, ptr %15, align 8, !tbaa !336
  %17 = add nsw i32 %16, %14
  %18 = icmp eq i32 %11, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %5
  %20 = icmp sgt i32 %11, %17
  br i1 %20, label %21, label %204

21:                                               ; preds = %19
  %22 = load ptr, ptr %1, align 8, !tbaa !334
  br label %50

23:                                               ; preds = %5
  %24 = sub i32 %8, %14
  %25 = tail call i32 @llvm.smax.i32(i32 %24, i32 0)
  %26 = load ptr, ptr %0, align 8
  %27 = load ptr, ptr %1, align 8
  %28 = shl i64 %7, 32
  %29 = ashr exact i64 %28, 32
  %30 = zext nneg i32 %25 to i64
  %31 = shl i64 %13, 32
  %32 = ashr exact i64 %31, 32
  %33 = tail call i64 @llvm.smin.i64(i64 %29, i64 %30)
  br label %34

34:                                               ; preds = %38, %23
  %35 = phi i64 [ %40, %38 ], [ %32, %23 ]
  %36 = phi i64 [ %39, %38 ], [ %29, %23 ]
  %37 = icmp sgt i64 %36, %30
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = add nsw i64 %36, -1
  %40 = add nsw i64 %35, -1
  %41 = getelementptr inbounds i32, ptr %26, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !11
  %43 = getelementptr inbounds i32, ptr %27, i64 %40
  %44 = load i32, ptr %43, align 4, !tbaa !11
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %34, label %48, !llvm.loop !365

46:                                               ; preds = %34
  %47 = icmp slt i64 %33, %35
  br i1 %47, label %204, label %50

48:                                               ; preds = %38
  %49 = icmp ugt i32 %42, %44
  br i1 %49, label %50, label %204

50:                                               ; preds = %21, %48, %46
  %51 = phi ptr [ %22, %21 ], [ %27, %48 ], [ %27, %46 ]
  %52 = getelementptr i32, ptr %51, i64 %13
  %53 = getelementptr i8, ptr %52, i64 -4
  %54 = load i32, ptr %53, align 4, !tbaa !11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2740, ptr noundef nonnull @.str.14) #31
  unreachable

57:                                               ; preds = %50
  %58 = sub nsw i32 %10, %16
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %142, label %60

60:                                               ; preds = %57
  %61 = add nsw i32 %58, %8
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

64:                                               ; preds = %60
  %65 = zext nneg i32 %61 to i64
  %66 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %67 = load i64, ptr %66, align 8, !tbaa !335
  %68 = icmp ult i64 %67, %65
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %71 = load ptr, ptr %70, align 8, !tbaa !332
  tail call void %71(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef %65)
  %72 = load i64, ptr %66, align 8, !tbaa !335
  br label %73

73:                                               ; preds = %69, %64
  %74 = phi i64 [ %67, %64 ], [ %72, %69 ]
  %75 = tail call noundef i64 @llvm.umin.i64(i64 %65, i64 %74)
  store i64 %75, ptr %6, align 8, !tbaa !344
  %76 = icmp sgt i32 %8, 0
  %77 = load ptr, ptr %0, align 8, !tbaa !334
  br i1 %76, label %78, label %137

78:                                               ; preds = %73
  %79 = add nsw i32 %8, -1
  %80 = add i32 %58, %79
  %81 = sext i32 %80 to i64
  %82 = zext i32 %79 to i64
  %83 = and i64 %7, 2147483647
  %84 = icmp samesign ult i64 %83, 8
  br i1 %84, label %109, label %85

85:                                               ; preds = %78
  %86 = sub nsw i64 %82, %81
  %87 = and i64 %86, 4611686018427387896
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %109, label %89

89:                                               ; preds = %85
  %90 = and i64 %7, 2147483640
  %91 = sub nsw i64 %82, %90
  %92 = sub nsw i64 %81, %90
  br label %93

93:                                               ; preds = %93, %89
  %94 = phi i64 [ 0, %89 ], [ %105, %93 ]
  %95 = sub i64 %82, %94
  %96 = sub i64 %81, %94
  %97 = getelementptr inbounds nuw i32, ptr %77, i64 %95
  %98 = getelementptr inbounds i8, ptr %97, i64 -12
  %99 = getelementptr inbounds i8, ptr %97, i64 -28
  %100 = load <4 x i32>, ptr %98, align 4, !tbaa !11
  %101 = load <4 x i32>, ptr %99, align 4, !tbaa !11
  %102 = getelementptr inbounds i32, ptr %77, i64 %96
  %103 = getelementptr inbounds i8, ptr %102, i64 -12
  %104 = getelementptr inbounds i8, ptr %102, i64 -28
  store <4 x i32> %100, ptr %103, align 4, !tbaa !11
  store <4 x i32> %101, ptr %104, align 4, !tbaa !11
  %105 = add nuw i64 %94, 8
  %106 = icmp eq i64 %105, %90
  br i1 %106, label %107, label %93, !llvm.loop !372

107:                                              ; preds = %93
  %108 = icmp eq i64 %83, %90
  br i1 %108, label %137, label %109

109:                                              ; preds = %85, %78, %107
  %110 = phi i64 [ %82, %78 ], [ %82, %85 ], [ %91, %107 ]
  %111 = phi i64 [ %81, %78 ], [ %81, %85 ], [ %92, %107 ]
  %112 = add nsw i64 %110, 1
  %113 = and i64 %112, 3
  %114 = and i64 %110, 3
  %115 = icmp eq i64 %114, 3
  br i1 %115, label %127, label %116

116:                                              ; preds = %109, %116
  %117 = phi i64 [ %123, %116 ], [ %110, %109 ]
  %118 = phi i64 [ %124, %116 ], [ %111, %109 ]
  %119 = phi i64 [ %125, %116 ], [ 0, %109 ]
  %120 = getelementptr inbounds nuw i32, ptr %77, i64 %117
  %121 = load i32, ptr %120, align 4, !tbaa !11
  %122 = getelementptr inbounds i32, ptr %77, i64 %118
  store i32 %121, ptr %122, align 4, !tbaa !11
  %123 = add nsw i64 %117, -1
  %124 = add nsw i64 %118, -1
  %125 = add i64 %119, 1
  %126 = icmp eq i64 %125, %113
  br i1 %126, label %127, label %116, !llvm.loop !373

127:                                              ; preds = %116, %109
  %128 = phi i64 [ %110, %109 ], [ %123, %116 ]
  %129 = phi i64 [ %111, %109 ], [ %124, %116 ]
  %130 = icmp ult i64 %110, 3
  br i1 %130, label %137, label %131

131:                                              ; preds = %127
  %132 = getelementptr i8, ptr %77, i64 -4
  %133 = getelementptr i8, ptr %77, i64 -4
  %134 = getelementptr i8, ptr %77, i64 -8
  %135 = getelementptr i8, ptr %77, i64 -8
  %136 = getelementptr i8, ptr %77, i64 -12
  br label %143

137:                                              ; preds = %127, %143, %107, %73
  %138 = zext nneg i32 %58 to i64
  %139 = shl nuw nsw i64 %138, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %77, i8 0, i64 %139, i1 false)
  %140 = load i32, ptr %9, align 8, !tbaa !336
  %141 = sub nsw i32 %140, %58
  store i32 %141, ptr %9, align 8, !tbaa !336
  br label %142

142:                                              ; preds = %57, %137
  br label %162

143:                                              ; preds = %143, %131
  %144 = phi i64 [ %128, %131 ], [ %159, %143 ]
  %145 = phi i64 [ %129, %131 ], [ %160, %143 ]
  %146 = getelementptr inbounds nuw i32, ptr %77, i64 %144
  %147 = load i32, ptr %146, align 4, !tbaa !11
  %148 = getelementptr inbounds i32, ptr %77, i64 %145
  store i32 %147, ptr %148, align 4, !tbaa !11
  %149 = getelementptr i32, ptr %132, i64 %144
  %150 = load i32, ptr %149, align 4, !tbaa !11
  %151 = getelementptr i32, ptr %133, i64 %145
  store i32 %150, ptr %151, align 4, !tbaa !11
  %152 = getelementptr i32, ptr %134, i64 %144
  %153 = load i32, ptr %152, align 4, !tbaa !11
  %154 = getelementptr i32, ptr %135, i64 %145
  store i32 %153, ptr %154, align 4, !tbaa !11
  %155 = add nsw i64 %144, -3
  %156 = getelementptr inbounds nuw i32, ptr %77, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !11
  %158 = getelementptr i32, ptr %136, i64 %145
  store i32 %157, ptr %158, align 4, !tbaa !11
  %159 = add nsw i64 %144, -4
  %160 = add nsw i64 %145, -4
  %161 = icmp eq i64 %155, 0
  br i1 %161, label %137, label %143, !llvm.loop !374

162:                                              ; preds = %203, %142
  %163 = phi i32 [ 0, %142 ], [ %164, %203 ]
  tail call void @_ZN3fmt3v116detail6bigint16subtract_alignedERKS2_(ptr noundef nonnull align 8 dereferenceable(172) %0, ptr noundef nonnull align 8 dereferenceable(172) %1)
  %164 = add nuw nsw i32 %163, 1
  %165 = load i64, ptr %6, align 8, !tbaa !344
  %166 = trunc i64 %165 to i32
  %167 = load i32, ptr %9, align 8, !tbaa !336
  %168 = add nsw i32 %167, %166
  %169 = load i64, ptr %12, align 8, !tbaa !344
  %170 = trunc i64 %169 to i32
  %171 = load i32, ptr %15, align 8, !tbaa !336
  %172 = add nsw i32 %171, %170
  %173 = icmp eq i32 %168, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %162
  %175 = icmp sgt i32 %168, %172
  br i1 %175, label %203, label %204

176:                                              ; preds = %162
  %177 = sub i32 %166, %170
  %178 = tail call i32 @llvm.smax.i32(i32 %177, i32 0)
  %179 = load ptr, ptr %0, align 8
  %180 = load ptr, ptr %1, align 8
  %181 = shl i64 %165, 32
  %182 = ashr exact i64 %181, 32
  %183 = zext nneg i32 %178 to i64
  %184 = shl i64 %169, 32
  %185 = ashr exact i64 %184, 32
  %186 = tail call i64 @llvm.smin.i64(i64 %182, i64 %183)
  br label %187

187:                                              ; preds = %191, %176
  %188 = phi i64 [ %193, %191 ], [ %185, %176 ]
  %189 = phi i64 [ %192, %191 ], [ %182, %176 ]
  %190 = icmp sgt i64 %189, %183
  br i1 %190, label %191, label %199

191:                                              ; preds = %187
  %192 = add nsw i64 %189, -1
  %193 = add nsw i64 %188, -1
  %194 = getelementptr inbounds i32, ptr %179, i64 %192
  %195 = load i32, ptr %194, align 4, !tbaa !11
  %196 = getelementptr inbounds i32, ptr %180, i64 %193
  %197 = load i32, ptr %196, align 4, !tbaa !11
  %198 = icmp eq i32 %195, %197
  br i1 %198, label %187, label %201, !llvm.loop !365

199:                                              ; preds = %187
  %200 = icmp slt i64 %186, %188
  br i1 %200, label %204, label %203

201:                                              ; preds = %191
  %202 = icmp ugt i32 %195, %197
  br i1 %202, label %203, label %204

203:                                              ; preds = %201, %174, %199
  br label %162, !llvm.loop !375

204:                                              ; preds = %199, %201, %174, %46, %19, %48
  %205 = phi i32 [ 0, %48 ], [ 0, %19 ], [ 0, %46 ], [ %164, %174 ], [ %164, %201 ], [ %164, %199 ]
  ret i32 %205
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1) #0 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %4 = load i64, ptr %3, align 8, !tbaa !335
  %5 = lshr i64 %4, 1
  %6 = add i64 %5, %4
  %7 = icmp ugt i64 %1, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = icmp ugt i64 %6, 4611686018427387903
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = tail call noundef i64 @llvm.umax.i64(i64 %1, i64 4611686018427387903)
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i64 [ %11, %10 ], [ %1, %2 ]
  %14 = icmp ugt i64 %13, 4611686018427387903
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 746, ptr noundef nonnull @.str.14) #31
  unreachable

16:                                               ; preds = %8, %12
  %17 = phi i64 [ %13, %12 ], [ %6, %8 ]
  %18 = load ptr, ptr %0, align 8, !tbaa !334
  %19 = shl nuw i64 %17, 2
  %20 = tail call ptr @malloc(i64 noundef %19) #32
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call ptr @__cxa_allocate_exception(i64 8) #30
  tail call void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %23) #30
  tail call void @__cxa_throw(ptr nonnull %23, ptr nonnull @_ZTISt9bad_alloc, ptr nonnull @_ZNSt9bad_allocD1Ev) #31
  unreachable

24:                                               ; preds = %16
  %25 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %26 = load i64, ptr %25, align 8, !tbaa !344
  %27 = icmp ule i64 %26, %17
  tail call void @llvm.assume(i1 %27)
  %28 = shl i64 %26, 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %20, ptr align 4 %18, i64 %28, i1 false)
  store ptr %20, ptr %0, align 8, !tbaa !334
  store i64 %17, ptr %3, align 8, !tbaa !335
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %30 = icmp eq ptr %18, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void @free(ptr noundef %18)
  br label %32

32:                                               ; preds = %31, %24
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail6bigint6squareEv(ptr noundef nonnull align 8 dereferenceable(172) %0) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %2 = alloca %"class.fmt::v11::basic_memory_buffer.46", align 8
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %4 = load i64, ptr %3, align 8, !tbaa !344
  %5 = trunc i64 %4 to i32
  %6 = shl nsw i32 %5, 1
  call void @llvm.lifetime.start.p0(i64 168, ptr nonnull %2) #30
  %7 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %8 = getelementptr inbounds nuw i8, ptr %2, i64 24
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(161) %2, i8 0, i64 24, i1 false)
  store ptr @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy, ptr %8, align 8, !tbaa !332
  %9 = load ptr, ptr %0, align 8, !tbaa !334
  %10 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %11 = load i64, ptr %10, align 8, !tbaa !335
  %12 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %13 = icmp eq ptr %9, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %1
  %15 = getelementptr inbounds nuw i8, ptr %2, i64 32
  store ptr %15, ptr %2, align 8, !tbaa !334
  store i64 %11, ptr %7, align 8, !tbaa !335
  %16 = icmp eq i64 %4, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = shl i64 %4, 2
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %15, ptr nonnull align 8 %12, i64 %18, i1 false), !tbaa !11
  br label %20

19:                                               ; preds = %1
  store ptr %9, ptr %2, align 8, !tbaa !334
  store i64 %11, ptr %7, align 8, !tbaa !335
  store ptr %12, ptr %0, align 8, !tbaa !334
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  br label %20

20:                                               ; preds = %17, %19, %14
  %21 = icmp ugt i64 %4, %11
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  invoke void @_ZN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEE4growERNS2_6bufferIjEEy(ptr noundef nonnull align 8 dereferenceable(161) %2, i64 noundef %4)
          to label %23 unwind label %25

23:                                               ; preds = %22
  %24 = load i64, ptr %7, align 8, !tbaa !335
  br label %28

25:                                               ; preds = %22
  %26 = landingpad { ptr, i32 }
          catch ptr null
  %27 = extractvalue { ptr, i32 } %26, 0
  call void @__clang_call_terminate(ptr %27) #33
  unreachable

28:                                               ; preds = %20, %23
  %29 = phi i64 [ %11, %20 ], [ %24, %23 ]
  %30 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %31 = call noundef i64 @llvm.umin.i64(i64 %4, i64 %29)
  store i64 %31, ptr %30, align 8, !tbaa !344
  %32 = icmp sgt i32 %5, -1
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %34 unwind label %77

34:                                               ; preds = %33
  unreachable

35:                                               ; preds = %28
  %36 = zext nneg i32 %6 to i64
  %37 = load i64, ptr %10, align 8, !tbaa !335
  %38 = icmp ult i64 %37, %36
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %41 = load ptr, ptr %40, align 8, !tbaa !332
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(161) %0, i64 noundef %36)
          to label %42 unwind label %77

42:                                               ; preds = %39
  %43 = load i64, ptr %10, align 8, !tbaa !335
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i64 [ %37, %35 ], [ %43, %42 ]
  %46 = call noundef i64 @llvm.umin.i64(i64 %36, i64 %45)
  store i64 %46, ptr %3, align 8, !tbaa !344
  %47 = icmp eq i32 %5, 0
  %48 = load ptr, ptr %0, align 8
  br i1 %47, label %63, label %49

49:                                               ; preds = %44
  %50 = load ptr, ptr %2, align 8
  %51 = and i64 %4, 2147483647
  %52 = getelementptr i8, ptr %50, i64 -4
  br label %53

53:                                               ; preds = %95, %49
  %54 = phi i64 [ 1, %49 ], [ %101, %95 ]
  %55 = phi i64 [ 0, %49 ], [ %100, %95 ]
  %56 = phi i128 [ 0, %49 ], [ %99, %95 ]
  %57 = and i64 %54, 1
  %58 = icmp eq i64 %55, 0
  br i1 %58, label %79, label %59

59:                                               ; preds = %53
  %60 = and i64 %54, 9223372036854775806
  br label %103

61:                                               ; preds = %95
  %62 = load ptr, ptr %0, align 8
  br label %63

63:                                               ; preds = %61, %44
  %64 = phi ptr [ %48, %44 ], [ %62, %61 ]
  %65 = phi i128 [ 0, %44 ], [ %99, %61 ]
  %66 = icmp sgt i32 %6, %5
  br i1 %66, label %67, label %133

67:                                               ; preds = %63
  %68 = add nsw i32 %5, -1
  %69 = load ptr, ptr %2, align 8
  %70 = and i64 %4, 2147483647
  %71 = and i64 %4, 2147483647
  %72 = add nsw i32 %5, -2
  %73 = add nsw i64 %70, -1
  %74 = getelementptr inbounds i32, ptr %69, i64 %73
  %75 = getelementptr i8, ptr %69, i64 -4
  %76 = getelementptr i8, ptr %69, i64 4
  br label %152

77:                                               ; preds = %39, %33
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %229

79:                                               ; preds = %103, %53
  %80 = phi i128 [ poison, %53 ], [ %126, %103 ]
  %81 = phi i64 [ 0, %53 ], [ %127, %103 ]
  %82 = phi i64 [ %55, %53 ], [ %128, %103 ]
  %83 = phi i128 [ %56, %53 ], [ %126, %103 ]
  %84 = icmp eq i64 %57, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds nuw i32, ptr %50, i64 %81
  %87 = load i32, ptr %86, align 4, !tbaa !11
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds nuw i32, ptr %50, i64 %82
  %90 = load i32, ptr %89, align 4, !tbaa !11
  %91 = zext i32 %90 to i64
  %92 = mul nuw i64 %91, %88
  %93 = zext i64 %92 to i128
  %94 = add i128 %83, %93
  br label %95

95:                                               ; preds = %79, %85
  %96 = phi i128 [ %80, %79 ], [ %94, %85 ]
  %97 = trunc i128 %96 to i32
  %98 = getelementptr inbounds nuw i32, ptr %48, i64 %55
  store i32 %97, ptr %98, align 4, !tbaa !11
  %99 = lshr i128 %96, 32
  %100 = add nuw nsw i64 %55, 1
  %101 = add nuw nsw i64 %54, 1
  %102 = icmp eq i64 %100, %51
  br i1 %102, label %61, label %53, !llvm.loop !376

103:                                              ; preds = %103, %59
  %104 = phi i64 [ 0, %59 ], [ %127, %103 ]
  %105 = phi i64 [ %55, %59 ], [ %128, %103 ]
  %106 = phi i128 [ %56, %59 ], [ %126, %103 ]
  %107 = phi i64 [ 0, %59 ], [ %129, %103 ]
  %108 = getelementptr inbounds nuw i32, ptr %50, i64 %104
  %109 = load i32, ptr %108, align 4, !tbaa !11
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds nuw i32, ptr %50, i64 %105
  %112 = load i32, ptr %111, align 4, !tbaa !11
  %113 = zext i32 %112 to i64
  %114 = mul nuw i64 %113, %110
  %115 = zext i64 %114 to i128
  %116 = add i128 %106, %115
  %117 = or disjoint i64 %104, 1
  %118 = getelementptr inbounds nuw i32, ptr %50, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !11
  %120 = zext i32 %119 to i64
  %121 = getelementptr i32, ptr %52, i64 %105
  %122 = load i32, ptr %121, align 4, !tbaa !11
  %123 = zext i32 %122 to i64
  %124 = mul nuw i64 %123, %120
  %125 = zext i64 %124 to i128
  %126 = add i128 %116, %125
  %127 = add nuw nsw i64 %104, 2
  %128 = add nsw i64 %105, -2
  %129 = add i64 %107, 2
  %130 = icmp eq i64 %129, %60
  br i1 %130, label %79, label %103, !llvm.loop !377

131:                                              ; preds = %181
  %132 = load ptr, ptr %0, align 8
  br label %133

133:                                              ; preds = %131, %63
  %134 = phi ptr [ %132, %131 ], [ %64, %63 ]
  br label %135

135:                                              ; preds = %139, %133
  %136 = phi i64 [ %140, %139 ], [ %46, %133 ]
  %137 = trunc nuw i64 %136 to i32
  %138 = icmp sgt i32 %137, 1
  br i1 %138, label %139, label %144

139:                                              ; preds = %135
  %140 = add nsw i64 %136, -1
  %141 = getelementptr inbounds nuw i32, ptr %134, i64 %140
  %142 = load i32, ptr %141, align 4, !tbaa !11
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %135, label %144, !llvm.loop !378

144:                                              ; preds = %139, %135
  %145 = and i64 %136, 4294967295
  %146 = icmp ult i64 %45, %145
  br i1 %146, label %147, label %216

147:                                              ; preds = %144
  %148 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %149 = load ptr, ptr %148, align 8, !tbaa !332
  invoke void %149(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef %145)
          to label %150 unwind label %227

150:                                              ; preds = %147
  %151 = load i64, ptr %10, align 8, !tbaa !335
  br label %216

152:                                              ; preds = %67, %181
  %153 = phi i32 [ 0, %67 ], [ %189, %181 ]
  %154 = phi i64 [ %71, %67 ], [ %186, %181 ]
  %155 = phi i32 [ 1, %67 ], [ %187, %181 ]
  %156 = phi i128 [ %65, %67 ], [ %185, %181 ]
  %157 = trunc nuw i64 %154 to i32
  %158 = sub nsw i32 %157, %68
  %159 = icmp slt i32 %158, %5
  br i1 %159, label %160, label %181

160:                                              ; preds = %152
  %161 = sub i32 %68, %153
  %162 = sext i32 %155 to i64
  %163 = and i32 %161, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %175, label %165

165:                                              ; preds = %160
  %166 = add nsw i64 %162, 1
  %167 = getelementptr inbounds i32, ptr %69, i64 %162
  %168 = load i32, ptr %167, align 4, !tbaa !11
  %169 = zext i32 %168 to i64
  %170 = load i32, ptr %74, align 4, !tbaa !11
  %171 = zext i32 %170 to i64
  %172 = mul nuw i64 %171, %169
  %173 = zext i64 %172 to i128
  %174 = add nsw i128 %156, %173
  br label %175

175:                                              ; preds = %165, %160
  %176 = phi i128 [ poison, %160 ], [ %174, %165 ]
  %177 = phi i64 [ %70, %160 ], [ %73, %165 ]
  %178 = phi i64 [ %162, %160 ], [ %166, %165 ]
  %179 = phi i128 [ %156, %160 ], [ %174, %165 ]
  %180 = icmp eq i32 %72, %153
  br i1 %180, label %181, label %190

181:                                              ; preds = %175, %190, %152
  %182 = phi i128 [ %156, %152 ], [ %176, %175 ], [ %213, %190 ]
  %183 = trunc i128 %182 to i32
  %184 = getelementptr inbounds nuw i32, ptr %64, i64 %154
  store i32 %183, ptr %184, align 4, !tbaa !11
  %185 = lshr i128 %182, 32
  %186 = add nuw nsw i64 %154, 1
  %187 = add i32 %155, 1
  %188 = icmp eq i32 %155, %5
  %189 = add i32 %153, 1
  br i1 %188, label %131, label %152, !llvm.loop !379

190:                                              ; preds = %175, %190
  %191 = phi i64 [ %203, %190 ], [ %177, %175 ]
  %192 = phi i64 [ %204, %190 ], [ %178, %175 ]
  %193 = phi i128 [ %213, %190 ], [ %179, %175 ]
  %194 = getelementptr inbounds i32, ptr %69, i64 %192
  %195 = load i32, ptr %194, align 4, !tbaa !11
  %196 = zext i32 %195 to i64
  %197 = getelementptr i32, ptr %75, i64 %191
  %198 = load i32, ptr %197, align 4, !tbaa !11
  %199 = zext i32 %198 to i64
  %200 = mul nuw i64 %199, %196
  %201 = zext i64 %200 to i128
  %202 = add i128 %193, %201
  %203 = add nsw i64 %191, -2
  %204 = add nsw i64 %192, 2
  %205 = getelementptr i32, ptr %76, i64 %192
  %206 = load i32, ptr %205, align 4, !tbaa !11
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds i32, ptr %69, i64 %203
  %209 = load i32, ptr %208, align 4, !tbaa !11
  %210 = zext i32 %209 to i64
  %211 = mul nuw i64 %210, %207
  %212 = zext i64 %211 to i128
  %213 = add i128 %202, %212
  %214 = trunc i64 %204 to i32
  %215 = icmp eq i32 %214, %5
  br i1 %215, label %181, label %190, !llvm.loop !380

216:                                              ; preds = %150, %144
  %217 = phi i64 [ %45, %144 ], [ %151, %150 ]
  %218 = call noundef i64 @llvm.umin.i64(i64 %145, i64 %217)
  store i64 %218, ptr %3, align 8, !tbaa !344
  %219 = getelementptr inbounds nuw i8, ptr %0, i64 168
  %220 = load i32, ptr %219, align 8, !tbaa !336
  %221 = shl nsw i32 %220, 1
  store i32 %221, ptr %219, align 8, !tbaa !336
  %222 = load ptr, ptr %2, align 8, !tbaa !334
  %223 = getelementptr inbounds nuw i8, ptr %2, i64 32
  %224 = icmp eq ptr %222, %223
  br i1 %224, label %226, label %225

225:                                              ; preds = %216
  call void @free(ptr noundef %222)
  br label %226

226:                                              ; preds = %216, %225
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %2) #30
  ret void

227:                                              ; preds = %147
  %228 = landingpad { ptr, i32 }
          cleanup
  br label %229

229:                                              ; preds = %227, %77
  %230 = phi { ptr, i32 } [ %228, %227 ], [ %78, %77 ]
  %231 = load ptr, ptr %2, align 8, !tbaa !334
  %232 = getelementptr inbounds nuw i8, ptr %2, i64 32
  %233 = icmp eq ptr %231, %232
  br i1 %233, label %235, label %234

234:                                              ; preds = %229
  call void @free(ptr noundef %231)
  br label %235

235:                                              ; preds = %229, %234
  call void @llvm.lifetime.end.p0(i64 168, ptr nonnull %2) #30
  resume { ptr, i32 } %230
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail6bigint16subtract_alignedERKS2_(ptr noundef nonnull align 8 dereferenceable(172) %0, ptr noundef nonnull align 8 dereferenceable(172) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %1, i64 168
  %4 = load i32, ptr %3, align 8, !tbaa !336
  %5 = getelementptr inbounds nuw i8, ptr %0, i64 168
  %6 = load i32, ptr %5, align 8, !tbaa !336
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2541, ptr noundef nonnull @.str.38) #31
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %11 = load i64, ptr %10, align 8, !tbaa !344
  %12 = trunc i64 %11 to i32
  %13 = add nsw i32 %6, %12
  %14 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %15 = load i64, ptr %14, align 8, !tbaa !344
  %16 = trunc i64 %15 to i32
  %17 = add nsw i32 %4, %16
  %18 = icmp eq i32 %13, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %9
  %20 = icmp sgt i32 %13, %17
  br i1 %20, label %21, label %50

21:                                               ; preds = %19
  %22 = load ptr, ptr %0, align 8
  br label %51

23:                                               ; preds = %9
  %24 = sub i32 %12, %16
  %25 = tail call i32 @llvm.smax.i32(i32 %24, i32 0)
  %26 = load ptr, ptr %0, align 8
  %27 = load ptr, ptr %1, align 8
  %28 = shl i64 %11, 32
  %29 = ashr exact i64 %28, 32
  %30 = zext nneg i32 %25 to i64
  %31 = shl i64 %15, 32
  %32 = ashr exact i64 %31, 32
  %33 = tail call i64 @llvm.smin.i64(i64 %29, i64 %30)
  br label %34

34:                                               ; preds = %38, %23
  %35 = phi i64 [ %40, %38 ], [ %32, %23 ]
  %36 = phi i64 [ %39, %38 ], [ %29, %23 ]
  %37 = icmp sgt i64 %36, %30
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = add nsw i64 %36, -1
  %40 = add nsw i64 %35, -1
  %41 = getelementptr inbounds i32, ptr %26, i64 %39
  %42 = load i32, ptr %41, align 4, !tbaa !11
  %43 = getelementptr inbounds i32, ptr %27, i64 %40
  %44 = load i32, ptr %43, align 4, !tbaa !11
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %34, label %48, !llvm.loop !365

46:                                               ; preds = %34
  %47 = icmp slt i64 %33, %35
  br i1 %47, label %50, label %51

48:                                               ; preds = %38
  %49 = icmp ugt i32 %42, %44
  br i1 %49, label %51, label %50

50:                                               ; preds = %46, %19, %48
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2542, ptr noundef nonnull @.str.14) #31
  unreachable

51:                                               ; preds = %21, %48, %46
  %52 = phi ptr [ %22, %21 ], [ %26, %48 ], [ %26, %46 ]
  %53 = icmp eq i64 %15, 0
  br i1 %53, label %131, label %54

54:                                               ; preds = %51
  %55 = sub i32 %4, %6
  %56 = load ptr, ptr %1, align 8, !tbaa !334
  %57 = sext i32 %55 to i64
  %58 = and i64 %15, 1
  %59 = icmp eq i64 %15, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = and i64 %15, -2
  %62 = getelementptr i8, ptr %52, i64 4
  br label %89

63:                                               ; preds = %89, %54
  %64 = phi i64 [ poison, %54 ], [ %112, %89 ]
  %65 = phi i64 [ poison, %54 ], [ %114, %89 ]
  %66 = phi i64 [ poison, %54 ], [ %115, %89 ]
  %67 = phi i64 [ %57, %54 ], [ %115, %89 ]
  %68 = phi i64 [ 0, %54 ], [ %116, %89 ]
  %69 = phi i64 [ 0, %54 ], [ %114, %89 ]
  %70 = icmp eq i64 %58, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds nuw i32, ptr %56, i64 %68
  %73 = load i32, ptr %72, align 4, !tbaa !11
  %74 = getelementptr inbounds i32, ptr %52, i64 %67
  %75 = load i32, ptr %74, align 4, !tbaa !11
  %76 = zext i32 %75 to i64
  %77 = zext i32 %73 to i64
  %78 = add nuw nsw i64 %69, %77
  %79 = sub nsw i64 %76, %78
  %80 = trunc i64 %79 to i32
  store i32 %80, ptr %74, align 4, !tbaa !11
  %81 = lshr i64 %79, 63
  %82 = add nsw i64 %67, 1
  br label %83

83:                                               ; preds = %63, %71
  %84 = phi i64 [ %64, %63 ], [ %79, %71 ]
  %85 = phi i64 [ %65, %63 ], [ %81, %71 ]
  %86 = phi i64 [ %66, %63 ], [ %82, %71 ]
  %87 = load ptr, ptr %0, align 8
  %88 = icmp sgt i64 %84, -1
  br i1 %88, label %131, label %119

89:                                               ; preds = %89, %60
  %90 = phi i64 [ %57, %60 ], [ %115, %89 ]
  %91 = phi i64 [ 0, %60 ], [ %116, %89 ]
  %92 = phi i64 [ 0, %60 ], [ %114, %89 ]
  %93 = phi i64 [ 0, %60 ], [ %117, %89 ]
  %94 = getelementptr inbounds nuw i32, ptr %56, i64 %91
  %95 = load i32, ptr %94, align 4, !tbaa !11
  %96 = getelementptr inbounds i32, ptr %52, i64 %90
  %97 = load i32, ptr %96, align 4, !tbaa !11
  %98 = zext i32 %97 to i64
  %99 = zext i32 %95 to i64
  %100 = add nuw nsw i64 %92, %99
  %101 = sub nsw i64 %98, %100
  %102 = trunc i64 %101 to i32
  store i32 %102, ptr %96, align 4, !tbaa !11
  %103 = lshr i64 %101, 63
  %104 = or disjoint i64 %91, 1
  %105 = getelementptr inbounds nuw i32, ptr %56, i64 %104
  %106 = load i32, ptr %105, align 4, !tbaa !11
  %107 = getelementptr i32, ptr %62, i64 %90
  %108 = load i32, ptr %107, align 4, !tbaa !11
  %109 = zext i32 %108 to i64
  %110 = zext i32 %106 to i64
  %111 = add nuw nsw i64 %103, %110
  %112 = sub nsw i64 %109, %111
  %113 = trunc i64 %112 to i32
  store i32 %113, ptr %107, align 4, !tbaa !11
  %114 = lshr i64 %112, 63
  %115 = add nsw i64 %90, 2
  %116 = add nuw i64 %91, 2
  %117 = add i64 %93, 2
  %118 = icmp eq i64 %117, %61
  br i1 %118, label %63, label %89, !llvm.loop !381

119:                                              ; preds = %83
  %120 = shl i64 %86, 32
  %121 = ashr exact i64 %120, 30
  %122 = getelementptr inbounds i8, ptr %87, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !11
  %124 = zext i32 %123 to i64
  %125 = sub nsw i64 %124, %85
  %126 = trunc i64 %125 to i32
  store i32 %126, ptr %122, align 4, !tbaa !11
  %127 = icmp sgt i64 %125, -1
  br i1 %127, label %128, label %130

128:                                              ; preds = %119
  %129 = load ptr, ptr %0, align 8
  br label %131

130:                                              ; preds = %119
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2548, ptr noundef nonnull @.str.14) #31
  unreachable

131:                                              ; preds = %51, %128, %83
  %132 = phi ptr [ %129, %128 ], [ %87, %83 ], [ %52, %51 ]
  %133 = and i64 %11, 4294967295
  br label %134

134:                                              ; preds = %138, %131
  %135 = phi i64 [ %139, %138 ], [ %133, %131 ]
  %136 = trunc nuw i64 %135 to i32
  %137 = icmp sgt i32 %136, 1
  br i1 %137, label %138, label %143

138:                                              ; preds = %134
  %139 = add nsw i64 %135, -1
  %140 = getelementptr inbounds nuw i32, ptr %132, i64 %139
  %141 = load i32, ptr %140, align 4, !tbaa !11
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %134, label %146, !llvm.loop !378

143:                                              ; preds = %134
  %144 = icmp sgt i32 %12, -1
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

146:                                              ; preds = %138, %143
  %147 = and i64 %135, 4294967295
  %148 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %149 = load i64, ptr %148, align 8, !tbaa !335
  %150 = icmp ult i64 %149, %147
  br i1 %150, label %151, label %155

151:                                              ; preds = %146
  %152 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %153 = load ptr, ptr %152, align 8, !tbaa !332
  tail call void %153(ptr noundef nonnull align 8 dereferenceable(172) %0, i64 noundef %147)
  %154 = load i64, ptr %148, align 8, !tbaa !335
  br label %155

155:                                              ; preds = %146, %151
  %156 = phi i64 [ %149, %146 ], [ %154, %151 ]
  %157 = tail call noundef i64 @llvm.umin.i64(i64 %147, i64 %156)
  store i64 %157, ptr %10, align 8, !tbaa !344
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %3, i32 noundef %4, i64 %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca %"class.std::__1::locale", align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca %class.anon.51, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %17 = alloca %class.anon.53, align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.fmt::v11::detail::digit_grouping", align 8
  %20 = alloca %class.anon.54, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca %class.anon.55, align 8
  store i32 %3, ptr %8, align 4, !tbaa !201
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #30
  %24 = load ptr, ptr %1, align 8, !tbaa !317
  store ptr %24, ptr %9, align 8, !tbaa !19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #30
  %25 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %26 = load i32, ptr %25, align 8, !tbaa !319
  store i32 %26, ptr %10, align 4, !tbaa !11
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #30
  store i8 48, ptr %11, align 1, !tbaa !10
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %29, label %28

28:                                               ; preds = %6
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

29:                                               ; preds = %6
  %30 = icmp ne i32 %3, 0
  %31 = zext i1 %30 to i32
  %32 = add nuw i32 %26, %31
  %33 = zext i32 %32 to i64
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #30
  %34 = load i32, ptr %2, align 4, !tbaa !53
  %35 = and i32 %34, 16384
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #30
  %38 = icmp eq i64 %5, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = inttoptr i64 %5 to ptr
  call void @_ZNSt3__16localeC1ERKS0_(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 8 dereferenceable(8) %40) #30
  br label %42

41:                                               ; preds = %37
  call void @_ZNSt3__16localeC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  br label %42

42:                                               ; preds = %41, %39
  %43 = invoke noundef nonnull align 8 dereferenceable(40) ptr @_ZNKSt3__16locale9use_facetERNS0_2idE(ptr noundef nonnull align 8 dereferenceable(8) %7, ptr noundef nonnull align 4 dereferenceable(8) @_ZNSt3__18numpunctIcE2idE)
          to label %44 unwind label %51

44:                                               ; preds = %42
  %45 = load ptr, ptr %43, align 8, !tbaa !82
  %46 = getelementptr inbounds nuw i8, ptr %45, i64 24
  %47 = load ptr, ptr %46, align 8
  %48 = invoke noundef i8 %47(ptr noundef nonnull align 8 dereferenceable(40) %43)
          to label %53 unwind label %51

49:                                               ; preds = %356, %51
  %50 = phi { ptr, i32 } [ %52, %51 ], [ %357, %356 ]
  resume { ptr, i32 } %50

51:                                               ; preds = %44, %42
  %52 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  br label %49

53:                                               ; preds = %44
  call void @_ZNSt3__16localeD1Ev(ptr noundef nonnull align 8 dereferenceable(8) %7) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  %54 = load i32, ptr %10, align 4, !tbaa !11
  %55 = load i32, ptr %2, align 4
  br label %56

56:                                               ; preds = %29, %53
  %57 = phi i32 [ %55, %53 ], [ %34, %29 ]
  %58 = phi i32 [ %54, %53 ], [ %26, %29 ]
  %59 = phi i8 [ %48, %53 ], [ 46, %29 ]
  store i8 %59, ptr %12, align 1, !tbaa !10
  %60 = getelementptr inbounds nuw i8, ptr %1, i64 12
  %61 = load i32, ptr %60, align 4, !tbaa !320
  %62 = add nsw i32 %58, %61
  %63 = add nsw i32 %62, -1
  %64 = freeze i32 %57
  %65 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %66 = load i32, ptr %65, align 4
  %67 = trunc i32 %64 to i8
  %68 = and i8 %67, 7
  switch i8 %68, label %69 [
    i8 1, label %75
    i8 2, label %133
  ]

69:                                               ; preds = %56
  %70 = icmp slt i32 %62, -3
  br i1 %70, label %75, label %71

71:                                               ; preds = %69
  %72 = icmp sgt i32 %66, 0
  %73 = select i1 %72, i32 %66, i32 %4
  %74 = icmp sgt i32 %62, %73
  br i1 %74, label %75, label %133

75:                                               ; preds = %69, %56, %71
  %76 = and i32 %64, 8192
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = sub nsw i32 %66, %58
  %80 = call i32 @llvm.smax.i32(i32 %79, i32 0)
  %81 = zext nneg i32 %80 to i64
  %82 = add nuw nsw i64 %81, %33
  br label %86

83:                                               ; preds = %75
  %84 = icmp eq i32 %58, 1
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  store i8 0, ptr %12, align 1, !tbaa !10
  br label %86

86:                                               ; preds = %83, %85, %78
  %87 = phi i8 [ %59, %78 ], [ 0, %85 ], [ %59, %83 ]
  %88 = phi i32 [ %80, %78 ], [ 0, %85 ], [ 0, %83 ]
  %89 = phi i64 [ %82, %78 ], [ %33, %85 ], [ %33, %83 ]
  %90 = sub nsw i32 1, %62
  %91 = icmp slt i32 %62, 1
  %92 = select i1 %91, i32 %90, i32 %63
  %93 = icmp sgt i32 %92, 99
  %94 = icmp sgt i32 %92, 999
  %95 = select i1 %94, i64 4, i64 3
  %96 = select i1 %93, i64 %95, i64 2
  %97 = icmp eq i8 %87, 0
  %98 = select i1 %97, i64 2, i64 3
  %99 = add nuw nsw i64 %89, %96
  %100 = add nuw nsw i64 %99, %98
  %101 = and i32 %64, 4096
  %102 = icmp eq i32 %101, 0
  %103 = select i1 %102, i8 101, i8 69
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %13) #30
  %104 = load i32, ptr %8, align 4, !tbaa !201
  store i32 %104, ptr %13, align 8, !tbaa !382
  %105 = getelementptr inbounds nuw i8, ptr %13, i64 8
  %106 = load ptr, ptr %9, align 8, !tbaa !19
  store ptr %106, ptr %105, align 8, !tbaa !384
  %107 = getelementptr inbounds nuw i8, ptr %13, i64 16
  store i32 %58, ptr %107, align 8, !tbaa !385
  %108 = getelementptr inbounds nuw i8, ptr %13, i64 20
  store i8 %87, ptr %108, align 4, !tbaa !386
  %109 = getelementptr inbounds nuw i8, ptr %13, i64 24
  store i32 %88, ptr %109, align 8, !tbaa !387
  %110 = getelementptr inbounds nuw i8, ptr %13, i64 28
  store i8 48, ptr %110, align 4, !tbaa !388
  %111 = getelementptr inbounds nuw i8, ptr %13, i64 29
  store i8 %103, ptr %111, align 1, !tbaa !389
  %112 = getelementptr inbounds nuw i8, ptr %13, i64 32
  store i32 %63, ptr %112, align 8, !tbaa !390
  %113 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %114 = load i32, ptr %113, align 4, !tbaa !125
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %86
  %117 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %100, i64 noundef %100, ptr noundef nonnull align 8 dereferenceable(36) %13)
  br label %131

118:                                              ; preds = %86
  %119 = inttoptr i64 %0 to ptr
  %120 = getelementptr inbounds nuw i8, ptr %119, i64 8
  %121 = load i64, ptr %120, align 8, !tbaa !37
  %122 = add i64 %121, %100
  %123 = getelementptr inbounds nuw i8, ptr %119, i64 16
  %124 = load i64, ptr %123, align 8, !tbaa !18
  %125 = icmp ugt i64 %122, %124
  br i1 %125, label %126, label %129

126:                                              ; preds = %118
  %127 = getelementptr inbounds nuw i8, ptr %119, i64 24
  %128 = load ptr, ptr %127, align 8, !tbaa !13
  call void %128(ptr noundef nonnull align 8 dereferenceable(32) %119, i64 noundef %122)
  br label %129

129:                                              ; preds = %118, %126
  %130 = call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(36) %13, i64 %0)
  br label %131

131:                                              ; preds = %129, %116
  %132 = phi i64 [ %117, %116 ], [ %130, %129 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %13) #30
  br label %358

133:                                              ; preds = %56, %71
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #30
  store i32 %62, ptr %14, align 4, !tbaa !11
  %134 = icmp sgt i32 %61, -1
  br i1 %134, label %135, label %232

135:                                              ; preds = %133
  %136 = zext nneg i32 %61 to i64
  %137 = add nuw nsw i64 %136, %33
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #30
  %138 = sub nsw i32 %66, %62
  store i32 %138, ptr %15, align 4, !tbaa !11
  %139 = and i32 %64, 8192
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %135
  %142 = add nuw nsw i64 %137, 1
  %143 = icmp sgt i32 %138, 0
  %144 = icmp eq i8 %68, 2
  %145 = or i1 %143, %144
  br i1 %145, label %147, label %146

146:                                              ; preds = %141
  store i32 0, ptr %15, align 4, !tbaa !11
  br label %151

147:                                              ; preds = %141
  br i1 %143, label %148, label %151

148:                                              ; preds = %147
  %149 = zext nneg i32 %138 to i64
  %150 = add nuw nsw i64 %142, %149
  br label %151

151:                                              ; preds = %146, %147, %148, %135
  %152 = phi i64 [ %150, %148 ], [ %142, %147 ], [ %137, %135 ], [ %142, %146 ]
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %16) #30
  %153 = and i32 %64, 16384
  %154 = icmp ne i32 %153, 0
  call void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %16, i64 %5, i1 noundef zeroext %154)
  %155 = getelementptr inbounds nuw i8, ptr %16, i64 24
  %156 = load i8, ptr %155, align 8
  %157 = and i8 %156, 1
  %158 = icmp eq i8 %157, 0
  %159 = getelementptr inbounds nuw i8, ptr %16, i64 32
  %160 = load i64, ptr %159, align 8
  %161 = lshr i8 %156, 1
  %162 = zext nneg i8 %161 to i64
  %163 = select i1 %158, i64 %162, i64 %160
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %203, label %165

165:                                              ; preds = %151
  %166 = load i8, ptr %16, align 8, !noalias !391
  %167 = and i8 %166, 1
  %168 = icmp eq i8 %167, 0
  %169 = getelementptr inbounds nuw i8, ptr %16, i64 1
  %170 = getelementptr inbounds nuw i8, ptr %16, i64 16
  %171 = load ptr, ptr %170, align 8, !noalias !391
  %172 = select i1 %168, ptr %169, ptr %171
  %173 = getelementptr inbounds nuw i8, ptr %16, i64 8
  %174 = load i64, ptr %173, align 8
  %175 = lshr i8 %166, 1
  %176 = zext nneg i8 %175 to i64
  %177 = select i1 %168, i64 %176, i64 %174
  %178 = getelementptr inbounds nuw i8, ptr %172, i64 %177
  %179 = getelementptr inbounds i8, ptr %178, i64 -1
  br label %180

180:                                              ; preds = %199, %165
  %181 = phi i32 [ 0, %165 ], [ %200, %199 ]
  %182 = phi ptr [ %172, %165 ], [ %195, %199 ]
  %183 = phi i32 [ 0, %165 ], [ %197, %199 ]
  %184 = icmp eq ptr %182, %178
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = load i8, ptr %179, align 1, !tbaa !10
  br label %193

187:                                              ; preds = %180
  %188 = load i8, ptr %182, align 1, !tbaa !10
  %189 = add i8 %188, -127
  %190 = icmp ult i8 %189, -126
  br i1 %190, label %201, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds nuw i8, ptr %182, i64 1
  br label %193

193:                                              ; preds = %191, %185
  %194 = phi i8 [ %188, %191 ], [ %186, %185 ]
  %195 = phi ptr [ %192, %191 ], [ %182, %185 ]
  %196 = sext i8 %194 to i32
  %197 = add nsw i32 %183, %196
  %198 = icmp sgt i32 %62, %197
  br i1 %198, label %199, label %201

199:                                              ; preds = %193
  %200 = add nuw nsw i32 %181, 1
  br label %180

201:                                              ; preds = %193, %187
  %202 = zext nneg i32 %181 to i64
  br label %203

203:                                              ; preds = %201, %151
  %204 = phi i64 [ 0, %151 ], [ %202, %201 ]
  %205 = add nuw nsw i64 %152, %204
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %17) #30
  store ptr %8, ptr %17, align 8, !tbaa !36
  %206 = getelementptr inbounds nuw i8, ptr %17, i64 8
  store ptr %9, ptr %206, align 8, !tbaa !394
  %207 = getelementptr inbounds nuw i8, ptr %17, i64 16
  store ptr %10, ptr %207, align 8, !tbaa !119
  %208 = getelementptr inbounds nuw i8, ptr %17, i64 24
  store ptr %1, ptr %208, align 8, !tbaa !396
  %209 = getelementptr inbounds nuw i8, ptr %17, i64 32
  store ptr %16, ptr %209, align 8, !tbaa !121
  %210 = getelementptr inbounds nuw i8, ptr %17, i64 40
  store ptr %2, ptr %210, align 8, !tbaa !91
  %211 = getelementptr inbounds nuw i8, ptr %17, i64 48
  store ptr %12, ptr %211, align 8, !tbaa !19
  %212 = getelementptr inbounds nuw i8, ptr %17, i64 56
  store ptr %15, ptr %212, align 8, !tbaa !119
  %213 = getelementptr inbounds nuw i8, ptr %17, i64 64
  store ptr %11, ptr %213, align 8, !tbaa !19
  %214 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %205, i64 noundef %205, ptr noundef nonnull align 8 dereferenceable(72) %17)
          to label %215 unwind label %230

215:                                              ; preds = %203
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %17) #30
  %216 = load i8, ptr %155, align 8
  %217 = and i8 %216, 1
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %222, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds nuw i8, ptr %16, i64 40
  %221 = load ptr, ptr %220, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %221) #34
  br label %222

222:                                              ; preds = %219, %215
  %223 = load i8, ptr %16, align 8
  %224 = and i8 %223, 1
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds nuw i8, ptr %16, i64 16
  %228 = load ptr, ptr %227, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %228) #34
  br label %229

229:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #30
  br label %354

230:                                              ; preds = %203
  %231 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %17) #30
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %16) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %16) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #30
  br label %356

232:                                              ; preds = %133
  %233 = icmp sgt i32 %62, 0
  br i1 %233, label %234, label %321

234:                                              ; preds = %232
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #30
  %235 = and i32 %64, 8192
  %236 = icmp eq i32 %235, 0
  %237 = sub nsw i32 %66, %58
  %238 = select i1 %236, i32 0, i32 %237
  store i32 %238, ptr %18, align 4, !tbaa !11
  %239 = call noundef i32 @llvm.smax.i32(i32 %238, i32 0)
  %240 = add nuw i32 %239, 1
  %241 = zext i32 %240 to i64
  %242 = add nuw nsw i64 %241, %33
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %19) #30
  %243 = and i32 %64, 16384
  %244 = icmp ne i32 %243, 0
  call void @_ZN3fmt3v116detail14digit_groupingIcEC2INS1_10locale_refETnNSt3__19enable_ifIXsr3std7is_sameIT_S5_EE5valueEiE4typeELi0EEES8_b(ptr noundef nonnull align 8 dereferenceable(48) %19, i64 %5, i1 noundef zeroext %244)
  %245 = getelementptr inbounds nuw i8, ptr %19, i64 24
  %246 = load i8, ptr %245, align 8
  %247 = and i8 %246, 1
  %248 = icmp eq i8 %247, 0
  %249 = getelementptr inbounds nuw i8, ptr %19, i64 32
  %250 = load i64, ptr %249, align 8
  %251 = lshr i8 %246, 1
  %252 = zext nneg i8 %251 to i64
  %253 = select i1 %248, i64 %252, i64 %250
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %293, label %255

255:                                              ; preds = %234
  %256 = load i8, ptr %19, align 8, !noalias !398
  %257 = and i8 %256, 1
  %258 = icmp eq i8 %257, 0
  %259 = getelementptr inbounds nuw i8, ptr %19, i64 1
  %260 = getelementptr inbounds nuw i8, ptr %19, i64 16
  %261 = load ptr, ptr %260, align 8, !noalias !398
  %262 = select i1 %258, ptr %259, ptr %261
  %263 = getelementptr inbounds nuw i8, ptr %19, i64 8
  %264 = load i64, ptr %263, align 8
  %265 = lshr i8 %256, 1
  %266 = zext nneg i8 %265 to i64
  %267 = select i1 %258, i64 %266, i64 %264
  %268 = getelementptr inbounds nuw i8, ptr %262, i64 %267
  %269 = getelementptr inbounds i8, ptr %268, i64 -1
  br label %270

270:                                              ; preds = %289, %255
  %271 = phi i32 [ 0, %255 ], [ %290, %289 ]
  %272 = phi ptr [ %262, %255 ], [ %285, %289 ]
  %273 = phi i32 [ 0, %255 ], [ %287, %289 ]
  %274 = icmp eq ptr %272, %268
  br i1 %274, label %275, label %277

275:                                              ; preds = %270
  %276 = load i8, ptr %269, align 1, !tbaa !10
  br label %283

277:                                              ; preds = %270
  %278 = load i8, ptr %272, align 1, !tbaa !10
  %279 = add i8 %278, -127
  %280 = icmp ult i8 %279, -126
  br i1 %280, label %291, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds nuw i8, ptr %272, i64 1
  br label %283

283:                                              ; preds = %281, %275
  %284 = phi i8 [ %278, %281 ], [ %276, %275 ]
  %285 = phi ptr [ %282, %281 ], [ %272, %275 ]
  %286 = sext i8 %284 to i32
  %287 = add nsw i32 %273, %286
  %288 = icmp sgt i32 %62, %287
  br i1 %288, label %289, label %291

289:                                              ; preds = %283
  %290 = add nuw nsw i32 %271, 1
  br label %270

291:                                              ; preds = %283, %277
  %292 = zext nneg i32 %271 to i64
  br label %293

293:                                              ; preds = %291, %234
  %294 = phi i64 [ 0, %234 ], [ %292, %291 ]
  %295 = add nuw nsw i64 %242, %294
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %20) #30
  store ptr %8, ptr %20, align 8, !tbaa !36
  %296 = getelementptr inbounds nuw i8, ptr %20, i64 8
  store ptr %9, ptr %296, align 8, !tbaa !394
  %297 = getelementptr inbounds nuw i8, ptr %20, i64 16
  store ptr %10, ptr %297, align 8, !tbaa !119
  %298 = getelementptr inbounds nuw i8, ptr %20, i64 24
  store ptr %14, ptr %298, align 8, !tbaa !119
  %299 = getelementptr inbounds nuw i8, ptr %20, i64 32
  store ptr %12, ptr %299, align 8, !tbaa !19
  %300 = getelementptr inbounds nuw i8, ptr %20, i64 40
  store ptr %19, ptr %300, align 8, !tbaa !121
  %301 = getelementptr inbounds nuw i8, ptr %20, i64 48
  store ptr %18, ptr %301, align 8, !tbaa !119
  %302 = getelementptr inbounds nuw i8, ptr %20, i64 56
  store ptr %11, ptr %302, align 8, !tbaa !19
  %303 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %295, i64 noundef %295, ptr noundef nonnull align 8 dereferenceable(64) %20)
          to label %304 unwind label %319

304:                                              ; preds = %293
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #30
  %305 = load i8, ptr %245, align 8
  %306 = and i8 %305, 1
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds nuw i8, ptr %19, i64 40
  %310 = load ptr, ptr %309, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %310) #34
  br label %311

311:                                              ; preds = %308, %304
  %312 = load i8, ptr %19, align 8
  %313 = and i8 %312, 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %318, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds nuw i8, ptr %19, i64 16
  %317 = load ptr, ptr %316, align 8, !tbaa !10
  call void @_ZdlPv(ptr noundef %317) #34
  br label %318

318:                                              ; preds = %311, %315
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #30
  br label %354

319:                                              ; preds = %293
  %320 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #30
  call void @_ZN3fmt3v116detail14digit_groupingIcED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %19) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %19) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #30
  br label %356

321:                                              ; preds = %232
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #30
  %322 = sub nsw i32 0, %62
  store i32 %322, ptr %21, align 4, !tbaa !11
  %323 = icmp eq i32 %58, 0
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #30
  br label %339

325:                                              ; preds = %321
  %326 = icmp sgt i32 %66, -1
  %327 = icmp slt i32 %66, %322
  %328 = select i1 %326, i1 %327, i1 false
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  store i32 %66, ptr %21, align 4, !tbaa !11
  br label %330

330:                                              ; preds = %329, %325
  %331 = phi i32 [ %66, %329 ], [ %322, %325 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %22) #30
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %339

333:                                              ; preds = %330
  %334 = and i32 %64, 8192
  %335 = icmp eq i32 %334, 0
  %336 = lshr exact i32 %334, 13
  %337 = trunc nuw nsw i32 %336 to i8
  store i8 %337, ptr %22, align 1, !tbaa !222
  %338 = select i1 %335, i32 1, i32 2
  br label %341

339:                                              ; preds = %330, %324
  %340 = phi i32 [ %322, %324 ], [ %331, %330 ]
  store i8 1, ptr %22, align 1, !tbaa !222
  br label %341

341:                                              ; preds = %339, %333
  %342 = phi i32 [ 2, %339 ], [ %338, %333 ]
  %343 = phi i32 [ %340, %339 ], [ 0, %333 ]
  %344 = add nuw i32 %343, %342
  %345 = zext i32 %344 to i64
  %346 = add nuw nsw i64 %345, %33
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %23) #30
  store ptr %8, ptr %23, align 8, !tbaa !36
  %347 = getelementptr inbounds nuw i8, ptr %23, i64 8
  store ptr %22, ptr %347, align 8, !tbaa !223
  %348 = getelementptr inbounds nuw i8, ptr %23, i64 16
  store ptr %12, ptr %348, align 8, !tbaa !19
  %349 = getelementptr inbounds nuw i8, ptr %23, i64 24
  store ptr %21, ptr %349, align 8, !tbaa !119
  %350 = getelementptr inbounds nuw i8, ptr %23, i64 32
  store ptr %11, ptr %350, align 8, !tbaa !19
  %351 = getelementptr inbounds nuw i8, ptr %23, i64 40
  store ptr %9, ptr %351, align 8, !tbaa !394
  %352 = getelementptr inbounds nuw i8, ptr %23, i64 48
  store ptr %10, ptr %352, align 8, !tbaa !119
  %353 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %346, i64 noundef %346, ptr noundef nonnull align 8 dereferenceable(56) %23)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %23) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %22) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #30
  br label %354

354:                                              ; preds = %341, %318, %229
  %355 = phi i64 [ %214, %229 ], [ %303, %318 ], [ %353, %341 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #30
  br label %358

356:                                              ; preds = %319, %230
  %357 = phi { ptr, i32 } [ %231, %230 ], [ %320, %319 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #30
  br label %49

358:                                              ; preds = %354, %131
  %359 = phi i64 [ %132, %131 ], [ %355, %354 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #30
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #30
  ret i64 %359
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(36) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load i32, ptr %0, align 8, !tbaa !382
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = shl nsw i32 %4, 3
  %8 = lshr i32 539700480, %7
  %9 = trunc i32 %8 to i8
  %10 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %11 = load i64, ptr %10, align 8, !tbaa !37
  %12 = add i64 %11, 1
  %13 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %14 = load i64, ptr %13, align 8, !tbaa !18
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %6
  %17 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  tail call void %18(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %12)
  %19 = load i64, ptr %10, align 8, !tbaa !37
  %20 = add i64 %19, 1
  br label %21

21:                                               ; preds = %6, %16
  %22 = phi i64 [ %12, %6 ], [ %20, %16 ]
  %23 = phi i64 [ %11, %6 ], [ %19, %16 ]
  %24 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %22, ptr %10, align 8, !tbaa !37
  %25 = getelementptr inbounds nuw i8, ptr %24, i64 %23
  store i8 %9, ptr %25, align 1, !tbaa !10
  br label %26

26:                                               ; preds = %21, %2
  %27 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %28 = load ptr, ptr %27, align 8, !tbaa !384
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %30 = load i32, ptr %29, align 8, !tbaa !385
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 20
  %32 = load i8, ptr %31, align 4, !tbaa !386
  %33 = getelementptr inbounds nuw i8, ptr %28, i64 1
  %34 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %28, ptr noundef nonnull %33, i64 %1)
  %35 = inttoptr i64 %34 to ptr
  %36 = icmp eq i8 %32, 0
  br i1 %36, label %58, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds nuw i8, ptr %35, i64 8
  %39 = load i64, ptr %38, align 8, !tbaa !37
  %40 = add i64 %39, 1
  %41 = getelementptr inbounds nuw i8, ptr %35, i64 16
  %42 = load i64, ptr %41, align 8, !tbaa !18
  %43 = icmp ugt i64 %40, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %37
  %45 = getelementptr inbounds nuw i8, ptr %35, i64 24
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  tail call void %46(ptr noundef nonnull align 8 dereferenceable(32) %35, i64 noundef %40)
  %47 = load i64, ptr %38, align 8, !tbaa !37
  %48 = add i64 %47, 1
  br label %49

49:                                               ; preds = %44, %37
  %50 = phi i64 [ %40, %37 ], [ %48, %44 ]
  %51 = phi i64 [ %39, %37 ], [ %47, %44 ]
  %52 = load ptr, ptr %35, align 8, !tbaa !17
  store i64 %50, ptr %38, align 8, !tbaa !37
  %53 = getelementptr inbounds nuw i8, ptr %52, i64 %51
  store i8 %32, ptr %53, align 1, !tbaa !10
  %54 = sext i32 %30 to i64
  %55 = getelementptr inbounds i8, ptr %28, i64 %54
  %56 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef nonnull %33, ptr noundef %55, i64 %34)
  %57 = inttoptr i64 %56 to ptr
  br label %58

58:                                               ; preds = %26, %49
  %59 = phi ptr [ %35, %26 ], [ %57, %49 ]
  %60 = phi i64 [ %34, %26 ], [ %56, %49 ]
  %61 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %62 = load i32, ptr %61, align 8, !tbaa !387
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %87

64:                                               ; preds = %58
  %65 = getelementptr inbounds nuw i8, ptr %0, i64 28
  %66 = getelementptr inbounds nuw i8, ptr %59, i64 8
  %67 = getelementptr inbounds nuw i8, ptr %59, i64 16
  %68 = getelementptr inbounds nuw i8, ptr %59, i64 24
  br label %69

69:                                               ; preds = %80, %64
  %70 = phi i32 [ 0, %64 ], [ %85, %80 ]
  %71 = load i8, ptr %65, align 4, !tbaa !10
  %72 = load i64, ptr %66, align 8, !tbaa !37
  %73 = add i64 %72, 1
  %74 = load i64, ptr %67, align 8, !tbaa !18
  %75 = icmp ugt i64 %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  %77 = load ptr, ptr %68, align 8, !tbaa !13
  tail call void %77(ptr noundef nonnull align 8 dereferenceable(32) %59, i64 noundef %73)
  %78 = load i64, ptr %66, align 8, !tbaa !37
  %79 = add i64 %78, 1
  br label %80

80:                                               ; preds = %76, %69
  %81 = phi i64 [ %73, %69 ], [ %79, %76 ]
  %82 = phi i64 [ %72, %69 ], [ %78, %76 ]
  %83 = load ptr, ptr %59, align 8, !tbaa !17
  store i64 %81, ptr %66, align 8, !tbaa !37
  %84 = getelementptr inbounds nuw i8, ptr %83, i64 %82
  store i8 %71, ptr %84, align 1, !tbaa !10
  %85 = add nuw nsw i32 %70, 1
  %86 = icmp eq i32 %85, %62
  br i1 %86, label %87, label %69, !llvm.loop !225

87:                                               ; preds = %80, %58
  %88 = getelementptr inbounds nuw i8, ptr %0, i64 29
  %89 = load i8, ptr %88, align 1, !tbaa !389
  %90 = getelementptr inbounds nuw i8, ptr %59, i64 8
  %91 = load i64, ptr %90, align 8, !tbaa !37
  %92 = add i64 %91, 1
  %93 = getelementptr inbounds nuw i8, ptr %59, i64 16
  %94 = load i64, ptr %93, align 8, !tbaa !18
  %95 = icmp ugt i64 %92, %94
  br i1 %95, label %96, label %101

96:                                               ; preds = %87
  %97 = getelementptr inbounds nuw i8, ptr %59, i64 24
  %98 = load ptr, ptr %97, align 8, !tbaa !13
  tail call void %98(ptr noundef nonnull align 8 dereferenceable(32) %59, i64 noundef %92)
  %99 = load i64, ptr %90, align 8, !tbaa !37
  %100 = add i64 %99, 1
  br label %101

101:                                              ; preds = %87, %96
  %102 = phi i64 [ %92, %87 ], [ %100, %96 ]
  %103 = phi i64 [ %91, %87 ], [ %99, %96 ]
  %104 = load ptr, ptr %59, align 8, !tbaa !17
  store i64 %102, ptr %90, align 8, !tbaa !37
  %105 = getelementptr inbounds nuw i8, ptr %104, i64 %103
  store i8 %89, ptr %105, align 1, !tbaa !10
  %106 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %107 = load i32, ptr %106, align 8, !tbaa !390
  %108 = tail call i64 @_ZN3fmt3v116detail14write_exponentIcNS0_14basic_appenderIcEEEET0_iS5_(i32 noundef %107, i64 %60)
  ret i64 %108
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(36) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(36) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %0, ptr noundef %1, i64 %2) local_unnamed_addr #17 comdat {
  %4 = inttoptr i64 %2 to ptr
  %5 = icmp eq ptr %0, %1
  br i1 %5, label %115, label %6

6:                                                ; preds = %3
  %7 = ptrtoint ptr %1 to i64
  %8 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %9 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %4, i64 24
  br label %11

11:                                               ; preds = %91, %6
  %12 = phi ptr [ %0, %6 ], [ %94, %91 ]
  %13 = ptrtoint ptr %12 to i64
  %14 = sub i64 %7, %13
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

17:                                               ; preds = %11
  %18 = load i64, ptr %8, align 8, !tbaa !37
  %19 = add i64 %18, %14
  %20 = load i64, ptr %9, align 8, !tbaa !18
  %21 = icmp ugt i64 %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void %23(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %19)
  %24 = load i64, ptr %9, align 8, !tbaa !18
  %25 = load i64, ptr %8, align 8, !tbaa !37
  br label %26

26:                                               ; preds = %22, %17
  %27 = phi i64 [ %18, %17 ], [ %25, %22 ]
  %28 = phi i64 [ %20, %17 ], [ %24, %22 ]
  %29 = sub i64 %28, %27
  %30 = tail call i64 @llvm.umin.i64(i64 %29, i64 %14)
  %31 = load ptr, ptr %4, align 8, !tbaa !17
  %32 = ptrtoint ptr %31 to i64
  %33 = getelementptr inbounds nuw i8, ptr %31, i64 %27
  %34 = icmp eq i64 %30, 0
  br i1 %34, label %91, label %35

35:                                               ; preds = %26
  %36 = icmp ult i64 %30, 4
  br i1 %36, label %37, label %54

37:                                               ; preds = %74, %87, %54, %35
  %38 = phi i64 [ %61, %74 ], [ 0, %35 ], [ 0, %54 ], [ %79, %87 ]
  %39 = and i64 %30, 3
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %37, %41
  %42 = phi i64 [ %47, %41 ], [ %38, %37 ]
  %43 = phi i64 [ %48, %41 ], [ 0, %37 ]
  %44 = getelementptr inbounds nuw i8, ptr %12, i64 %42
  %45 = load i8, ptr %44, align 1, !tbaa !10
  %46 = getelementptr inbounds nuw i8, ptr %33, i64 %42
  store i8 %45, ptr %46, align 1, !tbaa !10
  %47 = add nuw i64 %42, 1
  %48 = add i64 %43, 1
  %49 = icmp eq i64 %48, %39
  br i1 %49, label %50, label %41, !llvm.loop !401

50:                                               ; preds = %41, %37
  %51 = phi i64 [ %38, %37 ], [ %47, %41 ]
  %52 = sub nsw i64 %38, %30
  %53 = icmp ugt i64 %52, -4
  br i1 %53, label %89, label %96

54:                                               ; preds = %35
  %55 = add i64 %27, %32
  %56 = sub i64 %55, %13
  %57 = icmp ult i64 %56, 32
  br i1 %57, label %37, label %58

58:                                               ; preds = %54
  %59 = icmp ult i64 %30, 32
  br i1 %59, label %77, label %60

60:                                               ; preds = %58
  %61 = and i64 %30, 9223372036854775776
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %70, %62 ]
  %64 = getelementptr inbounds nuw i8, ptr %12, i64 %63
  %65 = getelementptr inbounds nuw i8, ptr %64, i64 16
  %66 = load <16 x i8>, ptr %64, align 1, !tbaa !10
  %67 = load <16 x i8>, ptr %65, align 1, !tbaa !10
  %68 = getelementptr inbounds nuw i8, ptr %33, i64 %63
  %69 = getelementptr inbounds nuw i8, ptr %68, i64 16
  store <16 x i8> %66, ptr %68, align 1, !tbaa !10
  store <16 x i8> %67, ptr %69, align 1, !tbaa !10
  %70 = add nuw i64 %63, 32
  %71 = icmp eq i64 %70, %61
  br i1 %71, label %72, label %62, !llvm.loop !402

72:                                               ; preds = %62
  %73 = icmp eq i64 %30, %61
  br i1 %73, label %89, label %74

74:                                               ; preds = %72
  %75 = and i64 %30, 28
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %37, label %77

77:                                               ; preds = %74, %58
  %78 = phi i64 [ %61, %74 ], [ 0, %58 ]
  %79 = and i64 %30, 9223372036854775804
  br label %80

80:                                               ; preds = %80, %77
  %81 = phi i64 [ %78, %77 ], [ %85, %80 ]
  %82 = getelementptr inbounds nuw i8, ptr %12, i64 %81
  %83 = load <4 x i8>, ptr %82, align 1, !tbaa !10
  %84 = getelementptr inbounds nuw i8, ptr %33, i64 %81
  store <4 x i8> %83, ptr %84, align 1, !tbaa !10
  %85 = add nuw i64 %81, 4
  %86 = icmp eq i64 %85, %79
  br i1 %86, label %87, label %80, !llvm.loop !403

87:                                               ; preds = %80
  %88 = icmp eq i64 %30, %79
  br i1 %88, label %89, label %37

89:                                               ; preds = %50, %96, %87, %72
  %90 = load i64, ptr %8, align 8, !tbaa !37
  br label %91

91:                                               ; preds = %89, %26
  %92 = phi i64 [ %90, %89 ], [ %27, %26 ]
  %93 = add i64 %92, %30
  store i64 %93, ptr %8, align 8, !tbaa !37
  %94 = getelementptr inbounds nuw i8, ptr %12, i64 %30
  %95 = icmp eq ptr %94, %1
  br i1 %95, label %115, label %11, !llvm.loop !77

96:                                               ; preds = %50, %96
  %97 = phi i64 [ %113, %96 ], [ %51, %50 ]
  %98 = getelementptr inbounds nuw i8, ptr %12, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !10
  %100 = getelementptr inbounds nuw i8, ptr %33, i64 %97
  store i8 %99, ptr %100, align 1, !tbaa !10
  %101 = add nuw i64 %97, 1
  %102 = getelementptr inbounds nuw i8, ptr %12, i64 %101
  %103 = load i8, ptr %102, align 1, !tbaa !10
  %104 = getelementptr inbounds nuw i8, ptr %33, i64 %101
  store i8 %103, ptr %104, align 1, !tbaa !10
  %105 = add nuw i64 %97, 2
  %106 = getelementptr inbounds nuw i8, ptr %12, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !10
  %108 = getelementptr inbounds nuw i8, ptr %33, i64 %105
  store i8 %107, ptr %108, align 1, !tbaa !10
  %109 = add nuw i64 %97, 3
  %110 = getelementptr inbounds nuw i8, ptr %12, i64 %109
  %111 = load i8, ptr %110, align 1, !tbaa !10
  %112 = getelementptr inbounds nuw i8, ptr %33, i64 %109
  store i8 %111, ptr %112, align 1, !tbaa !10
  %113 = add nuw i64 %97, 4
  %114 = icmp eq i64 %113, %30
  br i1 %114, label %89, label %96, !llvm.loop !404

115:                                              ; preds = %91, %3
  ret i64 %2
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E0_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(72) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_(ptr noundef nonnull align 8 dereferenceable(72) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E0_clES4_(ptr noundef nonnull align 8 dereferenceable(72) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load ptr, ptr %0, align 8, !tbaa !405
  %5 = load i32, ptr %4, align 4, !tbaa !201
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %29 = load ptr, ptr %28, align 8, !tbaa !407
  %30 = load ptr, ptr %29, align 8, !tbaa !19
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %32 = load ptr, ptr %31, align 8, !tbaa !408
  %33 = load i32, ptr %32, align 4, !tbaa !11
  %34 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %35 = load ptr, ptr %34, align 8, !tbaa !409
  %36 = getelementptr inbounds nuw i8, ptr %35, i64 12
  %37 = load i32, ptr %36, align 4, !tbaa !320
  %38 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %39 = load ptr, ptr %38, align 8, !tbaa !410
  %40 = tail call i64 @_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEPKcNS1_14digit_groupingIcEEEET0_S9_T1_iiRKT2_(i64 %1, ptr noundef %30, i32 noundef %33, i32 noundef %37, ptr noundef nonnull align 8 dereferenceable(48) %39)
  %41 = inttoptr i64 %40 to ptr
  %42 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %43 = load ptr, ptr %42, align 8, !tbaa !411
  %44 = load i32, ptr %43, align 4, !tbaa !53
  %45 = and i32 %44, 8192
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %93, label %47

47:                                               ; preds = %27
  %48 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %49 = load ptr, ptr %48, align 8, !tbaa !412
  %50 = load i8, ptr %49, align 1, !tbaa !10
  %51 = getelementptr inbounds nuw i8, ptr %41, i64 8
  %52 = load i64, ptr %51, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = getelementptr inbounds nuw i8, ptr %41, i64 16
  %55 = load i64, ptr %54, align 8, !tbaa !18
  %56 = icmp ugt i64 %53, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds nuw i8, ptr %41, i64 24
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %53)
  %60 = load i64, ptr %51, align 8, !tbaa !37
  %61 = add i64 %60, 1
  br label %62

62:                                               ; preds = %47, %57
  %63 = phi i64 [ %53, %47 ], [ %61, %57 ]
  %64 = phi i64 [ %52, %47 ], [ %60, %57 ]
  %65 = load ptr, ptr %41, align 8, !tbaa !17
  store i64 %63, ptr %51, align 8, !tbaa !37
  %66 = getelementptr inbounds nuw i8, ptr %65, i64 %64
  store i8 %50, ptr %66, align 1, !tbaa !10
  %67 = getelementptr inbounds nuw i8, ptr %0, i64 56
  %68 = load ptr, ptr %67, align 8, !tbaa !413
  %69 = load i32, ptr %68, align 4, !tbaa !11
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %93

71:                                               ; preds = %62
  %72 = getelementptr inbounds nuw i8, ptr %0, i64 64
  %73 = load ptr, ptr %72, align 8, !tbaa !414
  %74 = getelementptr inbounds nuw i8, ptr %41, i64 24
  br label %75

75:                                               ; preds = %86, %71
  %76 = phi i32 [ 0, %71 ], [ %91, %86 ]
  %77 = load i8, ptr %73, align 1, !tbaa !10
  %78 = load i64, ptr %51, align 8, !tbaa !37
  %79 = add i64 %78, 1
  %80 = load i64, ptr %54, align 8, !tbaa !18
  %81 = icmp ugt i64 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  %83 = load ptr, ptr %74, align 8, !tbaa !13
  tail call void %83(ptr noundef nonnull align 8 dereferenceable(32) %41, i64 noundef %79)
  %84 = load i64, ptr %51, align 8, !tbaa !37
  %85 = add i64 %84, 1
  br label %86

86:                                               ; preds = %82, %75
  %87 = phi i64 [ %79, %75 ], [ %85, %82 ]
  %88 = phi i64 [ %78, %75 ], [ %84, %82 ]
  %89 = load ptr, ptr %41, align 8, !tbaa !17
  store i64 %87, ptr %51, align 8, !tbaa !37
  %90 = getelementptr inbounds nuw i8, ptr %89, i64 %88
  store i8 %77, ptr %90, align 1, !tbaa !10
  %91 = add nuw nsw i32 %76, 1
  %92 = icmp eq i32 %91, %69
  br i1 %92, label %93, label %75, !llvm.loop !225

93:                                               ; preds = %86, %62, %27
  ret i64 %40
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail17write_significandIcNS0_14basic_appenderIcEEPKcNS1_14digit_groupingIcEEEET0_S9_T1_iiRKT2_(i64 %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull align 8 dereferenceable(48) %4) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %7 = alloca %"class.fmt::v11::basic_string_view", align 8
  %8 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %9 = load i8, ptr %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %13 = load i64, ptr %12, align 8
  %14 = lshr i8 %9, 1
  %15 = zext nneg i8 %14 to i64
  %16 = select i1 %11, i64 %15, i64 %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %155

18:                                               ; preds = %5
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds i8, ptr %1, i64 %19
  %21 = inttoptr i64 %0 to ptr
  %22 = icmp eq i32 %2, 0
  br i1 %22, label %132, label %23

23:                                               ; preds = %18
  %24 = ptrtoint ptr %20 to i64
  %25 = getelementptr inbounds nuw i8, ptr %21, i64 8
  %26 = getelementptr inbounds nuw i8, ptr %21, i64 16
  %27 = getelementptr inbounds nuw i8, ptr %21, i64 24
  br label %28

28:                                               ; preds = %108, %23
  %29 = phi ptr [ %1, %23 ], [ %111, %108 ]
  %30 = ptrtoint ptr %29 to i64
  %31 = sub i64 %24, %30
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

34:                                               ; preds = %28
  %35 = load i64, ptr %25, align 8, !tbaa !37
  %36 = add i64 %35, %31
  %37 = load i64, ptr %26, align 8, !tbaa !18
  %38 = icmp ugt i64 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = load ptr, ptr %27, align 8, !tbaa !13
  tail call void %40(ptr noundef nonnull align 8 dereferenceable(32) %21, i64 noundef %36)
  %41 = load i64, ptr %26, align 8, !tbaa !18
  %42 = load i64, ptr %25, align 8, !tbaa !37
  br label %43

43:                                               ; preds = %39, %34
  %44 = phi i64 [ %35, %34 ], [ %42, %39 ]
  %45 = phi i64 [ %37, %34 ], [ %41, %39 ]
  %46 = sub i64 %45, %44
  %47 = tail call i64 @llvm.umin.i64(i64 %46, i64 %31)
  %48 = load ptr, ptr %21, align 8, !tbaa !17
  %49 = ptrtoint ptr %48 to i64
  %50 = getelementptr inbounds nuw i8, ptr %48, i64 %44
  %51 = icmp eq i64 %47, 0
  br i1 %51, label %108, label %52

52:                                               ; preds = %43
  %53 = icmp ult i64 %47, 4
  br i1 %53, label %54, label %71

54:                                               ; preds = %91, %104, %71, %52
  %55 = phi i64 [ %78, %91 ], [ 0, %52 ], [ 0, %71 ], [ %96, %104 ]
  %56 = and i64 %47, 3
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %67, label %58

58:                                               ; preds = %54, %58
  %59 = phi i64 [ %64, %58 ], [ %55, %54 ]
  %60 = phi i64 [ %65, %58 ], [ 0, %54 ]
  %61 = getelementptr inbounds nuw i8, ptr %29, i64 %59
  %62 = load i8, ptr %61, align 1, !tbaa !10
  %63 = getelementptr inbounds nuw i8, ptr %50, i64 %59
  store i8 %62, ptr %63, align 1, !tbaa !10
  %64 = add nuw i64 %59, 1
  %65 = add i64 %60, 1
  %66 = icmp eq i64 %65, %56
  br i1 %66, label %67, label %58, !llvm.loop !415

67:                                               ; preds = %58, %54
  %68 = phi i64 [ %55, %54 ], [ %64, %58 ]
  %69 = sub nsw i64 %55, %47
  %70 = icmp ugt i64 %69, -4
  br i1 %70, label %106, label %113

71:                                               ; preds = %52
  %72 = add i64 %44, %49
  %73 = sub i64 %72, %30
  %74 = icmp ult i64 %73, 32
  br i1 %74, label %54, label %75

75:                                               ; preds = %71
  %76 = icmp ult i64 %47, 32
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = and i64 %47, 9223372036854775776
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %87, %79 ]
  %81 = getelementptr inbounds nuw i8, ptr %29, i64 %80
  %82 = getelementptr inbounds nuw i8, ptr %81, i64 16
  %83 = load <16 x i8>, ptr %81, align 1, !tbaa !10
  %84 = load <16 x i8>, ptr %82, align 1, !tbaa !10
  %85 = getelementptr inbounds nuw i8, ptr %50, i64 %80
  %86 = getelementptr inbounds nuw i8, ptr %85, i64 16
  store <16 x i8> %83, ptr %85, align 1, !tbaa !10
  store <16 x i8> %84, ptr %86, align 1, !tbaa !10
  %87 = add nuw i64 %80, 32
  %88 = icmp eq i64 %87, %78
  br i1 %88, label %89, label %79, !llvm.loop !416

89:                                               ; preds = %79
  %90 = icmp eq i64 %47, %78
  br i1 %90, label %106, label %91

91:                                               ; preds = %89
  %92 = and i64 %47, 28
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %54, label %94

94:                                               ; preds = %91, %75
  %95 = phi i64 [ %78, %91 ], [ 0, %75 ]
  %96 = and i64 %47, 9223372036854775804
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i64 [ %95, %94 ], [ %102, %97 ]
  %99 = getelementptr inbounds nuw i8, ptr %29, i64 %98
  %100 = load <4 x i8>, ptr %99, align 1, !tbaa !10
  %101 = getelementptr inbounds nuw i8, ptr %50, i64 %98
  store <4 x i8> %100, ptr %101, align 1, !tbaa !10
  %102 = add nuw i64 %98, 4
  %103 = icmp eq i64 %102, %96
  br i1 %103, label %104, label %97, !llvm.loop !417

104:                                              ; preds = %97
  %105 = icmp eq i64 %47, %96
  br i1 %105, label %106, label %54

106:                                              ; preds = %67, %113, %104, %89
  %107 = load i64, ptr %25, align 8, !tbaa !37
  br label %108

108:                                              ; preds = %106, %43
  %109 = phi i64 [ %107, %106 ], [ %44, %43 ]
  %110 = add i64 %109, %47
  store i64 %110, ptr %25, align 8, !tbaa !37
  %111 = getelementptr inbounds nuw i8, ptr %29, i64 %47
  %112 = icmp eq ptr %111, %20
  br i1 %112, label %132, label %28, !llvm.loop !77

113:                                              ; preds = %67, %113
  %114 = phi i64 [ %130, %113 ], [ %68, %67 ]
  %115 = getelementptr inbounds nuw i8, ptr %29, i64 %114
  %116 = load i8, ptr %115, align 1, !tbaa !10
  %117 = getelementptr inbounds nuw i8, ptr %50, i64 %114
  store i8 %116, ptr %117, align 1, !tbaa !10
  %118 = add nuw i64 %114, 1
  %119 = getelementptr inbounds nuw i8, ptr %29, i64 %118
  %120 = load i8, ptr %119, align 1, !tbaa !10
  %121 = getelementptr inbounds nuw i8, ptr %50, i64 %118
  store i8 %120, ptr %121, align 1, !tbaa !10
  %122 = add nuw i64 %114, 2
  %123 = getelementptr inbounds nuw i8, ptr %29, i64 %122
  %124 = load i8, ptr %123, align 1, !tbaa !10
  %125 = getelementptr inbounds nuw i8, ptr %50, i64 %122
  store i8 %124, ptr %125, align 1, !tbaa !10
  %126 = add nuw i64 %114, 3
  %127 = getelementptr inbounds nuw i8, ptr %29, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !10
  %129 = getelementptr inbounds nuw i8, ptr %50, i64 %126
  store i8 %128, ptr %129, align 1, !tbaa !10
  %130 = add nuw i64 %114, 4
  %131 = icmp eq i64 %130, %47
  br i1 %131, label %106, label %113, !llvm.loop !418

132:                                              ; preds = %108, %18
  %133 = icmp sgt i32 %3, 0
  br i1 %133, label %134, label %316

134:                                              ; preds = %132
  %135 = getelementptr inbounds nuw i8, ptr %21, i64 8
  %136 = getelementptr inbounds nuw i8, ptr %21, i64 16
  %137 = getelementptr inbounds nuw i8, ptr %21, i64 24
  br label %138

138:                                              ; preds = %148, %134
  %139 = phi i32 [ 0, %134 ], [ %153, %148 ]
  %140 = load i64, ptr %135, align 8, !tbaa !37
  %141 = add i64 %140, 1
  %142 = load i64, ptr %136, align 8, !tbaa !18
  %143 = icmp ugt i64 %141, %142
  br i1 %143, label %144, label %148

144:                                              ; preds = %138
  %145 = load ptr, ptr %137, align 8, !tbaa !13
  tail call void %145(ptr noundef nonnull align 8 dereferenceable(32) %21, i64 noundef %141)
  %146 = load i64, ptr %135, align 8, !tbaa !37
  %147 = add i64 %146, 1
  br label %148

148:                                              ; preds = %144, %138
  %149 = phi i64 [ %141, %138 ], [ %147, %144 ]
  %150 = phi i64 [ %140, %138 ], [ %146, %144 ]
  %151 = load ptr, ptr %21, align 8, !tbaa !17
  store i64 %149, ptr %135, align 8, !tbaa !37
  %152 = getelementptr inbounds nuw i8, ptr %151, i64 %150
  store i8 48, ptr %152, align 1, !tbaa !10
  %153 = add nuw nsw i32 %139, 1
  %154 = icmp eq i32 %153, %3
  br i1 %154, label %316, label %138, !llvm.loop !225

155:                                              ; preds = %5
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %6) #30
  %156 = getelementptr inbounds nuw i8, ptr %6, i64 16
  %157 = getelementptr inbounds nuw i8, ptr %6, i64 24
  %158 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 0, ptr %158, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %157, align 8, !tbaa !13
  %159 = getelementptr inbounds nuw i8, ptr %6, i64 32
  store ptr %159, ptr %6, align 8, !tbaa !17
  store i64 500, ptr %156, align 8, !tbaa !18
  %160 = sext i32 %2 to i64
  %161 = getelementptr inbounds i8, ptr %1, i64 %160
  %162 = icmp eq i32 %2, 0
  br i1 %162, label %271, label %163

163:                                              ; preds = %155
  %164 = ptrtoint ptr %161 to i64
  br label %165

165:                                              ; preds = %247, %163
  %166 = phi i64 [ 0, %163 ], [ %249, %247 ]
  %167 = phi ptr [ %1, %163 ], [ %250, %247 ]
  %168 = ptrtoint ptr %167 to i64
  %169 = sub i64 %164, %168
  %170 = icmp sgt i64 %169, -1
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %172 unwind label %306

172:                                              ; preds = %171
  unreachable

173:                                              ; preds = %165
  %174 = add i64 %166, %169
  %175 = load i64, ptr %156, align 8, !tbaa !18
  %176 = icmp ugt i64 %174, %175
  br i1 %176, label %177, label %182

177:                                              ; preds = %173
  %178 = load ptr, ptr %157, align 8, !tbaa !13
  invoke void %178(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %174)
          to label %179 unwind label %304

179:                                              ; preds = %177
  %180 = load i64, ptr %156, align 8, !tbaa !18
  %181 = load i64, ptr %158, align 8, !tbaa !37
  br label %182

182:                                              ; preds = %179, %173
  %183 = phi i64 [ %166, %173 ], [ %181, %179 ]
  %184 = phi i64 [ %175, %173 ], [ %180, %179 ]
  %185 = sub i64 %184, %183
  %186 = call i64 @llvm.umin.i64(i64 %185, i64 %169)
  %187 = load ptr, ptr %6, align 8, !tbaa !17
  %188 = ptrtoint ptr %187 to i64
  %189 = getelementptr inbounds nuw i8, ptr %187, i64 %183
  %190 = icmp eq i64 %186, 0
  br i1 %190, label %247, label %191

191:                                              ; preds = %182
  %192 = icmp ult i64 %186, 4
  br i1 %192, label %193, label %210

193:                                              ; preds = %230, %243, %210, %191
  %194 = phi i64 [ %217, %230 ], [ 0, %191 ], [ 0, %210 ], [ %235, %243 ]
  %195 = and i64 %186, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %206, label %197

197:                                              ; preds = %193, %197
  %198 = phi i64 [ %203, %197 ], [ %194, %193 ]
  %199 = phi i64 [ %204, %197 ], [ 0, %193 ]
  %200 = getelementptr inbounds nuw i8, ptr %167, i64 %198
  %201 = load i8, ptr %200, align 1, !tbaa !10
  %202 = getelementptr inbounds nuw i8, ptr %189, i64 %198
  store i8 %201, ptr %202, align 1, !tbaa !10
  %203 = add nuw i64 %198, 1
  %204 = add i64 %199, 1
  %205 = icmp eq i64 %204, %195
  br i1 %205, label %206, label %197, !llvm.loop !419

206:                                              ; preds = %197, %193
  %207 = phi i64 [ %194, %193 ], [ %203, %197 ]
  %208 = sub nsw i64 %194, %186
  %209 = icmp ugt i64 %208, -4
  br i1 %209, label %245, label %252

210:                                              ; preds = %191
  %211 = add i64 %183, %188
  %212 = sub i64 %211, %168
  %213 = icmp ult i64 %212, 32
  br i1 %213, label %193, label %214

214:                                              ; preds = %210
  %215 = icmp ult i64 %186, 32
  br i1 %215, label %233, label %216

216:                                              ; preds = %214
  %217 = and i64 %186, 9223372036854775776
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %226, %218 ]
  %220 = getelementptr inbounds nuw i8, ptr %167, i64 %219
  %221 = getelementptr inbounds nuw i8, ptr %220, i64 16
  %222 = load <16 x i8>, ptr %220, align 1, !tbaa !10
  %223 = load <16 x i8>, ptr %221, align 1, !tbaa !10
  %224 = getelementptr inbounds nuw i8, ptr %189, i64 %219
  %225 = getelementptr inbounds nuw i8, ptr %224, i64 16
  store <16 x i8> %222, ptr %224, align 1, !tbaa !10
  store <16 x i8> %223, ptr %225, align 1, !tbaa !10
  %226 = add nuw i64 %219, 32
  %227 = icmp eq i64 %226, %217
  br i1 %227, label %228, label %218, !llvm.loop !420

228:                                              ; preds = %218
  %229 = icmp eq i64 %186, %217
  br i1 %229, label %245, label %230

230:                                              ; preds = %228
  %231 = and i64 %186, 28
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %193, label %233

233:                                              ; preds = %230, %214
  %234 = phi i64 [ %217, %230 ], [ 0, %214 ]
  %235 = and i64 %186, 9223372036854775804
  br label %236

236:                                              ; preds = %236, %233
  %237 = phi i64 [ %234, %233 ], [ %241, %236 ]
  %238 = getelementptr inbounds nuw i8, ptr %167, i64 %237
  %239 = load <4 x i8>, ptr %238, align 1, !tbaa !10
  %240 = getelementptr inbounds nuw i8, ptr %189, i64 %237
  store <4 x i8> %239, ptr %240, align 1, !tbaa !10
  %241 = add nuw i64 %237, 4
  %242 = icmp eq i64 %241, %235
  br i1 %242, label %243, label %236, !llvm.loop !421

243:                                              ; preds = %236
  %244 = icmp eq i64 %186, %235
  br i1 %244, label %245, label %193

245:                                              ; preds = %206, %252, %243, %228
  %246 = load i64, ptr %158, align 8, !tbaa !37
  br label %247

247:                                              ; preds = %245, %182
  %248 = phi i64 [ %246, %245 ], [ %183, %182 ]
  %249 = add i64 %248, %186
  store i64 %249, ptr %158, align 8, !tbaa !37
  %250 = getelementptr inbounds nuw i8, ptr %167, i64 %186
  %251 = icmp eq ptr %250, %161
  br i1 %251, label %271, label %165, !llvm.loop !77

252:                                              ; preds = %206, %252
  %253 = phi i64 [ %269, %252 ], [ %207, %206 ]
  %254 = getelementptr inbounds nuw i8, ptr %167, i64 %253
  %255 = load i8, ptr %254, align 1, !tbaa !10
  %256 = getelementptr inbounds nuw i8, ptr %189, i64 %253
  store i8 %255, ptr %256, align 1, !tbaa !10
  %257 = add nuw i64 %253, 1
  %258 = getelementptr inbounds nuw i8, ptr %167, i64 %257
  %259 = load i8, ptr %258, align 1, !tbaa !10
  %260 = getelementptr inbounds nuw i8, ptr %189, i64 %257
  store i8 %259, ptr %260, align 1, !tbaa !10
  %261 = add nuw i64 %253, 2
  %262 = getelementptr inbounds nuw i8, ptr %167, i64 %261
  %263 = load i8, ptr %262, align 1, !tbaa !10
  %264 = getelementptr inbounds nuw i8, ptr %189, i64 %261
  store i8 %263, ptr %264, align 1, !tbaa !10
  %265 = add nuw i64 %253, 3
  %266 = getelementptr inbounds nuw i8, ptr %167, i64 %265
  %267 = load i8, ptr %266, align 1, !tbaa !10
  %268 = getelementptr inbounds nuw i8, ptr %189, i64 %265
  store i8 %267, ptr %268, align 1, !tbaa !10
  %269 = add nuw i64 %253, 4
  %270 = icmp eq i64 %269, %186
  br i1 %270, label %245, label %252, !llvm.loop !422

271:                                              ; preds = %247, %155
  %272 = phi i64 [ 0, %155 ], [ %249, %247 ]
  %273 = icmp sgt i32 %3, 0
  br i1 %273, label %274, label %294

274:                                              ; preds = %271, %285
  %275 = phi i32 [ %290, %285 ], [ 0, %271 ]
  %276 = load i64, ptr %158, align 8, !tbaa !37
  %277 = add i64 %276, 1
  %278 = load i64, ptr %156, align 8, !tbaa !18
  %279 = icmp ugt i64 %277, %278
  br i1 %279, label %280, label %285

280:                                              ; preds = %274
  %281 = load ptr, ptr %157, align 8, !tbaa !13
  invoke void %281(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %277)
          to label %282 unwind label %308

282:                                              ; preds = %280
  %283 = load i64, ptr %158, align 8, !tbaa !37
  %284 = add i64 %283, 1
  br label %285

285:                                              ; preds = %282, %274
  %286 = phi i64 [ %277, %274 ], [ %284, %282 ]
  %287 = phi i64 [ %276, %274 ], [ %283, %282 ]
  %288 = load ptr, ptr %6, align 8, !tbaa !17
  store i64 %286, ptr %158, align 8, !tbaa !37
  %289 = getelementptr inbounds nuw i8, ptr %288, i64 %287
  store i8 48, ptr %289, align 1, !tbaa !10
  %290 = add nuw nsw i32 %275, 1
  %291 = icmp eq i32 %290, %3
  br i1 %291, label %292, label %274, !llvm.loop !225

292:                                              ; preds = %285
  %293 = load i64, ptr %158, align 8, !tbaa !37
  br label %294

294:                                              ; preds = %292, %271
  %295 = phi i64 [ %293, %292 ], [ %272, %271 ]
  %296 = load ptr, ptr %6, align 8, !tbaa !17
  store ptr %296, ptr %7, align 8, !tbaa !38
  %297 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 %295, ptr %297, align 8, !tbaa !39
  %298 = invoke i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %4, i64 %0, ptr noundef nonnull %7)
          to label %299 unwind label %306

299:                                              ; preds = %294
  %300 = load ptr, ptr %6, align 8, !tbaa !17
  %301 = icmp eq ptr %300, %159
  br i1 %301, label %303, label %302

302:                                              ; preds = %299
  call void @free(ptr noundef %300)
  br label %303

303:                                              ; preds = %299, %302
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %6) #30
  br label %316

304:                                              ; preds = %177
  %305 = landingpad { ptr, i32 }
          cleanup
  br label %310

306:                                              ; preds = %294, %171
  %307 = landingpad { ptr, i32 }
          cleanup
  br label %310

308:                                              ; preds = %280
  %309 = landingpad { ptr, i32 }
          cleanup
  br label %310

310:                                              ; preds = %304, %306, %308
  %311 = phi { ptr, i32 } [ %309, %308 ], [ %305, %304 ], [ %307, %306 ]
  %312 = load ptr, ptr %6, align 8, !tbaa !17
  %313 = icmp eq ptr %312, %159
  br i1 %313, label %315, label %314

314:                                              ; preds = %310
  call void @free(ptr noundef %312)
  br label %315

315:                                              ; preds = %310, %314
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %6) #30
  resume { ptr, i32 } %311

316:                                              ; preds = %148, %132, %303
  %317 = phi i64 [ %298, %303 ], [ %0, %132 ], [ %0, %148 ]
  ret i64 %317
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E1_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(64) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  %42 = inttoptr i64 %41 to ptr
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi ptr [ %42, %40 ], [ %27, %38 ]
  %45 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %46 = load ptr, ptr %4, align 8, !tbaa !423
  %47 = load i32, ptr %46, align 4, !tbaa !201
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %69, label %49

49:                                               ; preds = %43
  %50 = shl nsw i32 %47, 3
  %51 = lshr i32 539700480, %50
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds nuw i8, ptr %44, i64 8
  %54 = load i64, ptr %53, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = getelementptr inbounds nuw i8, ptr %44, i64 16
  %57 = load i64, ptr %56, align 8, !tbaa !18
  %58 = icmp ugt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds nuw i8, ptr %44, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %44, i64 noundef %55)
  %62 = load i64, ptr %53, align 8, !tbaa !37
  %63 = add i64 %62, 1
  br label %64

64:                                               ; preds = %59, %49
  %65 = phi i64 [ %55, %49 ], [ %63, %59 ]
  %66 = phi i64 [ %54, %49 ], [ %62, %59 ]
  %67 = load ptr, ptr %44, align 8, !tbaa !17
  store i64 %65, ptr %53, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %66
  store i8 %52, ptr %68, align 1, !tbaa !10
  br label %69

69:                                               ; preds = %64, %43
  %70 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %71 = load ptr, ptr %70, align 8, !tbaa !425
  %72 = load ptr, ptr %71, align 8, !tbaa !19
  %73 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %74 = load ptr, ptr %73, align 8, !tbaa !426
  %75 = load i32, ptr %74, align 4, !tbaa !11
  %76 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %77 = load ptr, ptr %76, align 8, !tbaa !427
  %78 = load i32, ptr %77, align 4, !tbaa !11
  %79 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %80 = load ptr, ptr %79, align 8, !tbaa !428
  %81 = load i8, ptr %80, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %4, i64 40
  %83 = load ptr, ptr %82, align 8, !tbaa !429
  %84 = tail call i64 @_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcPKcNS1_14digit_groupingIcEEEET_S9_T1_iiT0_RKT2_(i64 %45, ptr noundef %72, i32 noundef %75, i32 noundef %78, i8 noundef %81, ptr noundef nonnull align 8 dereferenceable(48) %83)
  %85 = getelementptr inbounds nuw i8, ptr %4, i64 48
  %86 = load ptr, ptr %85, align 8, !tbaa !430
  %87 = load i32, ptr %86, align 4, !tbaa !11
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %114

89:                                               ; preds = %69
  %90 = getelementptr inbounds nuw i8, ptr %4, i64 56
  %91 = load ptr, ptr %90, align 8, !tbaa !431
  %92 = inttoptr i64 %84 to ptr
  %93 = getelementptr inbounds nuw i8, ptr %92, i64 8
  %94 = getelementptr inbounds nuw i8, ptr %92, i64 16
  %95 = getelementptr inbounds nuw i8, ptr %92, i64 24
  br label %96

96:                                               ; preds = %107, %89
  %97 = phi i32 [ 0, %89 ], [ %112, %107 ]
  %98 = load i8, ptr %91, align 1, !tbaa !10
  %99 = load i64, ptr %93, align 8, !tbaa !37
  %100 = add i64 %99, 1
  %101 = load i64, ptr %94, align 8, !tbaa !18
  %102 = icmp ugt i64 %100, %101
  br i1 %102, label %103, label %107

103:                                              ; preds = %96
  %104 = load ptr, ptr %95, align 8, !tbaa !13
  tail call void %104(ptr noundef nonnull align 8 dereferenceable(32) %92, i64 noundef %100)
  %105 = load i64, ptr %93, align 8, !tbaa !37
  %106 = add i64 %105, 1
  br label %107

107:                                              ; preds = %103, %96
  %108 = phi i64 [ %100, %96 ], [ %106, %103 ]
  %109 = phi i64 [ %99, %96 ], [ %105, %103 ]
  %110 = load ptr, ptr %92, align 8, !tbaa !17
  store i64 %108, ptr %93, align 8, !tbaa !37
  %111 = getelementptr inbounds nuw i8, ptr %110, i64 %109
  store i8 %98, ptr %111, align 1, !tbaa !10
  %112 = add nuw nsw i32 %97, 1
  %113 = icmp eq i32 %112, %87
  br i1 %113, label %114, label %96, !llvm.loop !225

114:                                              ; preds = %107, %69
  %115 = icmp eq i64 %12, %21
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %84, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ %117, %116 ], [ %84, %114 ]
  ret i64 %119
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail17write_significandINS0_14basic_appenderIcEEcPKcNS1_14digit_groupingIcEEEET_S9_T1_iiT0_RKT2_(i64 %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i8 noundef %4, ptr noundef nonnull align 8 dereferenceable(48) %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %8 = alloca %"class.fmt::v11::basic_string_view", align 8
  %9 = getelementptr inbounds nuw i8, ptr %5, i64 24
  %10 = load i8, ptr %9, align 8
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds nuw i8, ptr %5, i64 32
  %14 = load i64, ptr %13, align 8
  %15 = lshr i8 %10, 1
  %16 = zext nneg i8 %15 to i64
  %17 = select i1 %12, i64 %16, i64 %14
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %45

19:                                               ; preds = %6
  %20 = sext i32 %3 to i64
  %21 = getelementptr inbounds i8, ptr %1, i64 %20
  %22 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %1, ptr noundef %21, i64 %0)
  %23 = inttoptr i64 %22 to ptr
  %24 = icmp eq i8 %4, 0
  br i1 %24, label %104, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds nuw i8, ptr %23, i64 8
  %27 = load i64, ptr %26, align 8, !tbaa !37
  %28 = add i64 %27, 1
  %29 = getelementptr inbounds nuw i8, ptr %23, i64 16
  %30 = load i64, ptr %29, align 8, !tbaa !18
  %31 = icmp ugt i64 %28, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %25
  %33 = getelementptr inbounds nuw i8, ptr %23, i64 24
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  tail call void %34(ptr noundef nonnull align 8 dereferenceable(32) %23, i64 noundef %28)
  %35 = load i64, ptr %26, align 8, !tbaa !37
  %36 = add i64 %35, 1
  br label %37

37:                                               ; preds = %32, %25
  %38 = phi i64 [ %28, %25 ], [ %36, %32 ]
  %39 = phi i64 [ %27, %25 ], [ %35, %32 ]
  %40 = load ptr, ptr %23, align 8, !tbaa !17
  store i64 %38, ptr %26, align 8, !tbaa !37
  %41 = getelementptr inbounds nuw i8, ptr %40, i64 %39
  store i8 %4, ptr %41, align 1, !tbaa !10
  %42 = sext i32 %2 to i64
  %43 = getelementptr inbounds i8, ptr %1, i64 %42
  %44 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %21, ptr noundef %43, i64 %22)
  br label %104

45:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %7) #30
  %46 = getelementptr inbounds nuw i8, ptr %7, i64 16
  %47 = getelementptr inbounds nuw i8, ptr %7, i64 24
  %48 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 0, ptr %48, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %47, align 8, !tbaa !13
  %49 = getelementptr inbounds nuw i8, ptr %7, i64 32
  store ptr %49, ptr %7, align 8, !tbaa !17
  store i64 500, ptr %46, align 8, !tbaa !18
  %50 = ptrtoint ptr %7 to i64
  %51 = sext i32 %3 to i64
  %52 = getelementptr inbounds i8, ptr %1, i64 %51
  %53 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %1, ptr noundef %52, i64 %50)
          to label %54 unwind label %98

54:                                               ; preds = %45
  %55 = inttoptr i64 %53 to ptr
  %56 = icmp eq i8 %4, 0
  br i1 %56, label %78, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds nuw i8, ptr %55, i64 8
  %59 = load i64, ptr %58, align 8, !tbaa !37
  %60 = add i64 %59, 1
  %61 = getelementptr inbounds nuw i8, ptr %55, i64 16
  %62 = load i64, ptr %61, align 8, !tbaa !18
  %63 = icmp ugt i64 %60, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %57
  %65 = getelementptr inbounds nuw i8, ptr %55, i64 24
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(32) %55, i64 noundef %60)
          to label %67 unwind label %98

67:                                               ; preds = %64
  %68 = load i64, ptr %58, align 8, !tbaa !37
  %69 = add i64 %68, 1
  br label %70

70:                                               ; preds = %67, %57
  %71 = phi i64 [ %60, %57 ], [ %69, %67 ]
  %72 = phi i64 [ %59, %57 ], [ %68, %67 ]
  %73 = load ptr, ptr %55, align 8, !tbaa !17
  store i64 %71, ptr %58, align 8, !tbaa !37
  %74 = getelementptr inbounds nuw i8, ptr %73, i64 %72
  store i8 %4, ptr %74, align 1, !tbaa !10
  %75 = sext i32 %2 to i64
  %76 = getelementptr inbounds i8, ptr %1, i64 %75
  %77 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef %52, ptr noundef %76, i64 %53)
          to label %78 unwind label %98

78:                                               ; preds = %54, %70
  %79 = icmp sgt i32 %3, -1
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %81 unwind label %98

81:                                               ; preds = %80
  unreachable

82:                                               ; preds = %78
  %83 = load ptr, ptr %7, align 8, !tbaa !17
  %84 = zext nneg i32 %3 to i64
  store ptr %83, ptr %8, align 8, !tbaa !38
  %85 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 %84, ptr %85, align 8, !tbaa !39
  %86 = invoke i64 @_ZNK3fmt3v116detail14digit_groupingIcE5applyINS0_14basic_appenderIcEEcEET_S7_NS0_17basic_string_viewIT0_EE(ptr noundef nonnull align 8 dereferenceable(48) %5, i64 %0, ptr noundef nonnull %8)
          to label %87 unwind label %98

87:                                               ; preds = %82
  %88 = load ptr, ptr %7, align 8, !tbaa !17
  %89 = getelementptr inbounds nuw i8, ptr %88, i64 %51
  %90 = load i64, ptr %48, align 8, !tbaa !37
  %91 = getelementptr inbounds nuw i8, ptr %88, i64 %90
  %92 = invoke i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef %89, ptr noundef %91, i64 %0)
          to label %93 unwind label %98

93:                                               ; preds = %87
  %94 = load ptr, ptr %7, align 8, !tbaa !17
  %95 = icmp eq ptr %94, %49
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @free(ptr noundef %94)
  br label %97

97:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %7) #30
  br label %104

98:                                               ; preds = %80, %70, %64, %45, %87, %82
  %99 = landingpad { ptr, i32 }
          cleanup
  %100 = load ptr, ptr %7, align 8, !tbaa !17
  %101 = icmp eq ptr %100, %49
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  call void @free(ptr noundef %100)
  br label %103

103:                                              ; preds = %98, %102
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %7) #30
  resume { ptr, i32 } %99

104:                                              ; preds = %37, %19, %97
  %105 = phi i64 [ %92, %97 ], [ %44, %37 ], [ %22, %19 ]
  ret i64 %105
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_14do_write_floatIcS5_NS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS5_E2_EESB_SB_SG_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(56) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_(ptr noundef nonnull align 8 dereferenceable(56) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEENKUlS4_E2_clES4_(ptr noundef nonnull align 8 dereferenceable(56) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load ptr, ptr %0, align 8, !tbaa !432
  %5 = load i32, ptr %4, align 4, !tbaa !201
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = shl nsw i32 %5, 3
  %9 = lshr i32 539700480, %8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa !37
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %15 = load i64, ptr %14, align 8, !tbaa !18
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %13)
  %20 = load i64, ptr %11, align 8, !tbaa !37
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %7, %17
  %23 = phi i64 [ %13, %7 ], [ %21, %17 ]
  %24 = phi i64 [ %12, %7 ], [ %20, %17 ]
  %25 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %23, ptr %11, align 8, !tbaa !37
  %26 = getelementptr inbounds nuw i8, ptr %25, i64 %24
  store i8 %10, ptr %26, align 1, !tbaa !10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, 1
  %31 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %32 = load i64, ptr %31, align 8, !tbaa !18
  %33 = icmp ugt i64 %30, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %27
  %35 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %36 = load ptr, ptr %35, align 8, !tbaa !13
  tail call void %36(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %30)
  %37 = load i64, ptr %28, align 8, !tbaa !37
  %38 = add i64 %37, 1
  br label %39

39:                                               ; preds = %27, %34
  %40 = phi i64 [ %30, %27 ], [ %38, %34 ]
  %41 = phi i64 [ %29, %27 ], [ %37, %34 ]
  %42 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %40, ptr %28, align 8, !tbaa !37
  %43 = getelementptr inbounds nuw i8, ptr %42, i64 %41
  store i8 48, ptr %43, align 1, !tbaa !10
  %44 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %45 = load ptr, ptr %44, align 8, !tbaa !434
  %46 = load i8, ptr %45, align 1, !tbaa !222, !range !51, !noundef !52
  %47 = trunc nuw i8 %46 to i1
  br i1 %47, label %48, label %209

48:                                               ; preds = %39
  %49 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %50 = load ptr, ptr %49, align 8, !tbaa !435
  %51 = load i8, ptr %50, align 1, !tbaa !10
  %52 = load i64, ptr %28, align 8, !tbaa !37
  %53 = add i64 %52, 1
  %54 = load i64, ptr %31, align 8, !tbaa !18
  %55 = icmp ugt i64 %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %48
  %57 = getelementptr inbounds nuw i8, ptr %3, i64 24
  %58 = load ptr, ptr %57, align 8, !tbaa !13
  tail call void %58(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %53)
  %59 = load i64, ptr %28, align 8, !tbaa !37
  %60 = add i64 %59, 1
  br label %61

61:                                               ; preds = %48, %56
  %62 = phi i64 [ %53, %48 ], [ %60, %56 ]
  %63 = phi i64 [ %52, %48 ], [ %59, %56 ]
  %64 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %62, ptr %28, align 8, !tbaa !37
  %65 = getelementptr inbounds nuw i8, ptr %64, i64 %63
  store i8 %51, ptr %65, align 1, !tbaa !10
  %66 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %67 = load ptr, ptr %66, align 8, !tbaa !436
  %68 = load i32, ptr %67, align 4, !tbaa !11
  %69 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %70 = load ptr, ptr %69, align 8, !tbaa !437
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %72, label %92

72:                                               ; preds = %61
  %73 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %74

74:                                               ; preds = %85, %72
  %75 = phi i32 [ 0, %72 ], [ %90, %85 ]
  %76 = load i8, ptr %70, align 1, !tbaa !10
  %77 = load i64, ptr %28, align 8, !tbaa !37
  %78 = add i64 %77, 1
  %79 = load i64, ptr %31, align 8, !tbaa !18
  %80 = icmp ugt i64 %78, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = load ptr, ptr %73, align 8, !tbaa !13
  tail call void %82(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %78)
  %83 = load i64, ptr %28, align 8, !tbaa !37
  %84 = add i64 %83, 1
  br label %85

85:                                               ; preds = %81, %74
  %86 = phi i64 [ %78, %74 ], [ %84, %81 ]
  %87 = phi i64 [ %77, %74 ], [ %83, %81 ]
  %88 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %86, ptr %28, align 8, !tbaa !37
  %89 = getelementptr inbounds nuw i8, ptr %88, i64 %87
  store i8 %76, ptr %89, align 1, !tbaa !10
  %90 = add nuw nsw i32 %75, 1
  %91 = icmp eq i32 %90, %68
  br i1 %91, label %92, label %74, !llvm.loop !225

92:                                               ; preds = %85, %61
  %93 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %94 = load ptr, ptr %93, align 8, !tbaa !438
  %95 = load ptr, ptr %94, align 8, !tbaa !19
  %96 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %97 = load ptr, ptr %96, align 8, !tbaa !439
  %98 = load i32, ptr %97, align 4, !tbaa !11
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, ptr %95, i64 %99
  %101 = icmp eq i32 %98, 0
  br i1 %101, label %209, label %102

102:                                              ; preds = %92
  %103 = ptrtoint ptr %100 to i64
  %104 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %105

105:                                              ; preds = %185, %102
  %106 = phi ptr [ %95, %102 ], [ %188, %185 ]
  %107 = ptrtoint ptr %106 to i64
  %108 = sub i64 %103, %107
  %109 = icmp sgt i64 %108, -1
  br i1 %109, label %111, label %110

110:                                              ; preds = %105
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

111:                                              ; preds = %105
  %112 = load i64, ptr %28, align 8, !tbaa !37
  %113 = add i64 %112, %108
  %114 = load i64, ptr %31, align 8, !tbaa !18
  %115 = icmp ugt i64 %113, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %111
  %117 = load ptr, ptr %104, align 8, !tbaa !13
  tail call void %117(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %113)
  %118 = load i64, ptr %31, align 8, !tbaa !18
  %119 = load i64, ptr %28, align 8, !tbaa !37
  br label %120

120:                                              ; preds = %116, %111
  %121 = phi i64 [ %112, %111 ], [ %119, %116 ]
  %122 = phi i64 [ %114, %111 ], [ %118, %116 ]
  %123 = sub i64 %122, %121
  %124 = tail call i64 @llvm.umin.i64(i64 %123, i64 %108)
  %125 = load ptr, ptr %3, align 8, !tbaa !17
  %126 = ptrtoint ptr %125 to i64
  %127 = getelementptr inbounds nuw i8, ptr %125, i64 %121
  %128 = icmp eq i64 %124, 0
  br i1 %128, label %185, label %129

129:                                              ; preds = %120
  %130 = icmp ult i64 %124, 4
  br i1 %130, label %131, label %148

131:                                              ; preds = %168, %181, %148, %129
  %132 = phi i64 [ %155, %168 ], [ 0, %129 ], [ 0, %148 ], [ %173, %181 ]
  %133 = and i64 %124, 3
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %144, label %135

135:                                              ; preds = %131, %135
  %136 = phi i64 [ %141, %135 ], [ %132, %131 ]
  %137 = phi i64 [ %142, %135 ], [ 0, %131 ]
  %138 = getelementptr inbounds nuw i8, ptr %106, i64 %136
  %139 = load i8, ptr %138, align 1, !tbaa !10
  %140 = getelementptr inbounds nuw i8, ptr %127, i64 %136
  store i8 %139, ptr %140, align 1, !tbaa !10
  %141 = add nuw i64 %136, 1
  %142 = add i64 %137, 1
  %143 = icmp eq i64 %142, %133
  br i1 %143, label %144, label %135, !llvm.loop !440

144:                                              ; preds = %135, %131
  %145 = phi i64 [ %132, %131 ], [ %141, %135 ]
  %146 = sub nsw i64 %132, %124
  %147 = icmp ugt i64 %146, -4
  br i1 %147, label %183, label %190

148:                                              ; preds = %129
  %149 = add i64 %121, %126
  %150 = sub i64 %149, %107
  %151 = icmp ult i64 %150, 32
  br i1 %151, label %131, label %152

152:                                              ; preds = %148
  %153 = icmp ult i64 %124, 32
  br i1 %153, label %171, label %154

154:                                              ; preds = %152
  %155 = and i64 %124, 9223372036854775776
  br label %156

156:                                              ; preds = %156, %154
  %157 = phi i64 [ 0, %154 ], [ %164, %156 ]
  %158 = getelementptr inbounds nuw i8, ptr %106, i64 %157
  %159 = getelementptr inbounds nuw i8, ptr %158, i64 16
  %160 = load <16 x i8>, ptr %158, align 1, !tbaa !10
  %161 = load <16 x i8>, ptr %159, align 1, !tbaa !10
  %162 = getelementptr inbounds nuw i8, ptr %127, i64 %157
  %163 = getelementptr inbounds nuw i8, ptr %162, i64 16
  store <16 x i8> %160, ptr %162, align 1, !tbaa !10
  store <16 x i8> %161, ptr %163, align 1, !tbaa !10
  %164 = add nuw i64 %157, 32
  %165 = icmp eq i64 %164, %155
  br i1 %165, label %166, label %156, !llvm.loop !441

166:                                              ; preds = %156
  %167 = icmp eq i64 %124, %155
  br i1 %167, label %183, label %168

168:                                              ; preds = %166
  %169 = and i64 %124, 28
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %131, label %171

171:                                              ; preds = %168, %152
  %172 = phi i64 [ %155, %168 ], [ 0, %152 ]
  %173 = and i64 %124, 9223372036854775804
  br label %174

174:                                              ; preds = %174, %171
  %175 = phi i64 [ %172, %171 ], [ %179, %174 ]
  %176 = getelementptr inbounds nuw i8, ptr %106, i64 %175
  %177 = load <4 x i8>, ptr %176, align 1, !tbaa !10
  %178 = getelementptr inbounds nuw i8, ptr %127, i64 %175
  store <4 x i8> %177, ptr %178, align 1, !tbaa !10
  %179 = add nuw i64 %175, 4
  %180 = icmp eq i64 %179, %173
  br i1 %180, label %181, label %174, !llvm.loop !442

181:                                              ; preds = %174
  %182 = icmp eq i64 %124, %173
  br i1 %182, label %183, label %131

183:                                              ; preds = %144, %190, %181, %166
  %184 = load i64, ptr %28, align 8, !tbaa !37
  br label %185

185:                                              ; preds = %183, %120
  %186 = phi i64 [ %184, %183 ], [ %121, %120 ]
  %187 = add i64 %186, %124
  store i64 %187, ptr %28, align 8, !tbaa !37
  %188 = getelementptr inbounds nuw i8, ptr %106, i64 %124
  %189 = icmp eq ptr %188, %100
  br i1 %189, label %209, label %105, !llvm.loop !77

190:                                              ; preds = %144, %190
  %191 = phi i64 [ %207, %190 ], [ %145, %144 ]
  %192 = getelementptr inbounds nuw i8, ptr %106, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !10
  %194 = getelementptr inbounds nuw i8, ptr %127, i64 %191
  store i8 %193, ptr %194, align 1, !tbaa !10
  %195 = add nuw i64 %191, 1
  %196 = getelementptr inbounds nuw i8, ptr %106, i64 %195
  %197 = load i8, ptr %196, align 1, !tbaa !10
  %198 = getelementptr inbounds nuw i8, ptr %127, i64 %195
  store i8 %197, ptr %198, align 1, !tbaa !10
  %199 = add nuw i64 %191, 2
  %200 = getelementptr inbounds nuw i8, ptr %106, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !10
  %202 = getelementptr inbounds nuw i8, ptr %127, i64 %199
  store i8 %201, ptr %202, align 1, !tbaa !10
  %203 = add nuw i64 %191, 3
  %204 = getelementptr inbounds nuw i8, ptr %106, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !10
  %206 = getelementptr inbounds nuw i8, ptr %127, i64 %203
  store i8 %205, ptr %206, align 1, !tbaa !10
  %207 = add nuw i64 %191, 4
  %208 = icmp eq i64 %207, %124
  br i1 %208, label %183, label %190, !llvm.loop !443

209:                                              ; preds = %185, %92, %39
  ret i64 %1
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail9write_ptrIcNS0_14basic_appenderIcEEyEET0_S5_T1_PKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(12) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca [64 x i8], align 16
  %4 = inttoptr i64 %1 to ptr
  %5 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %6 = load i64, ptr %5, align 8, !tbaa !37
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %9 = load i64, ptr %8, align 8, !tbaa !18
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %13 = load ptr, ptr %12, align 8, !tbaa !13
  tail call void %13(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %7)
  %14 = load i64, ptr %5, align 8, !tbaa !37
  %15 = add i64 %14, 1
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi i64 [ %7, %2 ], [ %15, %11 ]
  %18 = phi i64 [ %6, %2 ], [ %14, %11 ]
  %19 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %17, ptr %5, align 8, !tbaa !37
  %20 = getelementptr inbounds nuw i8, ptr %19, i64 %18
  store i8 48, ptr %20, align 1, !tbaa !10
  %21 = load i64, ptr %5, align 8, !tbaa !37
  %22 = add i64 %21, 1
  %23 = load i64, ptr %8, align 8, !tbaa !18
  %24 = icmp ugt i64 %22, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %16
  %26 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %27 = load ptr, ptr %26, align 8, !tbaa !13
  tail call void %27(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %22)
  %28 = load i64, ptr %5, align 8, !tbaa !37
  %29 = add i64 %28, 1
  br label %30

30:                                               ; preds = %16, %25
  %31 = phi i64 [ %22, %16 ], [ %29, %25 ]
  %32 = phi i64 [ %21, %16 ], [ %28, %25 ]
  %33 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %31, ptr %5, align 8, !tbaa !37
  %34 = getelementptr inbounds nuw i8, ptr %33, i64 %32
  store i8 120, ptr %34, align 1, !tbaa !10
  %35 = load i64, ptr %0, align 8, !tbaa !67
  %36 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %37 = load i32, ptr %36, align 8, !tbaa !69
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %30
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

40:                                               ; preds = %30
  %41 = zext nneg i32 %37 to i64
  %42 = load i64, ptr %5, align 8, !tbaa !37
  %43 = add i64 %42, %41
  %44 = load i64, ptr %8, align 8, !tbaa !18
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  tail call void %48(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %43)
  %49 = load i64, ptr %5, align 8, !tbaa !37
  %50 = load i64, ptr %8, align 8, !tbaa !18
  %51 = add i64 %49, %41
  br label %52

52:                                               ; preds = %46, %40
  %53 = phi i64 [ %43, %40 ], [ %51, %46 ]
  %54 = phi i64 [ %44, %40 ], [ %50, %46 ]
  %55 = phi i64 [ %42, %40 ], [ %49, %46 ]
  %56 = icmp ult i64 %54, %53
  br i1 %56, label %72, label %57

57:                                               ; preds = %52
  store i64 %53, ptr %5, align 8, !tbaa !37
  %58 = load ptr, ptr %4, align 8, !tbaa !17
  %59 = icmp eq ptr %58, null
  br i1 %59, label %72, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds nuw i8, ptr %58, i64 %55
  %62 = getelementptr inbounds nuw i8, ptr %61, i64 %41
  br label %63

63:                                               ; preds = %63, %60
  %64 = phi i64 [ %70, %63 ], [ %35, %60 ]
  %65 = phi ptr [ %69, %63 ], [ %62, %60 ]
  %66 = and i64 %64, 15
  %67 = getelementptr inbounds nuw i8, ptr @.str.24, i64 %66
  %68 = load i8, ptr %67, align 1, !tbaa !10
  %69 = getelementptr inbounds i8, ptr %65, i64 -1
  store i8 %68, ptr %69, align 1, !tbaa !10
  %70 = lshr i64 %64, 4
  %71 = icmp ult i64 %64, 16
  br i1 %71, label %85, label %63, !llvm.loop !109

72:                                               ; preds = %57, %52
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #30
  %73 = getelementptr inbounds nuw i8, ptr %3, i64 %41
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ %81, %74 ], [ %35, %72 ]
  %76 = phi ptr [ %80, %74 ], [ %73, %72 ]
  %77 = and i64 %75, 15
  %78 = getelementptr inbounds nuw i8, ptr @.str.24, i64 %77
  %79 = load i8, ptr %78, align 1, !tbaa !10
  %80 = getelementptr inbounds i8, ptr %76, i64 -1
  store i8 %79, ptr %80, align 1, !tbaa !10
  %81 = lshr i64 %75, 4
  %82 = icmp ult i64 %75, 16
  br i1 %82, label %83, label %74, !llvm.loop !109

83:                                               ; preds = %74
  %84 = call i64 @_ZN3fmt3v116detail13copy_noinlineIcPcNS0_14basic_appenderIcEEEET1_T0_S7_S6_(ptr noundef nonnull %3, ptr noundef nonnull %73, i64 %1)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #30
  br label %85

85:                                               ; preds = %63, %83
  %86 = phi i64 [ %84, %83 ], [ %1, %63 ]
  ret i64 %86
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_ptrIcS5_yEET0_S7_T1_PKNS0_12format_specsEEUlS5_E_EES8_S8_RSA_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(12) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail9write_ptrIcNS0_14basic_appenderIcEEyEET0_S5_T1_PKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(12) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S8_S8_OT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(56) %2) local_unnamed_addr #5 comdat {
  %4 = alloca %"class.fmt::v11::basic_format_arg", align 16
  %5 = alloca %"struct.fmt::v11::detail::default_arg_formatter", align 8
  %6 = alloca %"class.fmt::v11::basic_format_arg", align 16
  %7 = alloca %"struct.fmt::v11::detail::default_arg_formatter", align 8
  %8 = alloca %struct.id_adapter, align 8
  %9 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %10 = icmp eq ptr %9, %1
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.42) #31
  unreachable

12:                                               ; preds = %3
  %13 = load i8, ptr %9, align 1, !tbaa !10
  switch i8 %13, label %64 [
    i8 125, label %14
    i8 123, label %51
    i8 58, label %57
  ]

14:                                               ; preds = %12
  %15 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %16 = load i32, ptr %15, align 8, !tbaa !33
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.45) #31
  unreachable

19:                                               ; preds = %14
  %20 = add nuw nsw i32 %16, 1
  store i32 %20, ptr %15, align 8, !tbaa !33
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #30
  tail call void @llvm.experimental.noalias.scope.decl(metadata !444)
  %21 = getelementptr inbounds nuw i8, ptr %2, i64 32
  tail call void @llvm.experimental.noalias.scope.decl(metadata !447)
  %22 = getelementptr inbounds nuw i8, ptr %6, i64 16
  store i32 0, ptr %22, align 16, !tbaa !21, !alias.scope !450
  %23 = load i64, ptr %21, align 8, !tbaa !5, !noalias !450
  %24 = icmp sgt i64 %23, -1
  br i1 %24, label %33, label %25

25:                                               ; preds = %19
  %26 = trunc i64 %23 to i32
  %27 = icmp slt i32 %16, %26
  br i1 %27, label %28, label %47

28:                                               ; preds = %25
  %29 = getelementptr inbounds nuw i8, ptr %2, i64 40
  %30 = load ptr, ptr %29, align 8, !tbaa !10, !noalias !450
  %31 = zext nneg i32 %16 to i64
  %32 = getelementptr inbounds nuw %"class.fmt::v11::basic_format_arg", ptr %30, i64 %31
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %6, ptr noundef nonnull align 16 dereferenceable(20) %32, i64 20, i1 false), !tbaa.struct !28
  br label %47

33:                                               ; preds = %19
  %34 = icmp samesign ugt i32 %16, 14
  br i1 %34, label %47, label %35

35:                                               ; preds = %33
  %36 = shl nuw nsw i32 %16, 2
  %37 = zext nneg i32 %36 to i64
  %38 = lshr i64 %23, %37
  %39 = trunc i64 %38 to i32
  %40 = and i32 %39, 15
  store i32 %40, ptr %22, align 16, !tbaa !21, !alias.scope !450
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds nuw i8, ptr %2, i64 40
  %44 = load ptr, ptr %43, align 8, !tbaa !10, !noalias !450
  %45 = zext nneg i32 %16 to i64
  %46 = getelementptr inbounds nuw %"class.fmt::v11::detail::value", ptr %44, i64 %45
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %6, ptr noundef nonnull align 16 dereferenceable(16) %46, i64 16, i1 false), !tbaa.struct !30
  br label %47

47:                                               ; preds = %25, %28, %33, %35, %42
  %48 = getelementptr inbounds nuw i8, ptr %2, i64 24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #30
  %49 = load ptr, ptr %48, align 8, !tbaa !31
  store ptr %49, ptr %7, align 8
  call void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail21default_arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %6, ptr noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #30
  %50 = getelementptr inbounds nuw i8, ptr %0, i64 2
  br label %116

51:                                               ; preds = %12
  %52 = getelementptr inbounds nuw i8, ptr %0, i64 2
  %53 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %54 = load ptr, ptr %53, align 8, !tbaa !31
  %55 = ptrtoint ptr %54 to i64
  %56 = tail call i64 @_ZN3fmt3v116detail13copy_noinlineIcPKcNS0_14basic_appenderIcEEEET1_T0_S8_S7_(ptr noundef nonnull %9, ptr noundef nonnull %52, i64 %55)
  br label %116

57:                                               ; preds = %12
  %58 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %59 = load i32, ptr %58, align 8, !tbaa !33
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.45) #31
  unreachable

62:                                               ; preds = %57
  %63 = add nuw nsw i32 %59, 1
  store i32 %63, ptr %58, align 8, !tbaa !33
  br label %104

64:                                               ; preds = %12
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #30
  store ptr %2, ptr %8, align 8, !tbaa !451
  %65 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i32 0, ptr %65, align 8, !tbaa !453
  %66 = call noundef ptr @_ZN3fmt3v116detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S9_S9_OT0_E10id_adapterEES9_S9_S9_SB_(ptr noundef nonnull %9, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(12) %8)
  %67 = load i32, ptr %65, align 8, !tbaa !453
  %68 = icmp eq ptr %66, %1
  br i1 %68, label %102, label %69

69:                                               ; preds = %64
  %70 = load i8, ptr %66, align 1, !tbaa !10
  switch i8 %70, label %102 [
    i8 125, label %71
    i8 58, label %103
  ]

71:                                               ; preds = %69
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #30
  call void @llvm.experimental.noalias.scope.decl(metadata !455)
  %72 = getelementptr inbounds nuw i8, ptr %2, i64 32
  call void @llvm.experimental.noalias.scope.decl(metadata !458)
  %73 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 0, ptr %73, align 16, !tbaa !21, !alias.scope !461
  %74 = load i64, ptr %72, align 8, !tbaa !5, !noalias !461
  %75 = icmp sgt i64 %74, -1
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = trunc i64 %74 to i32
  %78 = icmp slt i32 %67, %77
  br i1 %78, label %79, label %98

79:                                               ; preds = %76
  %80 = getelementptr inbounds nuw i8, ptr %2, i64 40
  %81 = load ptr, ptr %80, align 8, !tbaa !10, !noalias !461
  %82 = sext i32 %67 to i64
  %83 = getelementptr inbounds %"class.fmt::v11::basic_format_arg", ptr %81, i64 %82
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 16 dereferenceable(20) %83, i64 20, i1 false), !tbaa.struct !28
  br label %98

84:                                               ; preds = %71
  %85 = icmp ugt i32 %67, 14
  br i1 %85, label %98, label %86

86:                                               ; preds = %84
  %87 = shl nuw nsw i32 %67, 2
  %88 = zext nneg i32 %87 to i64
  %89 = lshr i64 %74, %88
  %90 = trunc i64 %89 to i32
  %91 = and i32 %90, 15
  store i32 %91, ptr %73, align 16, !tbaa !21, !alias.scope !461
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds nuw i8, ptr %2, i64 40
  %95 = load ptr, ptr %94, align 8, !tbaa !10, !noalias !461
  %96 = zext nneg i32 %67 to i64
  %97 = getelementptr inbounds nuw %"class.fmt::v11::detail::value", ptr %95, i64 %96
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %4, ptr noundef nonnull align 16 dereferenceable(16) %97, i64 16, i1 false), !tbaa.struct !30
  br label %98

98:                                               ; preds = %93, %86, %84, %79, %76
  %99 = getelementptr inbounds nuw i8, ptr %2, i64 24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #30
  %100 = load ptr, ptr %99, align 8, !tbaa !31
  store ptr %100, ptr %5, align 8
  call void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail21default_arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30
  %101 = getelementptr inbounds nuw i8, ptr %66, i64 1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #30
  br label %116

102:                                              ; preds = %69, %64
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.43) #31
  unreachable

103:                                              ; preds = %69
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #30
  br label %104

104:                                              ; preds = %103, %62
  %105 = phi ptr [ %66, %103 ], [ %9, %62 ]
  %106 = phi i32 [ %67, %103 ], [ %59, %62 ]
  %107 = getelementptr inbounds nuw i8, ptr %105, i64 1
  %108 = call noundef ptr @_ZN3fmt3v116detail14format_handlerIcE15on_format_specsEiPKcS5_(ptr noundef nonnull align 8 dereferenceable(56) %2, i32 noundef %106, ptr noundef nonnull %107, ptr noundef %1)
  %109 = icmp eq ptr %108, %1
  br i1 %109, label %113, label %110

110:                                              ; preds = %104
  %111 = load i8, ptr %108, align 1, !tbaa !10
  %112 = icmp eq i8 %111, 125
  br i1 %112, label %114, label %113

113:                                              ; preds = %110, %104
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.44) #31
  unreachable

114:                                              ; preds = %110
  %115 = getelementptr inbounds nuw i8, ptr %108, i64 1
  br label %116

116:                                              ; preds = %98, %114, %51, %47
  %117 = phi ptr [ %115, %114 ], [ %52, %51 ], [ %50, %47 ], [ %101, %98 ]
  ret ptr %117
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail12parse_arg_idIcRZNS1_23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S9_S9_OT0_E10id_adapterEES9_S9_S9_SB_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(12) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %4 = ptrtoint ptr %0 to i64
  %5 = ptrtoint ptr %1 to i64
  %6 = load i8, ptr %0, align 1, !tbaa !10
  %7 = add i8 %6, -48
  %8 = icmp ult i8 %7, 10
  br i1 %8, label %9, label %68

9:                                                ; preds = %3
  %10 = icmp eq i8 %6, 48
  br i1 %10, label %52, label %11

11:                                               ; preds = %9
  %12 = icmp eq ptr %0, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = sub i64 %5, %4
  %15 = getelementptr i8, ptr %0, i64 %14
  br label %18

16:                                               ; preds = %11
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 1281, ptr noundef nonnull @.str.14) #31
          to label %17 unwind label %49

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %28, %13
  %19 = phi i8 [ %29, %28 ], [ %6, %13 ]
  %20 = phi ptr [ %26, %28 ], [ %0, %13 ]
  %21 = phi i32 [ %25, %28 ], [ 0, %13 ]
  %22 = mul i32 %21, 10
  %23 = zext nneg i8 %19 to i32
  %24 = add nsw i32 %23, -48
  %25 = add i32 %24, %22
  %26 = getelementptr inbounds nuw i8, ptr %20, i64 1
  %27 = icmp eq ptr %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = load i8, ptr %26, align 1, !tbaa !10
  %30 = add i8 %29, -48
  %31 = icmp ult i8 %30, 10
  br i1 %31, label %18, label %32, !llvm.loop !462

32:                                               ; preds = %28, %18
  %33 = phi ptr [ %26, %28 ], [ %15, %18 ]
  %34 = ptrtoint ptr %33 to i64
  %35 = sub i64 %34, %4
  %36 = icmp slt i64 %35, 10
  br i1 %36, label %54, label %37

37:                                               ; preds = %32
  %38 = icmp eq i64 %35, 10
  br i1 %38, label %39, label %48

39:                                               ; preds = %37
  %40 = zext i32 %21 to i64
  %41 = mul nuw nsw i64 %40, 10
  %42 = load i8, ptr %20, align 1, !tbaa !10
  %43 = sext i8 %42 to i64
  %44 = add nsw i64 %43, 4294967248
  %45 = and i64 %44, 4294967294
  %46 = add nuw nsw i64 %45, %41
  %47 = icmp samesign ult i64 %46, 2147483648
  br i1 %47, label %54, label %48

48:                                               ; preds = %39, %37
  br label %54

49:                                               ; preds = %16
  %50 = landingpad { ptr, i32 }
          catch ptr null
  %51 = extractvalue { ptr, i32 } %50, 0
  tail call void @__clang_call_terminate(ptr %51) #33
  unreachable

52:                                               ; preds = %9
  %53 = getelementptr inbounds nuw i8, ptr %0, i64 1
  br label %54

54:                                               ; preds = %48, %39, %32, %52
  %55 = phi ptr [ %53, %52 ], [ %33, %32 ], [ %33, %39 ], [ %33, %48 ]
  %56 = phi i32 [ 0, %52 ], [ %25, %32 ], [ %25, %39 ], [ 2147483647, %48 ]
  %57 = icmp eq ptr %55, %1
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = load i8, ptr %55, align 1, !tbaa !10
  switch i8 %59, label %60 [
    i8 125, label %61
    i8 58, label %61
  ]

60:                                               ; preds = %58, %54
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.42) #31
  unreachable

61:                                               ; preds = %58, %58
  %62 = load ptr, ptr %2, align 8, !tbaa !463
  %63 = getelementptr inbounds nuw i8, ptr %62, i64 16
  %64 = load i32, ptr %63, align 8, !tbaa !33
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.46) #31
  unreachable

67:                                               ; preds = %61
  store i32 -1, ptr %63, align 8, !tbaa !33
  br label %134

68:                                               ; preds = %3
  %69 = and i8 %6, -33
  %70 = add i8 %69, -65
  %71 = icmp ult i8 %70, 26
  %72 = icmp eq i8 %6, 95
  %73 = or i1 %72, %71
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = sub i64 %5, %4
  %76 = getelementptr i8, ptr %0, i64 %75
  br label %78

77:                                               ; preds = %68
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.42) #31
  unreachable

78:                                               ; preds = %74, %82
  %79 = phi ptr [ %80, %82 ], [ %0, %74 ]
  %80 = getelementptr inbounds nuw i8, ptr %79, i64 1
  %81 = icmp eq ptr %80, %1
  br i1 %81, label %92, label %82

82:                                               ; preds = %78
  %83 = load i8, ptr %80, align 1, !tbaa !10
  %84 = and i8 %83, -33
  %85 = add i8 %84, -65
  %86 = icmp ult i8 %85, 26
  %87 = icmp eq i8 %83, 95
  %88 = or i1 %87, %86
  %89 = add i8 %83, -48
  %90 = icmp ult i8 %89, 10
  %91 = or i1 %90, %88
  br i1 %91, label %78, label %92, !llvm.loop !464

92:                                               ; preds = %82, %78
  %93 = phi ptr [ %80, %82 ], [ %76, %78 ]
  %94 = ptrtoint ptr %93 to i64
  %95 = sub i64 %94, %4
  %96 = icmp sgt i64 %95, -1
  br i1 %96, label %98, label %97

97:                                               ; preds = %92
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

98:                                               ; preds = %92
  %99 = load ptr, ptr %2, align 8, !tbaa !463
  %100 = getelementptr inbounds nuw i8, ptr %99, i64 16
  store i32 -1, ptr %100, align 8, !tbaa !33
  %101 = getelementptr inbounds nuw i8, ptr %99, i64 32
  %102 = load i64, ptr %101, align 8, !tbaa !5
  %103 = and i64 %102, 4611686018427387904
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %133, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds nuw i8, ptr %99, i64 40
  %107 = load ptr, ptr %106, align 8
  %108 = icmp slt i64 %102, 0
  %109 = select i1 %108, i64 -32, i64 -16
  %110 = getelementptr inbounds i8, ptr %107, i64 %109
  %111 = getelementptr inbounds nuw i8, ptr %110, i64 8
  %112 = load i64, ptr %111, align 8, !tbaa !465
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %133, label %114

114:                                              ; preds = %105
  %115 = load ptr, ptr %110, align 8, !tbaa !468
  br label %116

116:                                              ; preds = %126, %114
  %117 = phi i64 [ 0, %114 ], [ %127, %126 ]
  %118 = getelementptr inbounds nuw %"struct.fmt::v11::detail::named_arg_info", ptr %115, i64 %117
  %119 = load ptr, ptr %118, align 8, !tbaa !469
  %120 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %119) #30
  %121 = tail call noundef i64 @llvm.umin.i64(i64 %120, i64 %95)
  %122 = tail call noundef i32 @memcmp(ptr noundef %119, ptr noundef nonnull %0, i64 noundef %121)
  %123 = icmp eq i32 %122, 0
  %124 = icmp eq i64 %120, %95
  %125 = and i1 %124, %123
  br i1 %125, label %129, label %126

126:                                              ; preds = %116
  %127 = add nuw i64 %117, 1
  %128 = icmp eq i64 %127, %112
  br i1 %128, label %133, label %116, !llvm.loop !471

129:                                              ; preds = %116
  %130 = getelementptr inbounds nuw %"struct.fmt::v11::detail::named_arg_info", ptr %115, i64 %117, i32 1
  %131 = load i32, ptr %130, align 8, !tbaa !472
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %126, %129, %105, %98
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.40) #31
  unreachable

134:                                              ; preds = %129, %67
  %135 = phi i32 [ %56, %67 ], [ %131, %129 ]
  %136 = phi ptr [ %55, %67 ], [ %93, %129 ]
  %137 = getelementptr inbounds nuw i8, ptr %2, i64 8
  store i32 %135, ptr %137, align 8, !tbaa !453
  ret ptr %136
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail14format_handlerIcE15on_format_specsEiPKcS5_(ptr noundef nonnull align 8 dereferenceable(56) %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.fmt::v11::basic_format_arg", align 16
  %6 = alloca %"struct.fmt::v11::detail::dynamic_format_specs", align 8
  %7 = alloca %"struct.fmt::v11::detail::arg_formatter", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #30
  %8 = getelementptr inbounds nuw i8, ptr %0, i64 24
  tail call void @llvm.experimental.noalias.scope.decl(metadata !473)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !476)
  %9 = getelementptr inbounds nuw i8, ptr %0, i64 32
  tail call void @llvm.experimental.noalias.scope.decl(metadata !479)
  %10 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %11 = load i64, ptr %9, align 8, !tbaa !5, !noalias !482
  %12 = icmp sgt i64 %11, -1
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = trunc i64 %11 to i32
  %15 = icmp slt i32 %1, %14
  br i1 %15, label %30, label %37

16:                                               ; preds = %4
  %17 = icmp ugt i32 %1, 14
  br i1 %17, label %37, label %18

18:                                               ; preds = %16
  %19 = shl nuw nsw i32 %1, 2
  %20 = zext nneg i32 %19 to i64
  %21 = lshr i64 %11, %20
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 15
  store i32 %23, ptr %10, align 16, !tbaa !21, !alias.scope !482
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %27 = load ptr, ptr %26, align 8, !tbaa !10, !noalias !482
  %28 = zext nneg i32 %1 to i64
  %29 = getelementptr inbounds nuw %"class.fmt::v11::detail::value", ptr %27, i64 %28
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %5, ptr noundef nonnull align 16 dereferenceable(16) %29, i64 16, i1 false), !tbaa.struct !30
  br label %38

30:                                               ; preds = %13
  %31 = getelementptr inbounds nuw i8, ptr %0, i64 40
  %32 = load ptr, ptr %31, align 8, !tbaa !10, !noalias !482
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds %"class.fmt::v11::basic_format_arg", ptr %32, i64 %33
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %5, ptr noundef nonnull align 16 dereferenceable(20) %34, i64 20, i1 false), !tbaa.struct !28
  %35 = load i32, ptr %10, align 16, !tbaa !21
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %30, %18, %16, %13
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.40) #31, !noalias !473
  unreachable

38:                                               ; preds = %25, %30
  %39 = phi i32 [ %23, %25 ], [ %35, %30 ]
  %40 = icmp eq i32 %39, 15
  br i1 %40, label %41, label %57

41:                                               ; preds = %38
  %42 = load ptr, ptr %0, align 8, !tbaa !38
  %43 = ptrtoint ptr %2 to i64
  %44 = ptrtoint ptr %42 to i64
  %45 = sub i64 %43, %44
  %46 = icmp sgt i64 %45, -1
  br i1 %46, label %48, label %47

47:                                               ; preds = %41
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

48:                                               ; preds = %41
  %49 = getelementptr inbounds nuw i8, ptr %42, i64 %45
  store ptr %49, ptr %0, align 8, !tbaa !38
  %50 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %51 = load i64, ptr %50, align 8, !tbaa !39
  %52 = sub i64 %51, %45
  store i64 %52, ptr %50, align 8, !tbaa !39
  %53 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %54 = load ptr, ptr %53, align 8, !tbaa !10
  %55 = load ptr, ptr %5, align 16, !tbaa !10
  tail call void %54(ptr noundef %55, ptr noundef nonnull align 8 dereferenceable(20) %0, ptr noundef nonnull align 8 dereferenceable(32) %8)
  %56 = load ptr, ptr %0, align 8, !tbaa !38
  br label %89

57:                                               ; preds = %38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %6) #30
  %58 = getelementptr inbounds nuw i8, ptr %6, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %58, i8 0, i64 32, i1 false)
  store i32 32768, ptr %6, align 8, !tbaa !53
  %59 = getelementptr inbounds nuw i8, ptr %6, i64 4
  store i8 32, ptr %59, align 4, !tbaa !10
  %60 = getelementptr inbounds nuw i8, ptr %6, i64 5
  %61 = getelementptr inbounds nuw i8, ptr %6, i64 12
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %60, i8 0, i64 7, i1 false)
  store i32 -1, ptr %61, align 4, !tbaa !55
  %62 = getelementptr inbounds nuw i8, ptr %6, i64 16
  %63 = getelementptr inbounds nuw i8, ptr %6, i64 32
  store i32 0, ptr %63, align 8, !tbaa !10
  %64 = call noundef ptr @_ZN3fmt3v116detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_13parse_contextIS3_EENS1_4typeE(ptr noundef %2, ptr noundef %3, ptr noundef nonnull align 8 dereferenceable(48) %6, ptr noundef nonnull align 8 dereferenceable(20) %0, i32 noundef %39)
  %65 = load i32, ptr %6, align 8, !tbaa !53
  %66 = and i32 %65, 960
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %57
  %69 = lshr i32 %65, 6
  %70 = and i32 %69, 3
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds nuw i8, ptr %6, i64 8
  %74 = call noundef i32 @_ZN3fmt3v116detail16get_dynamic_specINS0_7contextEEEiNS0_11arg_id_kindERKNS1_7arg_refINT_9char_typeEEERS6_(i32 noundef %70, ptr noundef nonnull align 8 dereferenceable(16) %62, ptr noundef nonnull align 8 dereferenceable(32) %8)
  store i32 %74, ptr %73, align 8, !tbaa !11
  %75 = load i32, ptr %6, align 8, !tbaa !53
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi i32 [ %65, %68 ], [ %75, %72 ]
  %78 = lshr i32 %77, 8
  %79 = and i32 %78, 3
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call noundef i32 @_ZN3fmt3v116detail16get_dynamic_specINS0_7contextEEEiNS0_11arg_id_kindERKNS1_7arg_refINT_9char_typeEEERS6_(i32 noundef %79, ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull align 8 dereferenceable(32) %8)
  store i32 %82, ptr %61, align 4, !tbaa !11
  br label %83

83:                                               ; preds = %81, %76, %57
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #30
  %84 = load ptr, ptr %8, align 8, !tbaa !31
  store ptr %84, ptr %7, align 8
  %85 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store ptr %6, ptr %85, align 8, !tbaa !91
  %86 = getelementptr inbounds nuw i8, ptr %7, i64 16
  %87 = getelementptr inbounds nuw i8, ptr %0, i64 48
  %88 = load ptr, ptr %87, align 8, !tbaa !36
  store ptr %88, ptr %86, align 8
  call void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail13arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %5, ptr noundef nonnull align 8 dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #30
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %6) #30
  br label %89

89:                                               ; preds = %83, %48
  %90 = phi ptr [ %56, %48 ], [ %64, %83 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #30
  ret ptr %90
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail18parse_format_specsIcEEPKT_S5_S5_RNS1_20dynamic_format_specsIS3_EERNS0_13parse_contextIS3_EENS1_4typeE(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(48) %2, ptr noundef nonnull align 8 dereferenceable(20) %3, i32 noundef %4) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.fmt::v11::detail::parse_dynamic_spec_result", align 8
  %7 = alloca %"struct.fmt::v11::detail::parse_dynamic_spec_result", align 8
  %8 = ptrtoint ptr %1 to i64
  %9 = ptrtoint ptr %0 to i64
  %10 = sub i64 %8, %9
  %11 = icmp sgt i64 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %14 = load i8, ptr %13, align 1, !tbaa !10
  switch i8 %14, label %17 [
    i8 60, label %19
    i8 62, label %19
    i8 94, label %19
  ]

15:                                               ; preds = %5
  %16 = icmp eq ptr %0, %1
  br i1 %16, label %308, label %17

17:                                               ; preds = %15, %12
  %18 = load i8, ptr %0, align 1, !tbaa !10
  br label %19

19:                                               ; preds = %17, %12, %12, %12
  %20 = phi i8 [ 0, %12 ], [ 0, %12 ], [ 0, %12 ], [ %18, %17 ]
  %21 = add i32 %4, -1
  %22 = icmp ult i32 %21, 11
  %23 = shl nuw i32 1, %4
  %24 = and i32 %23, 15872
  %25 = icmp ne i32 %24, 0
  %26 = getelementptr inbounds nuw i8, ptr %2, i64 32
  %27 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %28 = getelementptr inbounds nuw i8, ptr %6, i64 8
  %29 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %30 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %31 = getelementptr inbounds nuw i8, ptr %7, i64 8
  %32 = getelementptr inbounds nuw i8, ptr %2, i64 4
  %33 = and i32 %23, 3626
  %34 = icmp ne i32 %33, 0
  %35 = getelementptr inbounds nuw i8, ptr %2, i64 5
  %36 = getelementptr inbounds nuw i8, ptr %2, i64 6
  %37 = getelementptr inbounds nuw i8, ptr %2, i64 5
  %38 = getelementptr inbounds nuw i8, ptr %2, i64 6
  %39 = getelementptr inbounds nuw i8, ptr %2, i64 7
  br label %40

40:                                               ; preds = %303, %19
  %41 = phi ptr [ %0, %19 ], [ %300, %303 ]
  %42 = phi i32 [ 0, %19 ], [ %301, %303 ]
  %43 = phi i8 [ %20, %19 ], [ %304, %303 ]
  switch i8 %43, label %240 [
    i8 60, label %44
    i8 62, label %44
    i8 94, label %44
    i8 43, label %57
    i8 32, label %57
    i8 45, label %63
    i8 35, label %69
    i8 48, label %77
    i8 49, label %91
    i8 50, label %91
    i8 51, label %91
    i8 52, label %91
    i8 53, label %91
    i8 54, label %91
    i8 55, label %91
    i8 56, label %91
    i8 57, label %91
    i8 123, label %91
    i8 46, label %101
    i8 76, label %116
    i8 100, label %124
    i8 88, label %132
    i8 120, label %135
    i8 111, label %143
    i8 66, label %151
    i8 98, label %154
    i8 69, label %162
    i8 101, label %165
    i8 70, label %173
    i8 102, label %176
    i8 71, label %184
    i8 103, label %187
    i8 65, label %195
    i8 97, label %198
    i8 99, label %206
    i8 115, label %216
    i8 112, label %224
    i8 63, label %232
    i8 125, label %308
  ]

44:                                               ; preds = %40, %40, %40
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

47:                                               ; preds = %44
  switch i8 %43, label %50 [
    i8 60, label %51
    i8 62, label %48
    i8 94, label %49
  ]

48:                                               ; preds = %47
  br label %51

49:                                               ; preds = %47
  br label %51

50:                                               ; preds = %47
  br label %51

51:                                               ; preds = %47, %48, %49, %50
  %52 = phi i32 [ 0, %50 ], [ 24, %49 ], [ 16, %48 ], [ 8, %47 ]
  %53 = load i32, ptr %2, align 8, !tbaa !53
  %54 = and i32 %53, -57
  %55 = or disjoint i32 %54, %52
  store i32 %55, ptr %2, align 8, !tbaa !53
  %56 = getelementptr inbounds nuw i8, ptr %41, i64 1
  br label %299

57:                                               ; preds = %40, %40
  %58 = icmp eq i8 %43, 32
  %59 = select i1 %58, i32 3072, i32 2048
  %60 = load i32, ptr %2, align 8, !tbaa !53
  %61 = and i32 %60, -3073
  %62 = or disjoint i32 %61, %59
  store i32 %62, ptr %2, align 8, !tbaa !53
  br label %63

63:                                               ; preds = %40, %57
  %64 = icmp samesign ult i32 %42, 2
  %65 = and i1 %34, %64
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

67:                                               ; preds = %63
  %68 = getelementptr inbounds nuw i8, ptr %41, i64 1
  br label %299

69:                                               ; preds = %40
  %70 = icmp samesign ult i32 %42, 3
  %71 = and i1 %22, %70
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

73:                                               ; preds = %69
  %74 = load i32, ptr %2, align 8, !tbaa !53
  %75 = or i32 %74, 8192
  store i32 %75, ptr %2, align 8, !tbaa !53
  %76 = getelementptr inbounds nuw i8, ptr %41, i64 1
  br label %299

77:                                               ; preds = %40
  %78 = icmp samesign ult i32 %42, 4
  br i1 %78, label %80, label %79

79:                                               ; preds = %77
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

80:                                               ; preds = %77
  br i1 %22, label %82, label %81

81:                                               ; preds = %80
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.47) #31
  unreachable

82:                                               ; preds = %80
  %83 = load i32, ptr %2, align 8, !tbaa !53
  %84 = and i32 %83, 56
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  store i8 48, ptr %32, align 4, !tbaa !10
  %87 = and i32 %83, -229433
  %88 = or disjoint i32 %87, 32800
  store i32 %88, ptr %2, align 8, !tbaa !53
  br label %89

89:                                               ; preds = %86, %82
  %90 = getelementptr inbounds nuw i8, ptr %41, i64 1
  br label %299

91:                                               ; preds = %40, %40, %40, %40, %40, %40, %40, %40, %40, %40
  %92 = icmp samesign ult i32 %42, 5
  br i1 %92, label %94, label %93

93:                                               ; preds = %91
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #30
  call void @_ZN3fmt3v116detail18parse_dynamic_specIcEENS1_25parse_dynamic_spec_resultIT_EEPKS4_S7_RiRNS1_7arg_refIS4_EERNS0_13parse_contextIS4_EE(ptr dead_on_unwind nonnull writable sret(%"struct.fmt::v11::detail::parse_dynamic_spec_result") align 8 %7, ptr noundef nonnull %41, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %30, ptr noundef nonnull align 8 dereferenceable(16) %29, ptr noundef nonnull align 8 dereferenceable(20) %3)
  %95 = load i32, ptr %31, align 8, !tbaa !483
  %96 = load i32, ptr %2, align 8, !tbaa !53
  %97 = and i32 %96, -193
  %98 = shl i32 %95, 6
  %99 = or i32 %97, %98
  store i32 %99, ptr %2, align 8, !tbaa !53
  %100 = load ptr, ptr %7, align 8, !tbaa !486
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #30
  br label %299

101:                                              ; preds = %40
  %102 = icmp samesign ult i32 %42, 6
  %103 = and i1 %25, %102
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

105:                                              ; preds = %101
  %106 = getelementptr inbounds nuw i8, ptr %41, i64 1
  %107 = icmp eq ptr %106, %1
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.50) #31
  unreachable

109:                                              ; preds = %105
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  call void @_ZN3fmt3v116detail18parse_dynamic_specIcEENS1_25parse_dynamic_spec_resultIT_EEPKS4_S7_RiRNS1_7arg_refIS4_EERNS0_13parse_contextIS4_EE(ptr dead_on_unwind nonnull writable sret(%"struct.fmt::v11::detail::parse_dynamic_spec_result") align 8 %6, ptr noundef nonnull %106, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %27, ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(20) %3)
  %110 = load i32, ptr %28, align 8, !tbaa !483
  %111 = load i32, ptr %2, align 8, !tbaa !53
  %112 = and i32 %111, -769
  %113 = shl i32 %110, 8
  %114 = or i32 %112, %113
  store i32 %114, ptr %2, align 8, !tbaa !53
  %115 = load ptr, ptr %6, align 8, !tbaa !486
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %299

116:                                              ; preds = %40
  %117 = icmp samesign ult i32 %42, 7
  %118 = and i1 %22, %117
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

120:                                              ; preds = %116
  %121 = load i32, ptr %2, align 8, !tbaa !53
  %122 = or i32 %121, 16384
  store i32 %122, ptr %2, align 8, !tbaa !53
  %123 = getelementptr inbounds nuw i8, ptr %41, i64 1
  br label %299

124:                                              ; preds = %40
  %125 = and i32 %23, 510
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

128:                                              ; preds = %124
  %129 = load i32, ptr %2, align 8, !tbaa !53
  %130 = and i32 %129, -8
  %131 = or disjoint i32 %130, 3
  br label %305

132:                                              ; preds = %40
  %133 = load i32, ptr %2, align 8, !tbaa !53
  %134 = or i32 %133, 4096
  store i32 %134, ptr %2, align 8, !tbaa !53
  br label %135

135:                                              ; preds = %40, %132
  %136 = and i32 %23, 510
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

139:                                              ; preds = %135
  %140 = load i32, ptr %2, align 8, !tbaa !53
  %141 = and i32 %140, -8
  %142 = or disjoint i32 %141, 4
  br label %305

143:                                              ; preds = %40
  %144 = and i32 %23, 510
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

147:                                              ; preds = %143
  %148 = load i32, ptr %2, align 8, !tbaa !53
  %149 = and i32 %148, -8
  %150 = or disjoint i32 %149, 5
  br label %305

151:                                              ; preds = %40
  %152 = load i32, ptr %2, align 8, !tbaa !53
  %153 = or i32 %152, 4096
  store i32 %153, ptr %2, align 8, !tbaa !53
  br label %154

154:                                              ; preds = %40, %151
  %155 = and i32 %23, 510
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

158:                                              ; preds = %154
  %159 = load i32, ptr %2, align 8, !tbaa !53
  %160 = and i32 %159, -8
  %161 = or disjoint i32 %160, 6
  br label %305

162:                                              ; preds = %40
  %163 = load i32, ptr %2, align 8, !tbaa !53
  %164 = or i32 %163, 4096
  store i32 %164, ptr %2, align 8, !tbaa !53
  br label %165

165:                                              ; preds = %40, %162
  %166 = and i32 %23, 3584
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

169:                                              ; preds = %165
  %170 = load i32, ptr %2, align 8, !tbaa !53
  %171 = and i32 %170, -8
  %172 = or disjoint i32 %171, 1
  br label %305

173:                                              ; preds = %40
  %174 = load i32, ptr %2, align 8, !tbaa !53
  %175 = or i32 %174, 4096
  store i32 %175, ptr %2, align 8, !tbaa !53
  br label %176

176:                                              ; preds = %40, %173
  %177 = and i32 %23, 3584
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

180:                                              ; preds = %176
  %181 = load i32, ptr %2, align 8, !tbaa !53
  %182 = and i32 %181, -8
  %183 = or disjoint i32 %182, 2
  br label %305

184:                                              ; preds = %40
  %185 = load i32, ptr %2, align 8, !tbaa !53
  %186 = or i32 %185, 4096
  store i32 %186, ptr %2, align 8, !tbaa !53
  br label %187

187:                                              ; preds = %40, %184
  %188 = and i32 %23, 3584
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

191:                                              ; preds = %187
  %192 = load i32, ptr %2, align 8, !tbaa !53
  %193 = and i32 %192, -8
  %194 = or disjoint i32 %193, 3
  br label %305

195:                                              ; preds = %40
  %196 = load i32, ptr %2, align 8, !tbaa !53
  %197 = or i32 %196, 4096
  store i32 %197, ptr %2, align 8, !tbaa !53
  br label %198

198:                                              ; preds = %40, %195
  %199 = and i32 %23, 3584
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

202:                                              ; preds = %198
  %203 = load i32, ptr %2, align 8, !tbaa !53
  %204 = and i32 %203, -8
  %205 = or disjoint i32 %204, 4
  br label %305

206:                                              ; preds = %40
  %207 = icmp eq i32 %4, 7
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

209:                                              ; preds = %206
  %210 = and i32 %23, 510
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

213:                                              ; preds = %209
  %214 = load i32, ptr %2, align 8, !tbaa !53
  %215 = or i32 %214, 7
  br label %305

216:                                              ; preds = %40
  %217 = and i32 %23, 12416
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

220:                                              ; preds = %216
  %221 = load i32, ptr %2, align 8, !tbaa !53
  %222 = and i32 %221, -8
  %223 = or disjoint i32 %222, 2
  br label %305

224:                                              ; preds = %40
  %225 = and i32 %23, 20480
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

228:                                              ; preds = %224
  %229 = load i32, ptr %2, align 8, !tbaa !53
  %230 = and i32 %229, -8
  %231 = or disjoint i32 %230, 3
  br label %305

232:                                              ; preds = %40
  %233 = and i32 %23, 12544
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

236:                                              ; preds = %232
  %237 = load i32, ptr %2, align 8, !tbaa !53
  %238 = and i32 %237, -8
  %239 = or disjoint i32 %238, 1
  br label %305

240:                                              ; preds = %40
  %241 = load i8, ptr %41, align 1, !tbaa !10
  %242 = icmp eq i8 %241, 125
  br i1 %242, label %308, label %243

243:                                              ; preds = %240
  %244 = lshr i8 %241, 2
  %245 = and i8 %244, 62
  %246 = zext nneg i8 %245 to i64
  %247 = lshr i64 4203265827220226048, %246
  %248 = and i64 %247, 3
  %249 = getelementptr inbounds nuw i8, ptr %41, i64 %248
  %250 = getelementptr inbounds nuw i8, ptr %249, i64 1
  %251 = ptrtoint ptr %250 to i64
  %252 = sub i64 %8, %251
  %253 = icmp slt i64 %252, 1
  br i1 %253, label %254, label %255

254:                                              ; preds = %243
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

255:                                              ; preds = %243
  %256 = icmp eq i8 %241, 123
  br i1 %256, label %257, label %258

257:                                              ; preds = %255
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.49) #31
  unreachable

258:                                              ; preds = %255
  %259 = load i8, ptr %250, align 1, !tbaa !10
  switch i8 %259, label %265 [
    i8 60, label %262
    i8 62, label %260
    i8 94, label %261
  ]

260:                                              ; preds = %258
  br label %262

261:                                              ; preds = %258
  br label %262

262:                                              ; preds = %258, %260, %261
  %263 = phi i32 [ 24, %261 ], [ 16, %260 ], [ 8, %258 ]
  %264 = icmp eq i32 %42, 0
  br i1 %264, label %266, label %265

265:                                              ; preds = %258, %262
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.48) #31
  unreachable

266:                                              ; preds = %262
  %267 = ptrtoint ptr %41 to i64
  %268 = sub i64 %251, %267
  %269 = icmp sgt i64 %268, -1
  br i1 %269, label %271, label %270

270:                                              ; preds = %266
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

271:                                              ; preds = %266
  %272 = load i32, ptr %2, align 8, !tbaa !53
  %273 = and i32 %272, -229377
  %274 = trunc i64 %268 to i32
  %275 = shl i32 %274, 15
  %276 = or i32 %273, %275
  store i32 %276, ptr %2, align 8, !tbaa !53
  %277 = icmp eq i64 %268, 1
  br i1 %277, label %278, label %280

278:                                              ; preds = %271
  %279 = load i8, ptr %41, align 1, !tbaa !10
  store i8 %279, ptr %32, align 4, !tbaa !10
  store i8 0, ptr %35, align 1, !tbaa !10
  store i8 0, ptr %36, align 2, !tbaa !10
  br label %295

280:                                              ; preds = %271
  %281 = icmp samesign ult i64 %268, 5
  br i1 %281, label %283, label %282

282:                                              ; preds = %280
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 843, ptr noundef nonnull @.str.51) #31
  unreachable

283:                                              ; preds = %280
  %284 = load i8, ptr %41, align 1, !tbaa !10
  store i8 %284, ptr %32, align 4, !tbaa !10
  %285 = getelementptr inbounds nuw i8, ptr %41, i64 1
  %286 = load i8, ptr %285, align 1, !tbaa !10
  store i8 %286, ptr %37, align 1, !tbaa !10
  %287 = icmp eq i64 %268, 2
  br i1 %287, label %295, label %288, !llvm.loop !487

288:                                              ; preds = %283
  %289 = getelementptr inbounds nuw i8, ptr %41, i64 2
  %290 = load i8, ptr %289, align 1, !tbaa !10
  store i8 %290, ptr %38, align 2, !tbaa !10
  %291 = icmp eq i64 %268, 3
  br i1 %291, label %295, label %292, !llvm.loop !487

292:                                              ; preds = %288
  %293 = getelementptr inbounds nuw i8, ptr %41, i64 3
  %294 = load i8, ptr %293, align 1, !tbaa !10
  store i8 %294, ptr %39, align 1, !tbaa !10
  br label %295

295:                                              ; preds = %283, %288, %292, %278
  %296 = and i32 %276, -57
  %297 = or disjoint i32 %296, %263
  store i32 %297, ptr %2, align 8, !tbaa !53
  %298 = getelementptr inbounds nuw i8, ptr %249, i64 2
  br label %299

299:                                              ; preds = %295, %120, %109, %94, %89, %73, %67, %51
  %300 = phi ptr [ %298, %295 ], [ %123, %120 ], [ %115, %109 ], [ %100, %94 ], [ %90, %89 ], [ %76, %73 ], [ %68, %67 ], [ %56, %51 ]
  %301 = phi i32 [ 1, %295 ], [ 7, %120 ], [ 6, %109 ], [ 5, %94 ], [ 4, %89 ], [ 3, %73 ], [ 2, %67 ], [ 1, %51 ]
  %302 = icmp eq ptr %300, %1
  br i1 %302, label %308, label %303

303:                                              ; preds = %299
  %304 = load i8, ptr %300, align 1, !tbaa !10
  br label %40, !llvm.loop !488

305:                                              ; preds = %236, %228, %220, %213, %202, %191, %180, %169, %158, %147, %139, %128
  %306 = phi i32 [ %131, %128 ], [ %142, %139 ], [ %150, %147 ], [ %161, %158 ], [ %172, %169 ], [ %183, %180 ], [ %194, %191 ], [ %205, %202 ], [ %215, %213 ], [ %223, %220 ], [ %231, %228 ], [ %239, %236 ]
  store i32 %306, ptr %2, align 8, !tbaa !53
  %307 = getelementptr inbounds nuw i8, ptr %41, i64 1
  br label %308

308:                                              ; preds = %240, %299, %40, %305, %15
  %309 = phi ptr [ %0, %15 ], [ %307, %305 ], [ %41, %40 ], [ %300, %299 ], [ %41, %240 ]
  ret ptr %309
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail13arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) local_unnamed_addr #14 comdat align 2 {
  %3 = alloca %class.anon.56, align 8
  %4 = alloca %"class.fmt::v11::basic_string_view", align 8
  %5 = alloca %"class.fmt::v11::basic_string_view", align 8
  %6 = alloca %class.anon.56, align 8
  %7 = alloca %"class.fmt::v11::loc_value", align 16
  %8 = alloca %"struct.fmt::v11::format_specs", align 4
  %9 = alloca x86_fp80, align 16
  %10 = alloca %"struct.fmt::v11::format_specs", align 4
  %11 = alloca %"class.fmt::v11::loc_value", align 16
  %12 = alloca %"struct.fmt::v11::format_specs", align 4
  %13 = alloca %"struct.fmt::v11::format_specs", align 4
  %14 = alloca %"class.fmt::v11::loc_value", align 16
  %15 = alloca %"struct.fmt::v11::format_specs", align 4
  %16 = alloca %"struct.fmt::v11::format_specs", align 4
  %17 = alloca %class.anon.29, align 8
  %18 = alloca %"class.fmt::v11::loc_value", align 16
  %19 = alloca %"class.fmt::v11::loc_value", align 16
  %20 = alloca %"struct.fmt::v11::detail::write_int_arg.20", align 16
  %21 = alloca %"class.fmt::v11::loc_value", align 16
  %22 = alloca %"struct.fmt::v11::detail::write_int_arg.20", align 16
  %23 = alloca %"class.fmt::v11::loc_value", align 16
  %24 = alloca %"struct.fmt::v11::detail::write_int_arg.19", align 8
  %25 = alloca %"class.fmt::v11::loc_value", align 16
  %26 = alloca %"struct.fmt::v11::detail::write_int_arg.19", align 8
  %27 = alloca %"class.fmt::v11::loc_value", align 16
  %28 = alloca %"class.fmt::v11::loc_value", align 16
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %30 = load i32, ptr %29, align 16, !tbaa !21
  switch i32 %30, label %376 [
    i32 15, label %377
    i32 1, label %31
    i32 2, label %66
    i32 3, label %96
    i32 4, label %130
    i32 5, label %157
    i32 6, label %191
    i32 7, label %218
    i32 8, label %255
    i32 9, label %265
    i32 10, label %283
    i32 11, label %301
    i32 12, label %319
    i32 13, label %348
    i32 14, label %358
  ]

31:                                               ; preds = %2
  %32 = load i32, ptr %0, align 16, !tbaa !10
  %33 = load ptr, ptr %1, align 8, !tbaa !31
  %34 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %35 = load ptr, ptr %34, align 8, !tbaa !489
  %36 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %37 = load ptr, ptr %36, align 8, !tbaa !36
  %38 = ptrtoint ptr %33 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %28)
  %39 = load i32, ptr %35, align 4, !tbaa !53
  %40 = and i32 %39, 16384
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %31
  %43 = ptrtoint ptr %37 to i64
  store i32 %32, ptr %28, align 16, !tbaa !10
  %44 = getelementptr inbounds nuw i8, ptr %28, i64 16
  store i32 1, ptr %44, align 16, !tbaa !21
  %45 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %38, ptr noundef nonnull %28, ptr noundef nonnull align 4 dereferenceable(16) %35, i64 %43)
  br i1 %45, label %65, label %46

46:                                               ; preds = %42, %31
  %47 = icmp slt i32 %32, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = sub i32 0, %32
  br label %59

50:                                               ; preds = %46
  %51 = load i32, ptr %35, align 4, !tbaa !53
  %52 = lshr i32 %51, 10
  %53 = and i32 %52, 3
  %54 = zext nneg i32 %53 to i64
  %55 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !11
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 %57, 32
  br label %59

59:                                               ; preds = %50, %48
  %60 = phi i64 [ 72057787311456256, %48 ], [ %58, %50 ]
  %61 = phi i32 [ %49, %48 ], [ %32, %50 ]
  %62 = zext i32 %61 to i64
  %63 = or disjoint i64 %60, %62
  %64 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %38, i64 %63, ptr noundef nonnull align 4 dereferenceable(16) %35)
  br label %65

65:                                               ; preds = %42, %59
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %28)
  br label %377

66:                                               ; preds = %2
  %67 = load i32, ptr %0, align 16, !tbaa !10
  %68 = load ptr, ptr %1, align 8, !tbaa !31
  %69 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %70 = load ptr, ptr %69, align 8, !tbaa !489
  %71 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %72 = load ptr, ptr %71, align 8, !tbaa !36
  %73 = ptrtoint ptr %68 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %27)
  %74 = load i32, ptr %70, align 4, !tbaa !53
  %75 = and i32 %74, 16384
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %66
  %78 = ptrtoint ptr %72 to i64
  store i32 %67, ptr %27, align 16, !tbaa !10
  %79 = getelementptr inbounds nuw i8, ptr %27, i64 16
  store i32 2, ptr %79, align 16, !tbaa !21
  %80 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %73, ptr noundef nonnull %27, ptr noundef nonnull align 4 dereferenceable(16) %70, i64 %78)
  br i1 %80, label %95, label %81

81:                                               ; preds = %77
  %82 = load i32, ptr %70, align 4, !tbaa !53
  br label %83

83:                                               ; preds = %81, %66
  %84 = phi i32 [ %82, %81 ], [ %74, %66 ]
  %85 = lshr i32 %84, 10
  %86 = and i32 %85, 3
  %87 = zext nneg i32 %86 to i64
  %88 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !11
  %90 = zext i32 %89 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %67 to i64
  %93 = or disjoint i64 %91, %92
  %94 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %73, i64 %93, ptr noundef nonnull align 4 dereferenceable(16) %70)
  br label %95

95:                                               ; preds = %77, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %27)
  br label %377

96:                                               ; preds = %2
  %97 = load i64, ptr %0, align 16, !tbaa !10
  %98 = load ptr, ptr %1, align 8, !tbaa !31
  %99 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %100 = load ptr, ptr %99, align 8, !tbaa !489
  %101 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %102 = load ptr, ptr %101, align 8, !tbaa !36
  %103 = ptrtoint ptr %98 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %25)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %26)
  %104 = load i32, ptr %100, align 4, !tbaa !53
  %105 = and i32 %104, 16384
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %96
  %108 = ptrtoint ptr %102 to i64
  store i64 %97, ptr %25, align 16, !tbaa !10
  %109 = getelementptr inbounds nuw i8, ptr %25, i64 16
  store i32 3, ptr %109, align 16, !tbaa !21
  %110 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %103, ptr noundef nonnull %25, ptr noundef nonnull align 4 dereferenceable(16) %100, i64 %108)
  br i1 %110, label %129, label %111

111:                                              ; preds = %107
  %112 = load i32, ptr %100, align 4, !tbaa !53
  br label %113

113:                                              ; preds = %111, %96
  %114 = phi i32 [ %112, %111 ], [ %104, %96 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !492)
  %115 = icmp slt i64 %97, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = sub i64 0, %97
  br label %124

118:                                              ; preds = %113
  %119 = lshr i32 %114, 10
  %120 = and i32 %119, 3
  %121 = zext nneg i32 %120 to i64
  %122 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !11, !noalias !492
  br label %124

124:                                              ; preds = %118, %116
  %125 = phi i32 [ 16777261, %116 ], [ %123, %118 ]
  %126 = phi i64 [ %117, %116 ], [ %97, %118 ]
  store i64 %126, ptr %26, align 8, !tbaa !495, !alias.scope !492
  %127 = getelementptr inbounds nuw i8, ptr %26, i64 8
  store i32 %125, ptr %127, align 8, !tbaa !497, !alias.scope !492
  %128 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %103, ptr noundef nonnull %26, ptr noundef nonnull align 4 dereferenceable(16) %100)
  br label %129

129:                                              ; preds = %107, %124
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %25)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %26)
  br label %377

130:                                              ; preds = %2
  %131 = load i64, ptr %0, align 16, !tbaa !10
  %132 = load ptr, ptr %1, align 8, !tbaa !31
  %133 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %134 = load ptr, ptr %133, align 8, !tbaa !489
  %135 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %136 = load ptr, ptr %135, align 8, !tbaa !36
  %137 = ptrtoint ptr %132 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %23)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %24)
  %138 = load i32, ptr %134, align 4, !tbaa !53
  %139 = and i32 %138, 16384
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %130
  %142 = ptrtoint ptr %136 to i64
  store i64 %131, ptr %23, align 16, !tbaa !10
  %143 = getelementptr inbounds nuw i8, ptr %23, i64 16
  store i32 4, ptr %143, align 16, !tbaa !21
  %144 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %137, ptr noundef nonnull %23, ptr noundef nonnull align 4 dereferenceable(16) %134, i64 %142)
  br i1 %144, label %156, label %145

145:                                              ; preds = %141
  %146 = load i32, ptr %134, align 4, !tbaa !53
  br label %147

147:                                              ; preds = %145, %130
  %148 = phi i32 [ %146, %145 ], [ %138, %130 ]
  %149 = lshr i32 %148, 10
  %150 = and i32 %149, 3
  call void @llvm.experimental.noalias.scope.decl(metadata !498)
  %151 = zext nneg i32 %150 to i64
  %152 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %151
  %153 = load i32, ptr %152, align 4, !tbaa !11, !noalias !498
  store i64 %131, ptr %24, align 8, !tbaa !495, !alias.scope !498
  %154 = getelementptr inbounds nuw i8, ptr %24, i64 8
  store i32 %153, ptr %154, align 8, !tbaa !497, !alias.scope !498
  %155 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %137, ptr noundef nonnull %24, ptr noundef nonnull align 4 dereferenceable(16) %134)
  br label %156

156:                                              ; preds = %141, %147
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %23)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %24)
  br label %377

157:                                              ; preds = %2
  %158 = load i128, ptr %0, align 16, !tbaa !10
  %159 = load ptr, ptr %1, align 8, !tbaa !31
  %160 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %161 = load ptr, ptr %160, align 8, !tbaa !489
  %162 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %163 = load ptr, ptr %162, align 8, !tbaa !36
  %164 = ptrtoint ptr %159 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %21)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %22)
  %165 = load i32, ptr %161, align 4, !tbaa !53
  %166 = and i32 %165, 16384
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %174, label %168

168:                                              ; preds = %157
  %169 = ptrtoint ptr %163 to i64
  store i128 %158, ptr %21, align 16, !tbaa !10
  %170 = getelementptr inbounds nuw i8, ptr %21, i64 16
  store i32 5, ptr %170, align 16, !tbaa !21
  %171 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %164, ptr noundef nonnull %21, ptr noundef nonnull align 4 dereferenceable(16) %161, i64 %169)
  br i1 %171, label %190, label %172

172:                                              ; preds = %168
  %173 = load i32, ptr %161, align 4, !tbaa !53
  br label %174

174:                                              ; preds = %172, %157
  %175 = phi i32 [ %173, %172 ], [ %165, %157 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !501)
  %176 = icmp slt i128 %158, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %174
  %178 = sub i128 0, %158
  br label %185

179:                                              ; preds = %174
  %180 = lshr i32 %175, 10
  %181 = and i32 %180, 3
  %182 = zext nneg i32 %181 to i64
  %183 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %182
  %184 = load i32, ptr %183, align 4, !tbaa !11, !noalias !501
  br label %185

185:                                              ; preds = %179, %177
  %186 = phi i32 [ 16777261, %177 ], [ %184, %179 ]
  %187 = phi i128 [ %178, %177 ], [ %158, %179 ]
  store i128 %187, ptr %22, align 16, !tbaa !504, !alias.scope !501
  %188 = getelementptr inbounds nuw i8, ptr %22, i64 16
  store i32 %186, ptr %188, align 16, !tbaa !506, !alias.scope !501
  %189 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %164, ptr noundef nonnull %22, ptr noundef nonnull align 4 dereferenceable(16) %161)
  br label %190

190:                                              ; preds = %168, %185
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %21)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %22)
  br label %377

191:                                              ; preds = %2
  %192 = load i128, ptr %0, align 16, !tbaa !10
  %193 = load ptr, ptr %1, align 8, !tbaa !31
  %194 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %195 = load ptr, ptr %194, align 8, !tbaa !489
  %196 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %197 = load ptr, ptr %196, align 8, !tbaa !36
  %198 = ptrtoint ptr %193 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %19)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %20)
  %199 = load i32, ptr %195, align 4, !tbaa !53
  %200 = and i32 %199, 16384
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %208, label %202

202:                                              ; preds = %191
  %203 = ptrtoint ptr %197 to i64
  store i128 %192, ptr %19, align 16, !tbaa !10
  %204 = getelementptr inbounds nuw i8, ptr %19, i64 16
  store i32 6, ptr %204, align 16, !tbaa !21
  %205 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %198, ptr noundef nonnull %19, ptr noundef nonnull align 4 dereferenceable(16) %195, i64 %203)
  br i1 %205, label %217, label %206

206:                                              ; preds = %202
  %207 = load i32, ptr %195, align 4, !tbaa !53
  br label %208

208:                                              ; preds = %206, %191
  %209 = phi i32 [ %207, %206 ], [ %199, %191 ]
  %210 = lshr i32 %209, 10
  %211 = and i32 %210, 3
  call void @llvm.experimental.noalias.scope.decl(metadata !507)
  %212 = zext nneg i32 %211 to i64
  %213 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %212
  %214 = load i32, ptr %213, align 4, !tbaa !11, !noalias !507
  store i128 %192, ptr %20, align 16, !tbaa !504, !alias.scope !507
  %215 = getelementptr inbounds nuw i8, ptr %20, i64 16
  store i32 %214, ptr %215, align 16, !tbaa !506, !alias.scope !507
  %216 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %198, ptr noundef nonnull %20, ptr noundef nonnull align 4 dereferenceable(16) %195)
  br label %217

217:                                              ; preds = %202, %208
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %19)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %20)
  br label %377

218:                                              ; preds = %2
  %219 = load i8, ptr %0, align 16, !tbaa !10, !range !51, !noundef !52
  %220 = load ptr, ptr %1, align 8, !tbaa !31
  %221 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %222 = load ptr, ptr %221, align 8, !tbaa !489
  %223 = ptrtoint ptr %220 to i64
  %224 = load i32, ptr %222, align 4, !tbaa !53
  %225 = trunc i32 %224 to i8
  %226 = and i8 %225, 7
  switch i8 %226, label %227 [
    i8 0, label %249
    i8 2, label %249
  ]

227:                                              ; preds = %218
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18)
  %228 = and i32 %224, 16384
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %236, label %230

230:                                              ; preds = %227
  %231 = zext nneg i8 %219 to i32
  store i32 %231, ptr %18, align 16, !tbaa !10
  %232 = getelementptr inbounds nuw i8, ptr %18, i64 16
  store i32 1, ptr %232, align 16, !tbaa !21
  %233 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %223, ptr noundef nonnull %18, ptr noundef nonnull align 4 dereferenceable(16) %222, i64 0)
  br i1 %233, label %248, label %234

234:                                              ; preds = %230
  %235 = load i32, ptr %222, align 4, !tbaa !53
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %224, %227 ]
  %238 = lshr i32 %237, 10
  %239 = and i32 %238, 3
  %240 = zext nneg i32 %239 to i64
  %241 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %240
  %242 = load i32, ptr %241, align 4, !tbaa !11
  %243 = zext i32 %242 to i64
  %244 = shl nuw i64 %243, 32
  %245 = zext nneg i8 %219 to i64
  %246 = or disjoint i64 %244, %245
  %247 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %223, i64 %246, ptr noundef nonnull align 4 dereferenceable(16) %222)
  br label %248

248:                                              ; preds = %236, %230
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18)
  br label %377

249:                                              ; preds = %218, %218
  %250 = trunc nuw i8 %219 to i1
  %251 = select i1 %250, ptr @.str.20, ptr @.str.21
  %252 = select i1 %250, i64 4, i64 5
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %17) #30
  store ptr %251, ptr %17, align 8, !tbaa !19
  %253 = getelementptr inbounds nuw i8, ptr %17, i64 8
  store i64 %252, ptr %253, align 8, !tbaa !20
  %254 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_1ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %223, ptr noundef nonnull align 4 dereferenceable(16) %222, i64 noundef %252, i64 noundef %252, ptr noundef nonnull align 8 dereferenceable(16) %17)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #30
  br label %377

255:                                              ; preds = %2
  %256 = load i8, ptr %0, align 16, !tbaa !10
  %257 = load ptr, ptr %1, align 8, !tbaa !31
  %258 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %259 = load ptr, ptr %258, align 8, !tbaa !489
  %260 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %261 = load ptr, ptr %260, align 8, !tbaa !36
  %262 = ptrtoint ptr %257 to i64
  %263 = ptrtoint ptr %261 to i64
  %264 = tail call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_T_RKNS0_12format_specsENS1_10locale_refE(i64 %262, i8 noundef %256, ptr noundef nonnull align 4 dereferenceable(16) %259, i64 %263)
  br label %377

265:                                              ; preds = %2
  %266 = load float, ptr %0, align 16, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %16)
  %267 = load ptr, ptr %1, align 8, !tbaa !31
  %268 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %269 = load ptr, ptr %268, align 8, !tbaa !489
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %16, ptr noundef nonnull align 4 dereferenceable(16) %269, i64 16, i1 false)
  %270 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %271 = load ptr, ptr %270, align 8, !tbaa !36
  %272 = ptrtoint ptr %267 to i64
  %273 = ptrtoint ptr %271 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %14)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %15)
  %274 = load i32, ptr %16, align 4, !tbaa !53
  %275 = and i32 %274, 16384
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %280, label %277

277:                                              ; preds = %265
  store float %266, ptr %14, align 16, !tbaa !10
  %278 = getelementptr inbounds nuw i8, ptr %14, i64 16
  store i32 9, ptr %278, align 16, !tbaa !21
  %279 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %272, ptr noundef nonnull %14, ptr noundef nonnull align 4 dereferenceable(16) %16, i64 %273)
  br i1 %279, label %282, label %280

280:                                              ; preds = %277, %265
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %15, ptr noundef nonnull align 4 dereferenceable(16) %16, i64 16, i1 false)
  %281 = call i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEfEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %272, float noundef %266, ptr noundef nonnull %15, i64 %273)
  br label %282

282:                                              ; preds = %277, %280
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %14)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %15)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %16)
  br label %377

283:                                              ; preds = %2
  %284 = load double, ptr %0, align 16, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  %285 = load ptr, ptr %1, align 8, !tbaa !31
  %286 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %287 = load ptr, ptr %286, align 8, !tbaa !489
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %13, ptr noundef nonnull align 4 dereferenceable(16) %287, i64 16, i1 false)
  %288 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %289 = load ptr, ptr %288, align 8, !tbaa !36
  %290 = ptrtoint ptr %285 to i64
  %291 = ptrtoint ptr %289 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12)
  %292 = load i32, ptr %13, align 4, !tbaa !53
  %293 = and i32 %292, 16384
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %298, label %295

295:                                              ; preds = %283
  store double %284, ptr %11, align 16, !tbaa !10
  %296 = getelementptr inbounds nuw i8, ptr %11, i64 16
  store i32 10, ptr %296, align 16, !tbaa !21
  %297 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %290, ptr noundef nonnull %11, ptr noundef nonnull align 4 dereferenceable(16) %13, i64 %291)
  br i1 %297, label %300, label %298

298:                                              ; preds = %295, %283
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %12, ptr noundef nonnull align 4 dereferenceable(16) %13, i64 16, i1 false)
  %299 = call i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEdEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %290, double noundef %284, ptr noundef nonnull %12, i64 %291)
  br label %300

300:                                              ; preds = %295, %298
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  br label %377

301:                                              ; preds = %2
  %302 = load x86_fp80, ptr %0, align 16, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10)
  %303 = load ptr, ptr %1, align 8, !tbaa !31
  %304 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %305 = load ptr, ptr %304, align 8, !tbaa !489
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %10, ptr noundef nonnull align 4 dereferenceable(16) %305, i64 16, i1 false)
  %306 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %307 = load ptr, ptr %306, align 8, !tbaa !36
  %308 = ptrtoint ptr %303 to i64
  %309 = ptrtoint ptr %307 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8)
  %310 = load i32, ptr %10, align 4, !tbaa !53
  %311 = and i32 %310, 16384
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %301
  store x86_fp80 %302, ptr %7, align 16, !tbaa !10
  %314 = getelementptr inbounds nuw i8, ptr %7, i64 16
  store i32 11, ptr %314, align 16, !tbaa !21
  %315 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %308, ptr noundef nonnull %7, ptr noundef nonnull align 4 dereferenceable(16) %10, i64 %309)
  br i1 %315, label %318, label %316

316:                                              ; preds = %313, %301
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %8, ptr noundef nonnull align 4 dereferenceable(16) %10, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #30
  store x86_fp80 %302, ptr %9, align 16, !tbaa !57
  %317 = call i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEeEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %308, ptr noundef nonnull %9, ptr noundef nonnull %8, i64 %309)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #30
  br label %318

318:                                              ; preds = %313, %316
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10)
  br label %377

319:                                              ; preds = %2
  %320 = load ptr, ptr %0, align 16, !tbaa !10
  %321 = load ptr, ptr %1, align 8, !tbaa !31
  %322 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %323 = load ptr, ptr %322, align 8, !tbaa !489
  %324 = ptrtoint ptr %321 to i64
  %325 = load i32, ptr %323, align 4, !tbaa !53
  %326 = and i32 %325, 7
  %327 = icmp eq i32 %326, 3
  br i1 %327, label %328, label %341

328:                                              ; preds = %319
  %329 = ptrtoint ptr %320 to i64
  br label %330

330:                                              ; preds = %330, %328
  %331 = phi i64 [ %329, %328 ], [ %334, %330 ]
  %332 = phi i32 [ 0, %328 ], [ %333, %330 ]
  %333 = add nuw nsw i32 %332, 1
  %334 = lshr i64 %331, 4
  %335 = icmp ult i64 %331, 16
  br i1 %335, label %336, label %330, !llvm.loop !65

336:                                              ; preds = %330
  %337 = add nuw i32 %332, 3
  %338 = zext i32 %337 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i64 %329, ptr %6, align 8, !tbaa !67
  %339 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i32 %333, ptr %339, align 8, !tbaa !69
  %340 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_ptrIcS5_yEET0_S7_T1_PKNS0_12format_specsEEUlS5_E_EES8_S8_RSA_yyOT2_(i64 %324, ptr noundef nonnull align 4 dereferenceable(16) %323, i64 noundef %338, i64 noundef %338, ptr noundef nonnull align 8 dereferenceable(12) %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %377

341:                                              ; preds = %319
  %342 = icmp eq ptr %320, null
  br i1 %342, label %343, label %344

343:                                              ; preds = %341
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.39) #31
  unreachable

344:                                              ; preds = %341
  %345 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %320) #30
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5)
  store ptr %320, ptr %5, align 8, !tbaa !19
  %346 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 %345, ptr %346, align 8, !tbaa !20
  %347 = call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsE(i64 %324, ptr noundef nonnull %5, ptr noundef nonnull align 4 dereferenceable(16) %323)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5)
  br label %377

348:                                              ; preds = %2
  %349 = load ptr, ptr %0, align 16, !tbaa !59, !noalias !510
  %350 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %351 = load i64, ptr %350, align 8, !tbaa !64, !noalias !510
  %352 = load ptr, ptr %1, align 8, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  store ptr %349, ptr %4, align 8
  %353 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 %351, ptr %353, align 8
  %354 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %355 = load ptr, ptr %354, align 8, !tbaa !489
  %356 = ptrtoint ptr %352 to i64
  %357 = call i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsE(i64 %356, ptr noundef nonnull %4, ptr noundef nonnull align 4 dereferenceable(16) %355)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  br label %377

358:                                              ; preds = %2
  %359 = load ptr, ptr %0, align 16, !tbaa !10
  %360 = load ptr, ptr %1, align 8, !tbaa !31
  %361 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %362 = load ptr, ptr %361, align 8, !tbaa !489
  %363 = ptrtoint ptr %359 to i64
  br label %364

364:                                              ; preds = %364, %358
  %365 = phi i64 [ %363, %358 ], [ %368, %364 ]
  %366 = phi i32 [ 0, %358 ], [ %367, %364 ]
  %367 = add nuw nsw i32 %366, 1
  %368 = lshr i64 %365, 4
  %369 = icmp ult i64 %365, 16
  br i1 %369, label %370, label %364, !llvm.loop !65

370:                                              ; preds = %364
  %371 = ptrtoint ptr %360 to i64
  %372 = add nuw i32 %366, 3
  %373 = zext i32 %372 to i64
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #30
  store i64 %363, ptr %3, align 8, !tbaa !67
  %374 = getelementptr inbounds nuw i8, ptr %3, i64 8
  store i32 %367, ptr %374, align 8, !tbaa !69
  %375 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_ptrIcS5_yEET0_S7_T1_PKNS0_12format_specsEEUlS5_E_EES8_S8_RSA_yyOT2_(i64 %371, ptr noundef nonnull align 4 dereferenceable(16) %362, i64 noundef %373, i64 noundef %373, ptr noundef nonnull align 8 dereferenceable(12) %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #30
  br label %377

376:                                              ; preds = %2
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 3392, ptr noundef nonnull @.str.14) #31
  unreachable

377:                                              ; preds = %2, %344, %336, %249, %248, %370, %348, %318, %300, %282, %255, %217, %190, %156, %129, %95, %65
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail18parse_dynamic_specIcEENS1_25parse_dynamic_spec_resultIT_EEPKS4_S7_RiRNS1_7arg_refIS4_EERNS0_13parse_contextIS4_EE(ptr dead_on_unwind noalias writable sret(%"struct.fmt::v11::detail::parse_dynamic_spec_result") align 8 %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3, ptr noundef nonnull align 8 dereferenceable(16) %4, ptr noundef nonnull align 8 dereferenceable(20) %5) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %7 = alloca i32, align 4
  %8 = alloca %"struct.fmt::v11::detail::dynamic_spec_handler", align 8
  %9 = icmp eq ptr %1, %2
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 1371, ptr noundef nonnull @.str.14) #31
  unreachable

11:                                               ; preds = %6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #30
  store i32 0, ptr %7, align 4, !tbaa !513
  %12 = load i8, ptr %1, align 1, !tbaa !10
  %13 = add i8 %12, -48
  %14 = icmp ult i8 %13, 10
  br i1 %14, label %15, label %57

15:                                               ; preds = %11
  %16 = ptrtoint ptr %2 to i64
  %17 = ptrtoint ptr %1 to i64
  %18 = sub i64 %16, %17
  %19 = getelementptr i8, ptr %1, i64 %18
  br label %20

20:                                               ; preds = %30, %15
  %21 = phi i8 [ %31, %30 ], [ %12, %15 ]
  %22 = phi ptr [ %28, %30 ], [ %1, %15 ]
  %23 = phi i32 [ %27, %30 ], [ 0, %15 ]
  %24 = mul i32 %23, 10
  %25 = zext nneg i8 %21 to i32
  %26 = add nsw i32 %25, -48
  %27 = add i32 %26, %24
  %28 = getelementptr inbounds nuw i8, ptr %22, i64 1
  %29 = icmp eq ptr %28, %2
  br i1 %29, label %34, label %30

30:                                               ; preds = %20
  %31 = load i8, ptr %28, align 1, !tbaa !10
  %32 = add i8 %31, -48
  %33 = icmp ult i8 %32, 10
  br i1 %33, label %20, label %34, !llvm.loop !462

34:                                               ; preds = %30, %20
  %35 = phi ptr [ %28, %30 ], [ %19, %20 ]
  %36 = ptrtoint ptr %35 to i64
  %37 = sub i64 %36, %17
  %38 = icmp slt i64 %37, 10
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = icmp eq i64 %37, 10
  br i1 %40, label %41, label %54

41:                                               ; preds = %39
  %42 = zext i32 %23 to i64
  %43 = mul nuw nsw i64 %42, 10
  %44 = load i8, ptr %22, align 1, !tbaa !10
  %45 = sext i8 %44 to i64
  %46 = add nsw i64 %45, 4294967248
  %47 = and i64 %46, 4294967294
  %48 = add nuw nsw i64 %47, %43
  %49 = icmp samesign ugt i64 %48, 2147483647
  %50 = icmp eq i32 %27, -1
  %51 = select i1 %49, i1 true, i1 %50
  br i1 %51, label %54, label %55

52:                                               ; preds = %34
  %53 = icmp eq i32 %27, -1
  br i1 %53, label %54, label %55

54:                                               ; preds = %41, %39, %52
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.37) #31
  unreachable

55:                                               ; preds = %41, %52
  store i32 %27, ptr %3, align 4, !tbaa !11
  store ptr %35, ptr %0, align 8, !tbaa !486
  %56 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i32 0, ptr %56, align 8, !tbaa !483
  br label %86

57:                                               ; preds = %11
  %58 = icmp eq i8 %12, 123
  br i1 %58, label %59, label %85

59:                                               ; preds = %57
  %60 = getelementptr inbounds nuw i8, ptr %1, i64 1
  %61 = icmp eq ptr %60, %2
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = load i8, ptr %60, align 1, !tbaa !10
  switch i8 %63, label %71 [
    i8 125, label %64
    i8 58, label %64
  ]

64:                                               ; preds = %62, %62
  %65 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %66 = load i32, ptr %65, align 8, !tbaa !33
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.45) #31
  unreachable

69:                                               ; preds = %64
  %70 = add nuw nsw i32 %66, 1
  store i32 %70, ptr %65, align 8, !tbaa !33
  store i32 %66, ptr %4, align 8
  store i32 1, ptr %7, align 4, !tbaa !513
  br label %75

71:                                               ; preds = %62
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #30
  store ptr %5, ptr %8, align 8, !tbaa !514
  %72 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store ptr %4, ptr %72, align 8, !tbaa !516
  %73 = getelementptr inbounds nuw i8, ptr %8, i64 16
  store ptr %7, ptr %73, align 8, !tbaa !36
  %74 = call noundef ptr @_ZN3fmt3v116detail12parse_arg_idIcNS1_20dynamic_spec_handlerIcEEEEPKT_S7_S7_OT0_(ptr noundef nonnull %60, ptr noundef %2, ptr noundef nonnull align 8 dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #30
  br label %75

75:                                               ; preds = %69, %71, %59
  %76 = phi ptr [ %60, %59 ], [ %74, %71 ], [ %60, %69 ]
  %77 = icmp eq ptr %76, %2
  br i1 %77, label %85, label %78

78:                                               ; preds = %75
  %79 = load i8, ptr %76, align 1, !tbaa !10
  %80 = icmp eq i8 %79, 125
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  %82 = getelementptr inbounds nuw i8, ptr %76, i64 1
  store ptr %82, ptr %0, align 8, !tbaa !486
  %83 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %84 = load i32, ptr %7, align 4, !tbaa !513
  store i32 %84, ptr %83, align 8, !tbaa !483
  br label %86

85:                                               ; preds = %75, %78, %57
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.42) #31
  unreachable

86:                                               ; preds = %55, %81
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #30
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN3fmt3v116detail12parse_arg_idIcNS1_20dynamic_spec_handlerIcEEEEPKT_S7_S7_OT0_(ptr noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %4 = ptrtoint ptr %0 to i64
  %5 = ptrtoint ptr %1 to i64
  %6 = load i8, ptr %0, align 1, !tbaa !10
  %7 = add i8 %6, -48
  %8 = icmp ult i8 %7, 10
  br i1 %8, label %9, label %72

9:                                                ; preds = %3
  %10 = icmp eq i8 %6, 48
  br i1 %10, label %52, label %11

11:                                               ; preds = %9
  %12 = icmp eq ptr %0, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = sub i64 %5, %4
  %15 = getelementptr i8, ptr %0, i64 %14
  br label %18

16:                                               ; preds = %11
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 1281, ptr noundef nonnull @.str.14) #31
          to label %17 unwind label %49

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %28, %13
  %19 = phi i8 [ %29, %28 ], [ %6, %13 ]
  %20 = phi ptr [ %26, %28 ], [ %0, %13 ]
  %21 = phi i32 [ %25, %28 ], [ 0, %13 ]
  %22 = mul i32 %21, 10
  %23 = zext nneg i8 %19 to i32
  %24 = add nsw i32 %23, -48
  %25 = add i32 %24, %22
  %26 = getelementptr inbounds nuw i8, ptr %20, i64 1
  %27 = icmp eq ptr %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = load i8, ptr %26, align 1, !tbaa !10
  %30 = add i8 %29, -48
  %31 = icmp ult i8 %30, 10
  br i1 %31, label %18, label %32, !llvm.loop !462

32:                                               ; preds = %28, %18
  %33 = phi ptr [ %26, %28 ], [ %15, %18 ]
  %34 = ptrtoint ptr %33 to i64
  %35 = sub i64 %34, %4
  %36 = icmp slt i64 %35, 10
  br i1 %36, label %54, label %37

37:                                               ; preds = %32
  %38 = icmp eq i64 %35, 10
  br i1 %38, label %39, label %48

39:                                               ; preds = %37
  %40 = zext i32 %21 to i64
  %41 = mul nuw nsw i64 %40, 10
  %42 = load i8, ptr %20, align 1, !tbaa !10
  %43 = sext i8 %42 to i64
  %44 = add nsw i64 %43, 4294967248
  %45 = and i64 %44, 4294967294
  %46 = add nuw nsw i64 %45, %41
  %47 = icmp samesign ult i64 %46, 2147483648
  br i1 %47, label %54, label %48

48:                                               ; preds = %39, %37
  br label %54

49:                                               ; preds = %16
  %50 = landingpad { ptr, i32 }
          catch ptr null
  %51 = extractvalue { ptr, i32 } %50, 0
  tail call void @__clang_call_terminate(ptr %51) #33
  unreachable

52:                                               ; preds = %9
  %53 = getelementptr inbounds nuw i8, ptr %0, i64 1
  br label %54

54:                                               ; preds = %48, %39, %32, %52
  %55 = phi ptr [ %53, %52 ], [ %33, %32 ], [ %33, %39 ], [ %33, %48 ]
  %56 = phi i32 [ 0, %52 ], [ %25, %32 ], [ %25, %39 ], [ 2147483647, %48 ]
  %57 = icmp eq ptr %55, %1
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = load i8, ptr %55, align 1, !tbaa !10
  switch i8 %59, label %60 [
    i8 125, label %61
    i8 58, label %61
  ]

60:                                               ; preds = %58, %54
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.42) #31
  unreachable

61:                                               ; preds = %58, %58
  %62 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %63 = load ptr, ptr %62, align 8, !tbaa !518
  store i32 %56, ptr %63, align 8
  %64 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %65 = load ptr, ptr %64, align 8, !tbaa !520
  store i32 1, ptr %65, align 4, !tbaa !513
  %66 = load ptr, ptr %2, align 8, !tbaa !521
  %67 = getelementptr inbounds nuw i8, ptr %66, i64 16
  %68 = load i32, ptr %67, align 8, !tbaa !33
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %61
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.46) #31
  unreachable

71:                                               ; preds = %61
  store i32 -1, ptr %67, align 8, !tbaa !33
  br label %110

72:                                               ; preds = %3
  %73 = and i8 %6, -33
  %74 = add i8 %73, -65
  %75 = icmp ult i8 %74, 26
  %76 = icmp eq i8 %6, 95
  %77 = or i1 %76, %75
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = sub i64 %5, %4
  %80 = getelementptr i8, ptr %0, i64 %79
  br label %82

81:                                               ; preds = %72
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.42) #31
  unreachable

82:                                               ; preds = %78, %86
  %83 = phi ptr [ %84, %86 ], [ %0, %78 ]
  %84 = getelementptr inbounds nuw i8, ptr %83, i64 1
  %85 = icmp eq ptr %84, %1
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = load i8, ptr %84, align 1, !tbaa !10
  %88 = and i8 %87, -33
  %89 = add i8 %88, -65
  %90 = icmp ult i8 %89, 26
  %91 = icmp eq i8 %87, 95
  %92 = or i1 %91, %90
  %93 = add i8 %87, -48
  %94 = icmp ult i8 %93, 10
  %95 = or i1 %94, %92
  br i1 %95, label %82, label %96, !llvm.loop !522

96:                                               ; preds = %86, %82
  %97 = phi ptr [ %84, %86 ], [ %80, %82 ]
  %98 = ptrtoint ptr %97 to i64
  %99 = sub i64 %98, %4
  %100 = icmp sgt i64 %99, -1
  br i1 %100, label %102, label %101

101:                                              ; preds = %96
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

102:                                              ; preds = %96
  %103 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %104 = load ptr, ptr %103, align 8, !tbaa !518
  store ptr %0, ptr %104, align 8
  %105 = getelementptr inbounds nuw i8, ptr %104, i64 8
  store i64 %99, ptr %105, align 8
  %106 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %107 = load ptr, ptr %106, align 8, !tbaa !520
  store i32 2, ptr %107, align 4, !tbaa !513
  %108 = load ptr, ptr %2, align 8, !tbaa !521
  %109 = getelementptr inbounds nuw i8, ptr %108, i64 16
  store i32 -1, ptr %109, align 8, !tbaa !33
  br label %110

110:                                              ; preds = %102, %71
  %111 = phi ptr [ %55, %71 ], [ %97, %102 ]
  ret ptr %111
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3fmt3v116detail16get_dynamic_specINS0_7contextEEEiNS0_11arg_id_kindERKNS1_7arg_refINT_9char_typeEEERS6_(i32 noundef %0, ptr noundef nonnull align 8 dereferenceable(16) %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fmt::v11::basic_format_arg", align 16
  %5 = alloca %"struct.fmt::v11::detail::dynamic_spec_getter", align 1
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 3537, ptr noundef nonnull @.str.14) #31
  unreachable

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #30
  %9 = icmp eq i32 %0, 1
  br i1 %9, label %10, label %38

10:                                               ; preds = %8
  %11 = load i32, ptr %1, align 8, !tbaa !10
  tail call void @llvm.experimental.noalias.scope.decl(metadata !523)
  %12 = getelementptr inbounds nuw i8, ptr %2, i64 8
  tail call void @llvm.experimental.noalias.scope.decl(metadata !526)
  %13 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 0, ptr %13, align 16, !tbaa !21, !alias.scope !529
  %14 = load i64, ptr %12, align 8, !tbaa !5, !noalias !529
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %24, label %16

16:                                               ; preds = %10
  %17 = trunc i64 %14 to i32
  %18 = icmp slt i32 %11, %17
  br i1 %18, label %19, label %97

19:                                               ; preds = %16
  %20 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %21 = load ptr, ptr %20, align 8, !tbaa !10, !noalias !529
  %22 = sext i32 %11 to i64
  %23 = getelementptr inbounds %"class.fmt::v11::basic_format_arg", ptr %21, i64 %22
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 16 dereferenceable(20) %23, i64 20, i1 false), !tbaa.struct !28
  br label %97

24:                                               ; preds = %10
  %25 = icmp ugt i32 %11, 14
  br i1 %25, label %97, label %26

26:                                               ; preds = %24
  %27 = shl nuw nsw i32 %11, 2
  %28 = zext nneg i32 %27 to i64
  %29 = lshr i64 %14, %28
  %30 = trunc i64 %29 to i32
  %31 = and i32 %30, 15
  store i32 %31, ptr %13, align 16, !tbaa !21, !alias.scope !529
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %97, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %35 = load ptr, ptr %34, align 8, !tbaa !10, !noalias !529
  %36 = zext nneg i32 %11 to i64
  %37 = getelementptr inbounds nuw %"class.fmt::v11::detail::value", ptr %35, i64 %36
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %4, ptr noundef nonnull align 16 dereferenceable(16) %37, i64 16, i1 false), !tbaa.struct !30
  br label %97

38:                                               ; preds = %8
  %39 = load ptr, ptr %1, align 8, !tbaa !19
  %40 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %41 = load i64, ptr %40, align 8, !tbaa !20
  %42 = getelementptr inbounds nuw i8, ptr %2, i64 8
  tail call void @llvm.experimental.noalias.scope.decl(metadata !530)
  %43 = load i64, ptr %42, align 8, !tbaa !5, !noalias !530
  %44 = and i64 %43, 4611686018427387904
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %95, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %48 = load ptr, ptr %47, align 8, !noalias !530
  %49 = icmp slt i64 %43, 0
  %50 = select i1 %49, i64 -32, i64 -16
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  %52 = getelementptr inbounds nuw i8, ptr %51, i64 8
  %53 = load i64, ptr %52, align 8, !tbaa !465, !noalias !530
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %95, label %55

55:                                               ; preds = %46
  %56 = load ptr, ptr %51, align 8, !tbaa !468, !noalias !530
  br label %57

57:                                               ; preds = %67, %55
  %58 = phi i64 [ 0, %55 ], [ %68, %67 ]
  %59 = getelementptr inbounds nuw %"struct.fmt::v11::detail::named_arg_info", ptr %56, i64 %58
  %60 = load ptr, ptr %59, align 8, !tbaa !469, !noalias !530
  %61 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %60) #30, !noalias !530
  %62 = tail call noundef i64 @llvm.umin.i64(i64 %61, i64 %41)
  %63 = tail call noundef i32 @memcmp(ptr noundef %60, ptr noundef %39, i64 noundef %62), !noalias !530
  %64 = icmp eq i32 %63, 0
  %65 = icmp eq i64 %61, %41
  %66 = and i1 %65, %64
  br i1 %66, label %70, label %67

67:                                               ; preds = %57
  %68 = add nuw i64 %58, 1
  %69 = icmp eq i64 %68, %53
  br i1 %69, label %95, label %57, !llvm.loop !471

70:                                               ; preds = %57
  %71 = getelementptr inbounds nuw %"struct.fmt::v11::detail::named_arg_info", ptr %56, i64 %58, i32 1
  %72 = load i32, ptr %71, align 8, !tbaa !472, !noalias !530
  %73 = icmp sgt i32 %72, -1
  br i1 %73, label %74, label %95

74:                                               ; preds = %70
  %75 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 0, ptr %75, align 16, !tbaa !21, !alias.scope !533
  %76 = icmp sgt i64 %43, -1
  br i1 %76, label %83, label %77

77:                                               ; preds = %74
  %78 = trunc i64 %43 to i32
  %79 = icmp slt i32 %72, %78
  br i1 %79, label %80, label %97

80:                                               ; preds = %77
  %81 = zext nneg i32 %72 to i64
  %82 = getelementptr inbounds nuw %"class.fmt::v11::basic_format_arg", ptr %48, i64 %81
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 16 dereferenceable(20) %82, i64 20, i1 false), !tbaa.struct !28
  br label %97

83:                                               ; preds = %74
  %84 = icmp samesign ugt i32 %72, 14
  br i1 %84, label %97, label %85

85:                                               ; preds = %83
  %86 = shl nuw nsw i32 %72, 2
  %87 = zext nneg i32 %86 to i64
  %88 = lshr i64 %43, %87
  %89 = trunc i64 %88 to i32
  %90 = and i32 %89, 15
  store i32 %90, ptr %75, align 16, !tbaa !21, !alias.scope !533
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %85
  %93 = zext nneg i32 %72 to i64
  %94 = getelementptr inbounds nuw %"class.fmt::v11::detail::value", ptr %48, i64 %93
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %4, ptr noundef nonnull align 16 dereferenceable(16) %94, i64 16, i1 false), !tbaa.struct !30
  br label %97

95:                                               ; preds = %67, %70, %46, %38
  %96 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 0, ptr %96, align 16, !tbaa !21, !alias.scope !530
  br label %97

97:                                               ; preds = %95, %92, %85, %83, %80, %77, %33, %26, %24, %19, %16
  %98 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %99 = load i32, ptr %98, align 16, !tbaa !21
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.40) #31
  unreachable

102:                                              ; preds = %97
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %5) #30
  %103 = call noundef i64 @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail19dynamic_spec_getterEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 1 dereferenceable(1) %5)
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %5) #30
  %104 = icmp ugt i64 %103, 2147483647
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.52) #31
  unreachable

106:                                              ; preds = %102
  %107 = trunc nuw i64 %103 to i32
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30
  ret i32 %107
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i64 @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail19dynamic_spec_getterEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %0, ptr noundef nonnull align 1 dereferenceable(1) %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %4 = load i32, ptr %3, align 16, !tbaa !21
  switch i32 %4, label %35 [
    i32 15, label %34
    i32 1, label %5
    i32 2, label %10
    i32 3, label %13
    i32 4, label %16
    i32 5, label %18
    i32 6, label %23
    i32 7, label %26
    i32 8, label %27
    i32 9, label %28
    i32 10, label %29
    i32 11, label %30
    i32 12, label %31
    i32 13, label %32
    i32 14, label %33
  ]

5:                                                ; preds = %2
  %6 = load i32, ptr %0, align 16, !tbaa !10
  %7 = icmp slt i32 %6, 0
  %8 = zext nneg i32 %6 to i64
  %9 = select i1 %7, i64 -1, i64 %8
  br label %36

10:                                               ; preds = %2
  %11 = load i32, ptr %0, align 16, !tbaa !10
  %12 = zext i32 %11 to i64
  br label %36

13:                                               ; preds = %2
  %14 = load i64, ptr %0, align 16, !tbaa !10
  %15 = tail call noundef i64 @llvm.smax.i64(i64 %14, i64 -1)
  br label %36

16:                                               ; preds = %2
  %17 = load i64, ptr %0, align 16, !tbaa !10
  br label %36

18:                                               ; preds = %2
  %19 = load i128, ptr %0, align 16, !tbaa !10
  %20 = icmp slt i128 %19, 0
  %21 = trunc i128 %19 to i64
  %22 = select i1 %20, i64 -1, i64 %21
  br label %36

23:                                               ; preds = %2
  %24 = load i128, ptr %0, align 16, !tbaa !10
  %25 = trunc i128 %24 to i64
  br label %36

26:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

27:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

28:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

29:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

30:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

31:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

32:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

33:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

34:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

35:                                               ; preds = %2
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.53) #31
  unreachable

36:                                               ; preds = %23, %18, %16, %13, %10, %5
  %37 = phi i64 [ %25, %23 ], [ %22, %18 ], [ %17, %16 ], [ %15, %13 ], [ %12, %10 ], [ %9, %5 ]
  ret i64 %37
}

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #17 comdat {
  %4 = alloca %"struct.fmt::v11::detail::write_int_arg.19", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %4, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false), !tbaa.struct !536
  %5 = call i64 @_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, ptr noundef nonnull %4, ptr noundef nonnull align 4 dereferenceable(16) %2)
  ret i64 %5
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #5 comdat {
  %4 = alloca %class.anon.12, align 1
  %5 = alloca [64 x i8], align 16
  %6 = ptrtoint ptr %5 to i64
  %7 = alloca %class.anon.60, align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #30
  %8 = getelementptr inbounds nuw i8, ptr %5, i64 64
  %9 = load i64, ptr %1, align 8, !tbaa !495
  %10 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %11 = load i32, ptr %10, align 8, !tbaa !497
  %12 = load i32, ptr %2, align 4, !tbaa !53
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 7
  switch i8 %14, label %15 [
    i8 0, label %16
    i8 3, label %16
    i8 4, label %62
    i8 5, label %86
    i8 6, label %112
    i8 7, label %134
  ]

15:                                               ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2030, ptr noundef nonnull @.str.14) #31
  unreachable

16:                                               ; preds = %3, %3
  %17 = or i64 %9, 1
  %18 = tail call range(i64 0, 64) i64 @llvm.ctlz.i64(i64 %17, i1 true)
  %19 = xor i64 %18, 63
  %20 = getelementptr inbounds nuw [64 x i8], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE9bsr2log10, i64 0, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !10
  %22 = zext i8 %21 to i32
  %23 = zext i8 %21 to i64
  %24 = getelementptr inbounds nuw [21 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEyE20zero_or_powers_of_10, i64 0, i64 %23
  %25 = load i64, ptr %24, align 8, !tbaa !20
  %26 = icmp ult i64 %9, %25
  %27 = sext i1 %26 to i32
  %28 = add nsw i32 %27, %22
  %29 = icmp sgt i32 %28, 64
  br i1 %29, label %30, label %31

30:                                               ; preds = %16
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

31:                                               ; preds = %16
  %32 = icmp ugt i64 %9, 99
  br i1 %32, label %33, label %45

33:                                               ; preds = %31, %33
  %34 = phi i32 [ %36, %33 ], [ 64, %31 ]
  %35 = phi i64 [ %43, %33 ], [ %9, %31 ]
  %36 = add i32 %34, -2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds nuw i8, ptr %5, i64 %37
  %39 = urem i64 %35, 100
  %40 = shl nuw nsw i64 %39, 1
  %41 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %40
  %42 = load i16, ptr %41, align 2
  store i16 %42, ptr %38, align 2
  %43 = udiv i64 %35, 100
  %44 = icmp ugt i64 %35, 9999
  br i1 %44, label %33, label %45, !llvm.loop !79

45:                                               ; preds = %33, %31
  %46 = phi i64 [ %9, %31 ], [ %43, %33 ]
  %47 = phi i32 [ 64, %31 ], [ %36, %33 ]
  %48 = icmp samesign ugt i64 %46, 9
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = add i32 %47, -2
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds nuw i8, ptr %5, i64 %51
  %53 = shl nuw nsw i64 %46, 1
  %54 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %53
  %55 = load i16, ptr %54, align 2
  store i16 %55, ptr %52, align 1
  br label %141

56:                                               ; preds = %45
  %57 = trunc nuw i64 %46 to i8
  %58 = or disjoint i8 %57, 48
  %59 = add i32 %47, -1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds nuw i8, ptr %5, i64 %60
  store i8 %58, ptr %61, align 1, !tbaa !10
  br label %141

62:                                               ; preds = %3
  %63 = and i32 %12, 4096
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, ptr @.str.24, ptr @.str.23
  br label %66

66:                                               ; preds = %66, %62
  %67 = phi i64 [ %74, %66 ], [ %9, %62 ]
  %68 = phi i64 [ %72, %66 ], [ 64, %62 ]
  %69 = and i64 %67, 15
  %70 = getelementptr inbounds nuw i8, ptr %65, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !10
  %72 = add nsw i64 %68, -1
  %73 = getelementptr inbounds i8, ptr %5, i64 %72
  store i8 %71, ptr %73, align 1, !tbaa !10
  %74 = lshr i64 %67, 4
  %75 = icmp ult i64 %67, 16
  br i1 %75, label %76, label %66, !llvm.loop !109

76:                                               ; preds = %66
  %77 = and i32 %12, 8192
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %141, label %79

79:                                               ; preds = %76
  %80 = select i1 %64, i32 30768, i32 22576
  %81 = icmp eq i32 %11, 0
  %82 = shl nuw nsw i32 %80, 8
  %83 = select i1 %81, i32 %80, i32 %82
  %84 = or i32 %83, %11
  %85 = add i32 %84, 33554432
  br label %141

86:                                               ; preds = %3, %86
  %87 = phi i64 [ %94, %86 ], [ %9, %3 ]
  %88 = phi i64 [ %92, %86 ], [ 64, %3 ]
  %89 = trunc i64 %87 to i8
  %90 = and i8 %89, 7
  %91 = or disjoint i8 %90, 48
  %92 = add nsw i64 %88, -1
  %93 = getelementptr inbounds i8, ptr %5, i64 %92
  store i8 %91, ptr %93, align 1, !tbaa !10
  %94 = lshr i64 %87, 3
  %95 = icmp ult i64 %87, 8
  br i1 %95, label %96, label %86, !llvm.loop !109

96:                                               ; preds = %86
  %97 = and i32 %12, 8192
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %141, label %99

99:                                               ; preds = %96
  %100 = sub nsw i64 65, %88
  %101 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %102 = load i32, ptr %101, align 4, !tbaa !55
  %103 = sext i32 %102 to i64
  %104 = icmp sge i64 %100, %103
  %105 = icmp ne i64 %9, 0
  %106 = select i1 %104, i1 %105, i1 false
  br i1 %106, label %107, label %141

107:                                              ; preds = %99
  %108 = icmp eq i32 %11, 0
  %109 = select i1 %108, i32 48, i32 12288
  %110 = or i32 %109, %11
  %111 = add i32 %110, 16777216
  br label %141

112:                                              ; preds = %3, %112
  %113 = phi i64 [ %120, %112 ], [ %9, %3 ]
  %114 = phi i64 [ %118, %112 ], [ 64, %3 ]
  %115 = trunc i64 %113 to i8
  %116 = and i8 %115, 1
  %117 = or disjoint i8 %116, 48
  %118 = add nsw i64 %114, -1
  %119 = getelementptr inbounds i8, ptr %5, i64 %118
  store i8 %117, ptr %119, align 1, !tbaa !10
  %120 = lshr i64 %113, 1
  %121 = icmp ult i64 %113, 2
  br i1 %121, label %122, label %112, !llvm.loop !109

122:                                              ; preds = %112
  %123 = and i32 %12, 8192
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122
  %126 = and i32 %12, 4096
  %127 = icmp eq i32 %126, 0
  %128 = select i1 %127, i32 25136, i32 16944
  %129 = icmp eq i32 %11, 0
  %130 = shl nuw nsw i32 %128, 8
  %131 = select i1 %129, i32 %128, i32 %130
  %132 = or i32 %131, %11
  %133 = add i32 %132, 33554432
  br label %141

134:                                              ; preds = %3
  %135 = trunc i64 %9 to i8
  %136 = and i32 %12, 7
  %137 = icmp eq i32 %136, 1
  %138 = zext i1 %137 to i8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %4) #30
  store i8 %138, ptr %4, align 1, !tbaa !112
  %139 = getelementptr inbounds nuw i8, ptr %4, i64 1
  store i8 %135, ptr %139, align 1, !tbaa !115
  %140 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef 1, i64 noundef 1, ptr noundef nonnull align 1 dereferenceable(2) %4)
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %4) #30
  br label %330

141:                                              ; preds = %56, %49, %96, %99, %107, %122, %125, %76, %79
  %142 = phi i32 [ %133, %125 ], [ %11, %122 ], [ %111, %107 ], [ %11, %99 ], [ %11, %96 ], [ %85, %79 ], [ %11, %76 ], [ %11, %49 ], [ %11, %56 ]
  %143 = phi i64 [ %118, %125 ], [ %118, %122 ], [ %92, %107 ], [ %92, %99 ], [ %92, %96 ], [ %72, %79 ], [ %72, %76 ], [ %51, %49 ], [ %60, %56 ]
  %144 = getelementptr inbounds i8, ptr %5, i64 %143
  %145 = trunc i64 %143 to i32
  %146 = sub i32 64, %145
  %147 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %148 = load i32, ptr %147, align 4, !tbaa !125
  %149 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %150 = load i32, ptr %149, align 4, !tbaa !55
  %151 = add nsw i32 %150, 1
  %152 = or i32 %151, %148
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %303

154:                                              ; preds = %141
  %155 = icmp sgt i32 %146, -1
  br i1 %155, label %157, label %156

156:                                              ; preds = %154
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

157:                                              ; preds = %154
  %158 = lshr i32 %142, 24
  %159 = add nuw i32 %146, %158
  %160 = zext i32 %159 to i64
  %161 = inttoptr i64 %0 to ptr
  %162 = getelementptr inbounds nuw i8, ptr %161, i64 8
  %163 = load i64, ptr %162, align 8, !tbaa !37
  %164 = add i64 %163, %160
  %165 = getelementptr inbounds nuw i8, ptr %161, i64 16
  %166 = load i64, ptr %165, align 8, !tbaa !18
  %167 = icmp ugt i64 %164, %166
  br i1 %167, label %168, label %171

168:                                              ; preds = %157
  %169 = getelementptr inbounds nuw i8, ptr %161, i64 24
  %170 = load ptr, ptr %169, align 8, !tbaa !13
  call void %170(ptr noundef nonnull align 8 dereferenceable(32) %161, i64 noundef %164)
  br label %171

171:                                              ; preds = %157, %168
  %172 = and i32 %142, 16777215
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds nuw i8, ptr %161, i64 24
  br label %285

176:                                              ; preds = %296, %171
  %177 = icmp eq i64 %143, 64
  br i1 %177, label %330, label %178

178:                                              ; preds = %176
  %179 = getelementptr inbounds nuw i8, ptr %161, i64 24
  br label %180

180:                                              ; preds = %261, %178
  %181 = phi i64 [ %143, %178 ], [ %264, %261 ]
  %182 = getelementptr inbounds i8, ptr %5, i64 %181
  %183 = sub nsw i64 64, %181
  %184 = icmp slt i64 %181, 65
  br i1 %184, label %186, label %185

185:                                              ; preds = %180
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

186:                                              ; preds = %180
  %187 = load i64, ptr %162, align 8, !tbaa !37
  %188 = add i64 %187, %183
  %189 = load i64, ptr %165, align 8, !tbaa !18
  %190 = icmp ugt i64 %188, %189
  br i1 %190, label %191, label %195

191:                                              ; preds = %186
  %192 = load ptr, ptr %179, align 8, !tbaa !13
  call void %192(ptr noundef nonnull align 8 dereferenceable(32) %161, i64 noundef %188)
  %193 = load i64, ptr %165, align 8, !tbaa !18
  %194 = load i64, ptr %162, align 8, !tbaa !37
  br label %195

195:                                              ; preds = %191, %186
  %196 = phi i64 [ %187, %186 ], [ %194, %191 ]
  %197 = phi i64 [ %189, %186 ], [ %193, %191 ]
  %198 = sub i64 %197, %196
  %199 = call i64 @llvm.umin.i64(i64 %198, i64 %183)
  %200 = load ptr, ptr %161, align 8, !tbaa !17
  %201 = ptrtoint ptr %200 to i64
  %202 = getelementptr inbounds nuw i8, ptr %200, i64 %196
  %203 = icmp eq i64 %199, 0
  br i1 %203, label %261, label %204

204:                                              ; preds = %195
  %205 = icmp ult i64 %199, 4
  br i1 %205, label %206, label %223

206:                                              ; preds = %244, %257, %223, %204
  %207 = phi i64 [ %231, %244 ], [ 0, %204 ], [ 0, %223 ], [ %249, %257 ]
  %208 = and i64 %199, 3
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %219, label %210

210:                                              ; preds = %206, %210
  %211 = phi i64 [ %216, %210 ], [ %207, %206 ]
  %212 = phi i64 [ %217, %210 ], [ 0, %206 ]
  %213 = getelementptr inbounds nuw i8, ptr %182, i64 %211
  %214 = load i8, ptr %213, align 1, !tbaa !10
  %215 = getelementptr inbounds nuw i8, ptr %202, i64 %211
  store i8 %214, ptr %215, align 1, !tbaa !10
  %216 = add nuw i64 %211, 1
  %217 = add i64 %212, 1
  %218 = icmp eq i64 %217, %208
  br i1 %218, label %219, label %210, !llvm.loop !537

219:                                              ; preds = %210, %206
  %220 = phi i64 [ %207, %206 ], [ %216, %210 ]
  %221 = sub i64 %207, %199
  %222 = icmp ugt i64 %221, -4
  br i1 %222, label %259, label %266

223:                                              ; preds = %204
  %224 = add i64 %196, %201
  %225 = add i64 %181, %6
  %226 = sub i64 %224, %225
  %227 = icmp ult i64 %226, 32
  br i1 %227, label %206, label %228

228:                                              ; preds = %223
  %229 = icmp ult i64 %199, 32
  br i1 %229, label %247, label %230

230:                                              ; preds = %228
  %231 = and i64 %199, -32
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %240, %232 ]
  %234 = getelementptr inbounds nuw i8, ptr %182, i64 %233
  %235 = getelementptr inbounds nuw i8, ptr %234, i64 16
  %236 = load <16 x i8>, ptr %234, align 1, !tbaa !10
  %237 = load <16 x i8>, ptr %235, align 1, !tbaa !10
  %238 = getelementptr inbounds nuw i8, ptr %202, i64 %233
  %239 = getelementptr inbounds nuw i8, ptr %238, i64 16
  store <16 x i8> %236, ptr %238, align 1, !tbaa !10
  store <16 x i8> %237, ptr %239, align 1, !tbaa !10
  %240 = add nuw i64 %233, 32
  %241 = icmp eq i64 %240, %231
  br i1 %241, label %242, label %232, !llvm.loop !538

242:                                              ; preds = %232
  %243 = icmp eq i64 %199, %231
  br i1 %243, label %259, label %244

244:                                              ; preds = %242
  %245 = and i64 %199, 28
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %206, label %247

247:                                              ; preds = %244, %228
  %248 = phi i64 [ %231, %244 ], [ 0, %228 ]
  %249 = and i64 %199, -4
  br label %250

250:                                              ; preds = %250, %247
  %251 = phi i64 [ %248, %247 ], [ %255, %250 ]
  %252 = getelementptr inbounds nuw i8, ptr %182, i64 %251
  %253 = load <4 x i8>, ptr %252, align 1, !tbaa !10
  %254 = getelementptr inbounds nuw i8, ptr %202, i64 %251
  store <4 x i8> %253, ptr %254, align 1, !tbaa !10
  %255 = add nuw i64 %251, 4
  %256 = icmp eq i64 %255, %249
  br i1 %256, label %257, label %250, !llvm.loop !539

257:                                              ; preds = %250
  %258 = icmp eq i64 %199, %249
  br i1 %258, label %259, label %206

259:                                              ; preds = %219, %266, %257, %242
  %260 = load i64, ptr %162, align 8, !tbaa !37
  br label %261

261:                                              ; preds = %259, %195
  %262 = phi i64 [ %260, %259 ], [ %196, %195 ]
  %263 = add i64 %262, %199
  store i64 %263, ptr %162, align 8, !tbaa !37
  %264 = add nsw i64 %199, %181
  %265 = icmp eq i64 %264, 64
  br i1 %265, label %330, label %180, !llvm.loop !77

266:                                              ; preds = %219, %266
  %267 = phi i64 [ %283, %266 ], [ %220, %219 ]
  %268 = getelementptr inbounds nuw i8, ptr %182, i64 %267
  %269 = load i8, ptr %268, align 1, !tbaa !10
  %270 = getelementptr inbounds nuw i8, ptr %202, i64 %267
  store i8 %269, ptr %270, align 1, !tbaa !10
  %271 = add nuw i64 %267, 1
  %272 = getelementptr inbounds nuw i8, ptr %182, i64 %271
  %273 = load i8, ptr %272, align 1, !tbaa !10
  %274 = getelementptr inbounds nuw i8, ptr %202, i64 %271
  store i8 %273, ptr %274, align 1, !tbaa !10
  %275 = add nuw i64 %267, 2
  %276 = getelementptr inbounds nuw i8, ptr %182, i64 %275
  %277 = load i8, ptr %276, align 1, !tbaa !10
  %278 = getelementptr inbounds nuw i8, ptr %202, i64 %275
  store i8 %277, ptr %278, align 1, !tbaa !10
  %279 = add nuw i64 %267, 3
  %280 = getelementptr inbounds nuw i8, ptr %182, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !10
  %282 = getelementptr inbounds nuw i8, ptr %202, i64 %279
  store i8 %281, ptr %282, align 1, !tbaa !10
  %283 = add nuw i64 %267, 4
  %284 = icmp eq i64 %283, %199
  br i1 %284, label %259, label %266, !llvm.loop !540

285:                                              ; preds = %174, %296
  %286 = phi i32 [ %172, %174 ], [ %301, %296 ]
  %287 = trunc i32 %286 to i8
  %288 = load i64, ptr %162, align 8, !tbaa !37
  %289 = add i64 %288, 1
  %290 = load i64, ptr %165, align 8, !tbaa !18
  %291 = icmp ugt i64 %289, %290
  br i1 %291, label %292, label %296

292:                                              ; preds = %285
  %293 = load ptr, ptr %175, align 8, !tbaa !13
  call void %293(ptr noundef nonnull align 8 dereferenceable(32) %161, i64 noundef %289)
  %294 = load i64, ptr %162, align 8, !tbaa !37
  %295 = add i64 %294, 1
  br label %296

296:                                              ; preds = %285, %292
  %297 = phi i64 [ %289, %285 ], [ %295, %292 ]
  %298 = phi i64 [ %288, %285 ], [ %294, %292 ]
  %299 = load ptr, ptr %161, align 8, !tbaa !17
  store i64 %297, ptr %162, align 8, !tbaa !37
  %300 = getelementptr inbounds nuw i8, ptr %299, i64 %298
  store i8 %287, ptr %300, align 1, !tbaa !10
  %301 = lshr i32 %286, 8
  %302 = icmp samesign ult i32 %286, 256
  br i1 %302, label %176, label %285, !llvm.loop !541

303:                                              ; preds = %141
  %304 = lshr i32 %142, 24
  %305 = icmp sgt i32 %146, -1
  br i1 %305, label %307, label %306

306:                                              ; preds = %303
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

307:                                              ; preds = %303
  %308 = add nuw i32 %146, %304
  %309 = and i32 %12, 56
  %310 = icmp eq i32 %309, 32
  br i1 %310, label %311, label %317

311:                                              ; preds = %307
  %312 = icmp sgt i32 %148, -1
  br i1 %312, label %314, label %313

313:                                              ; preds = %311
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

314:                                              ; preds = %311
  %315 = call i32 @llvm.usub.sat.i32(i32 %148, i32 %308)
  %316 = call i32 @llvm.umax.i32(i32 %148, i32 %308)
  br label %322

317:                                              ; preds = %307
  %318 = icmp sgt i32 %150, %146
  br i1 %318, label %319, label %322

319:                                              ; preds = %317
  %320 = add nuw i32 %150, %304
  %321 = sub nsw i32 %150, %146
  br label %322

322:                                              ; preds = %314, %317, %319
  %323 = phi i32 [ %321, %319 ], [ 0, %317 ], [ %315, %314 ]
  %324 = phi i32 [ %320, %319 ], [ %308, %317 ], [ %316, %314 ]
  %325 = zext i32 %324 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #30
  store i32 %142, ptr %7, align 8, !tbaa !542
  %326 = getelementptr inbounds nuw i8, ptr %7, i64 4
  store i32 %323, ptr %326, align 4, !tbaa !544
  %327 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store ptr %144, ptr %327, align 8, !tbaa !545
  %328 = getelementptr inbounds nuw i8, ptr %7, i64 16
  store ptr %8, ptr %328, align 8, !tbaa !546
  %329 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_yEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %325, i64 noundef %325, ptr noundef nonnull align 8 dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #30
  br label %330

330:                                              ; preds = %261, %176, %322, %134
  %331 = phi i64 [ %140, %134 ], [ %329, %322 ], [ %0, %176 ], [ %0, %261 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #30
  ret i64 %331
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_yEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load i32, ptr %0, align 8, !tbaa !542
  %5 = and i32 %4, 16777215
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %9 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %152

11:                                               ; preds = %163, %2
  %12 = getelementptr inbounds nuw i8, ptr %0, i64 4
  %13 = load i32, ptr %12, align 4, !tbaa !544
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %17 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %19

19:                                               ; preds = %29, %15
  %20 = phi i32 [ 0, %15 ], [ %34, %29 ]
  %21 = load i64, ptr %16, align 8, !tbaa !37
  %22 = add i64 %21, 1
  %23 = load i64, ptr %17, align 8, !tbaa !18
  %24 = icmp ugt i64 %22, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %26(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %22)
  %27 = load i64, ptr %16, align 8, !tbaa !37
  %28 = add i64 %27, 1
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i64 [ %22, %19 ], [ %28, %25 ]
  %31 = phi i64 [ %21, %19 ], [ %27, %25 ]
  %32 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %30, ptr %16, align 8, !tbaa !37
  %33 = getelementptr inbounds nuw i8, ptr %32, i64 %31
  store i8 48, ptr %33, align 1, !tbaa !10
  %34 = add nuw i32 %20, 1
  %35 = icmp eq i32 %34, %13
  br i1 %35, label %36, label %19, !llvm.loop !183

36:                                               ; preds = %29, %11
  %37 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %38 = load ptr, ptr %37, align 8, !tbaa !545
  %39 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %40 = load ptr, ptr %39, align 8, !tbaa !546
  %41 = icmp eq ptr %38, %40
  br i1 %41, label %151, label %42

42:                                               ; preds = %36
  %43 = ptrtoint ptr %40 to i64
  %44 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %45 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %46 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %47

47:                                               ; preds = %127, %42
  %48 = phi ptr [ %38, %42 ], [ %130, %127 ]
  %49 = ptrtoint ptr %48 to i64
  %50 = sub i64 %43, %49
  %51 = icmp sgt i64 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

53:                                               ; preds = %47
  %54 = load i64, ptr %44, align 8, !tbaa !37
  %55 = add i64 %54, %50
  %56 = load i64, ptr %45, align 8, !tbaa !18
  %57 = icmp ugt i64 %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = load ptr, ptr %46, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %55)
  %60 = load i64, ptr %45, align 8, !tbaa !18
  %61 = load i64, ptr %44, align 8, !tbaa !37
  br label %62

62:                                               ; preds = %58, %53
  %63 = phi i64 [ %54, %53 ], [ %61, %58 ]
  %64 = phi i64 [ %56, %53 ], [ %60, %58 ]
  %65 = sub i64 %64, %63
  %66 = tail call i64 @llvm.umin.i64(i64 %65, i64 %50)
  %67 = load ptr, ptr %3, align 8, !tbaa !17
  %68 = ptrtoint ptr %67 to i64
  %69 = getelementptr inbounds nuw i8, ptr %67, i64 %63
  %70 = icmp eq i64 %66, 0
  br i1 %70, label %127, label %71

71:                                               ; preds = %62
  %72 = icmp ult i64 %66, 4
  br i1 %72, label %73, label %90

73:                                               ; preds = %110, %123, %90, %71
  %74 = phi i64 [ %97, %110 ], [ 0, %71 ], [ 0, %90 ], [ %115, %123 ]
  %75 = and i64 %66, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %73, %77
  %78 = phi i64 [ %83, %77 ], [ %74, %73 ]
  %79 = phi i64 [ %84, %77 ], [ 0, %73 ]
  %80 = getelementptr inbounds nuw i8, ptr %48, i64 %78
  %81 = load i8, ptr %80, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %69, i64 %78
  store i8 %81, ptr %82, align 1, !tbaa !10
  %83 = add nuw i64 %78, 1
  %84 = add i64 %79, 1
  %85 = icmp eq i64 %84, %75
  br i1 %85, label %86, label %77, !llvm.loop !547

86:                                               ; preds = %77, %73
  %87 = phi i64 [ %74, %73 ], [ %83, %77 ]
  %88 = sub nsw i64 %74, %66
  %89 = icmp ugt i64 %88, -4
  br i1 %89, label %125, label %132

90:                                               ; preds = %71
  %91 = add i64 %63, %68
  %92 = sub i64 %91, %49
  %93 = icmp ult i64 %92, 32
  br i1 %93, label %73, label %94

94:                                               ; preds = %90
  %95 = icmp ult i64 %66, 32
  br i1 %95, label %113, label %96

96:                                               ; preds = %94
  %97 = and i64 %66, 9223372036854775776
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %106, %98 ]
  %100 = getelementptr inbounds nuw i8, ptr %48, i64 %99
  %101 = getelementptr inbounds nuw i8, ptr %100, i64 16
  %102 = load <16 x i8>, ptr %100, align 1, !tbaa !10
  %103 = load <16 x i8>, ptr %101, align 1, !tbaa !10
  %104 = getelementptr inbounds nuw i8, ptr %69, i64 %99
  %105 = getelementptr inbounds nuw i8, ptr %104, i64 16
  store <16 x i8> %102, ptr %104, align 1, !tbaa !10
  store <16 x i8> %103, ptr %105, align 1, !tbaa !10
  %106 = add nuw i64 %99, 32
  %107 = icmp eq i64 %106, %97
  br i1 %107, label %108, label %98, !llvm.loop !548

108:                                              ; preds = %98
  %109 = icmp eq i64 %66, %97
  br i1 %109, label %125, label %110

110:                                              ; preds = %108
  %111 = and i64 %66, 28
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %73, label %113

113:                                              ; preds = %110, %94
  %114 = phi i64 [ %97, %110 ], [ 0, %94 ]
  %115 = and i64 %66, 9223372036854775804
  br label %116

116:                                              ; preds = %116, %113
  %117 = phi i64 [ %114, %113 ], [ %121, %116 ]
  %118 = getelementptr inbounds nuw i8, ptr %48, i64 %117
  %119 = load <4 x i8>, ptr %118, align 1, !tbaa !10
  %120 = getelementptr inbounds nuw i8, ptr %69, i64 %117
  store <4 x i8> %119, ptr %120, align 1, !tbaa !10
  %121 = add nuw i64 %117, 4
  %122 = icmp eq i64 %121, %115
  br i1 %122, label %123, label %116, !llvm.loop !549

123:                                              ; preds = %116
  %124 = icmp eq i64 %66, %115
  br i1 %124, label %125, label %73

125:                                              ; preds = %86, %132, %123, %108
  %126 = load i64, ptr %44, align 8, !tbaa !37
  br label %127

127:                                              ; preds = %125, %62
  %128 = phi i64 [ %126, %125 ], [ %63, %62 ]
  %129 = add i64 %128, %66
  store i64 %129, ptr %44, align 8, !tbaa !37
  %130 = getelementptr inbounds nuw i8, ptr %48, i64 %66
  %131 = icmp eq ptr %130, %40
  br i1 %131, label %151, label %47, !llvm.loop !77

132:                                              ; preds = %86, %132
  %133 = phi i64 [ %149, %132 ], [ %87, %86 ]
  %134 = getelementptr inbounds nuw i8, ptr %48, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !10
  %136 = getelementptr inbounds nuw i8, ptr %69, i64 %133
  store i8 %135, ptr %136, align 1, !tbaa !10
  %137 = add nuw i64 %133, 1
  %138 = getelementptr inbounds nuw i8, ptr %48, i64 %137
  %139 = load i8, ptr %138, align 1, !tbaa !10
  %140 = getelementptr inbounds nuw i8, ptr %69, i64 %137
  store i8 %139, ptr %140, align 1, !tbaa !10
  %141 = add nuw i64 %133, 2
  %142 = getelementptr inbounds nuw i8, ptr %48, i64 %141
  %143 = load i8, ptr %142, align 1, !tbaa !10
  %144 = getelementptr inbounds nuw i8, ptr %69, i64 %141
  store i8 %143, ptr %144, align 1, !tbaa !10
  %145 = add nuw i64 %133, 3
  %146 = getelementptr inbounds nuw i8, ptr %48, i64 %145
  %147 = load i8, ptr %146, align 1, !tbaa !10
  %148 = getelementptr inbounds nuw i8, ptr %69, i64 %145
  store i8 %147, ptr %148, align 1, !tbaa !10
  %149 = add nuw i64 %133, 4
  %150 = icmp eq i64 %149, %66
  br i1 %150, label %125, label %132, !llvm.loop !550

151:                                              ; preds = %127, %36
  ret i64 %1

152:                                              ; preds = %7, %163
  %153 = phi i32 [ %5, %7 ], [ %168, %163 ]
  %154 = trunc i32 %153 to i8
  %155 = load i64, ptr %8, align 8, !tbaa !37
  %156 = add i64 %155, 1
  %157 = load i64, ptr %9, align 8, !tbaa !18
  %158 = icmp ugt i64 %156, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %152
  %160 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void %160(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %156)
  %161 = load i64, ptr %8, align 8, !tbaa !37
  %162 = add i64 %161, 1
  br label %163

163:                                              ; preds = %152, %159
  %164 = phi i64 [ %156, %152 ], [ %162, %159 ]
  %165 = phi i64 [ %155, %152 ], [ %161, %159 ]
  %166 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %164, ptr %8, align 8, !tbaa !37
  %167 = getelementptr inbounds nuw i8, ptr %166, i64 %165
  store i8 %154, ptr %167, align 1, !tbaa !10
  %168 = lshr i32 %153, 8
  %169 = icmp samesign ult i32 %153, 256
  br i1 %169, label %11, label %152, !llvm.loop !551
}

; Function Attrs: mustprogress noinline uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #17 comdat {
  %4 = alloca %"struct.fmt::v11::detail::write_int_arg.20", align 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %4, ptr noundef nonnull align 16 dereferenceable(32) %1, i64 32, i1 false), !tbaa.struct !552
  %5 = call i64 @_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, ptr noundef nonnull %4, ptr noundef nonnull align 4 dereferenceable(16) %2)
  ret i64 %5
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #5 comdat {
  %4 = alloca %class.anon.12, align 1
  %5 = alloca [128 x i8], align 16
  %6 = ptrtoint ptr %5 to i64
  %7 = alloca %class.anon.61, align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %5) #30
  %8 = getelementptr inbounds nuw i8, ptr %5, i64 128
  %9 = load i128, ptr %1, align 16, !tbaa !504
  %10 = getelementptr inbounds nuw i8, ptr %1, i64 16
  %11 = load i32, ptr %10, align 16, !tbaa !506
  %12 = load i32, ptr %2, align 4, !tbaa !53
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 7
  switch i8 %14, label %15 [
    i8 0, label %16
    i8 3, label %16
    i8 4, label %80
    i8 5, label %105
    i8 6, label %131
    i8 7, label %153
  ]

15:                                               ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 2030, ptr noundef nonnull @.str.14) #31
  unreachable

16:                                               ; preds = %3, %3
  %17 = icmp ult i128 %9, 10
  %18 = trunc i128 %9 to i8
  br i1 %17, label %73, label %19

19:                                               ; preds = %16, %33
  %20 = phi i32 [ %35, %33 ], [ 1, %16 ]
  %21 = phi i128 [ %34, %33 ], [ %9, %16 ]
  %22 = icmp ult i128 %21, 100
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = add nuw nsw i32 %20, 1
  br label %37

25:                                               ; preds = %19
  %26 = icmp ult i128 %21, 1000
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = add nuw nsw i32 %20, 2
  br label %37

29:                                               ; preds = %25
  %30 = icmp ult i128 %21, 10000
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = add nuw nsw i32 %20, 3
  br label %37

33:                                               ; preds = %29
  %34 = udiv i128 %21, 10000
  %35 = add nuw nsw i32 %20, 4
  %36 = icmp ult i128 %21, 100000
  br i1 %36, label %37, label %19, !llvm.loop !80

37:                                               ; preds = %33, %31, %27, %23
  %38 = phi i32 [ %24, %23 ], [ %28, %27 ], [ %32, %31 ], [ %35, %33 ]
  %39 = icmp sgt i32 %38, 128
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 1181, ptr noundef nonnull @.str.17) #31
  unreachable

41:                                               ; preds = %37
  %42 = icmp ugt i128 %9, 99
  br i1 %42, label %43, label %60

43:                                               ; preds = %41, %43
  %44 = phi i32 [ %46, %43 ], [ 128, %41 ]
  %45 = phi i128 [ %50, %43 ], [ %9, %41 ]
  %46 = add i32 %44, -2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds nuw i8, ptr %5, i64 %47
  %49 = freeze i128 %45
  %50 = udiv i128 %49, 100
  %51 = mul i128 %50, 100
  %52 = sub i128 %49, %51
  %53 = trunc nuw nsw i128 %52 to i64
  %54 = shl nuw nsw i64 %53, 1
  %55 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %54
  %56 = load i16, ptr %55, align 2
  store i16 %56, ptr %48, align 2
  %57 = icmp ugt i128 %45, 9999
  br i1 %57, label %43, label %58, !llvm.loop !81

58:                                               ; preds = %43
  %59 = trunc nuw i128 %50 to i8
  br label %60

60:                                               ; preds = %58, %41
  %61 = phi i8 [ %59, %58 ], [ %18, %41 ]
  %62 = phi i128 [ %50, %58 ], [ %9, %41 ]
  %63 = phi i32 [ %46, %58 ], [ 128, %41 ]
  %64 = icmp samesign ugt i128 %62, 9
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = add i32 %63, -2
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds nuw i8, ptr %5, i64 %67
  %69 = trunc nuw i128 %62 to i64
  %70 = shl nuw nsw i64 %69, 1
  %71 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %70
  %72 = load i16, ptr %71, align 2
  store i16 %72, ptr %68, align 1
  br label %160

73:                                               ; preds = %16, %60
  %74 = phi i32 [ %63, %60 ], [ 128, %16 ]
  %75 = phi i8 [ %61, %60 ], [ %18, %16 ]
  %76 = or disjoint i8 %75, 48
  %77 = add i32 %74, -1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds nuw i8, ptr %5, i64 %78
  store i8 %76, ptr %79, align 1, !tbaa !10
  br label %160

80:                                               ; preds = %3
  %81 = and i32 %12, 4096
  %82 = icmp eq i32 %81, 0
  %83 = select i1 %82, ptr @.str.24, ptr @.str.23
  br label %84

84:                                               ; preds = %84, %80
  %85 = phi i128 [ %93, %84 ], [ %9, %80 ]
  %86 = phi i64 [ %91, %84 ], [ 128, %80 ]
  %87 = trunc i128 %85 to i64
  %88 = and i64 %87, 15
  %89 = getelementptr inbounds nuw i8, ptr %83, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !10
  %91 = add nsw i64 %86, -1
  %92 = getelementptr inbounds i8, ptr %5, i64 %91
  store i8 %90, ptr %92, align 1, !tbaa !10
  %93 = lshr i128 %85, 4
  %94 = icmp ult i128 %85, 16
  br i1 %94, label %95, label %84, !llvm.loop !159

95:                                               ; preds = %84
  %96 = and i32 %12, 8192
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %160, label %98

98:                                               ; preds = %95
  %99 = select i1 %82, i32 30768, i32 22576
  %100 = icmp eq i32 %11, 0
  %101 = shl nuw nsw i32 %99, 8
  %102 = select i1 %100, i32 %99, i32 %101
  %103 = or i32 %102, %11
  %104 = add i32 %103, 33554432
  br label %160

105:                                              ; preds = %3, %105
  %106 = phi i128 [ %113, %105 ], [ %9, %3 ]
  %107 = phi i64 [ %111, %105 ], [ 128, %3 ]
  %108 = trunc i128 %106 to i8
  %109 = and i8 %108, 7
  %110 = or disjoint i8 %109, 48
  %111 = add nsw i64 %107, -1
  %112 = getelementptr inbounds i8, ptr %5, i64 %111
  store i8 %110, ptr %112, align 1, !tbaa !10
  %113 = lshr i128 %106, 3
  %114 = icmp ult i128 %106, 8
  br i1 %114, label %115, label %105, !llvm.loop !159

115:                                              ; preds = %105
  %116 = and i32 %12, 8192
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %160, label %118

118:                                              ; preds = %115
  %119 = sub nsw i64 129, %107
  %120 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %121 = load i32, ptr %120, align 4, !tbaa !55
  %122 = sext i32 %121 to i64
  %123 = icmp sge i64 %119, %122
  %124 = icmp ne i128 %9, 0
  %125 = select i1 %123, i1 %124, i1 false
  br i1 %125, label %126, label %160

126:                                              ; preds = %118
  %127 = icmp eq i32 %11, 0
  %128 = select i1 %127, i32 48, i32 12288
  %129 = or i32 %128, %11
  %130 = add i32 %129, 16777216
  br label %160

131:                                              ; preds = %3, %131
  %132 = phi i128 [ %139, %131 ], [ %9, %3 ]
  %133 = phi i64 [ %137, %131 ], [ 128, %3 ]
  %134 = trunc i128 %132 to i8
  %135 = and i8 %134, 1
  %136 = or disjoint i8 %135, 48
  %137 = add nsw i64 %133, -1
  %138 = getelementptr inbounds i8, ptr %5, i64 %137
  store i8 %136, ptr %138, align 1, !tbaa !10
  %139 = lshr i128 %132, 1
  %140 = icmp ult i128 %132, 2
  br i1 %140, label %141, label %131, !llvm.loop !159

141:                                              ; preds = %131
  %142 = and i32 %12, 8192
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141
  %145 = and i32 %12, 4096
  %146 = icmp eq i32 %145, 0
  %147 = select i1 %146, i32 25136, i32 16944
  %148 = icmp eq i32 %11, 0
  %149 = shl nuw nsw i32 %147, 8
  %150 = select i1 %148, i32 %147, i32 %149
  %151 = or i32 %150, %11
  %152 = add i32 %151, 33554432
  br label %160

153:                                              ; preds = %3
  %154 = trunc i128 %9 to i8
  %155 = and i32 %12, 7
  %156 = icmp eq i32 %155, 1
  %157 = zext i1 %156 to i8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %4) #30
  store i8 %157, ptr %4, align 1, !tbaa !112
  %158 = getelementptr inbounds nuw i8, ptr %4, i64 1
  store i8 %154, ptr %158, align 1, !tbaa !115
  %159 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef 1, i64 noundef 1, ptr noundef nonnull align 1 dereferenceable(2) %4)
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %4) #30
  br label %349

160:                                              ; preds = %73, %65, %115, %118, %126, %141, %144, %95, %98
  %161 = phi i32 [ %152, %144 ], [ %11, %141 ], [ %130, %126 ], [ %11, %118 ], [ %11, %115 ], [ %104, %98 ], [ %11, %95 ], [ %11, %65 ], [ %11, %73 ]
  %162 = phi i64 [ %137, %144 ], [ %137, %141 ], [ %111, %126 ], [ %111, %118 ], [ %111, %115 ], [ %91, %98 ], [ %91, %95 ], [ %67, %65 ], [ %78, %73 ]
  %163 = getelementptr inbounds i8, ptr %5, i64 %162
  %164 = trunc i64 %162 to i32
  %165 = sub i32 128, %164
  %166 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %167 = load i32, ptr %166, align 4, !tbaa !125
  %168 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %169 = load i32, ptr %168, align 4, !tbaa !55
  %170 = add nsw i32 %169, 1
  %171 = or i32 %170, %167
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %322

173:                                              ; preds = %160
  %174 = icmp sgt i32 %165, -1
  br i1 %174, label %176, label %175

175:                                              ; preds = %173
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

176:                                              ; preds = %173
  %177 = lshr i32 %161, 24
  %178 = add nuw i32 %165, %177
  %179 = zext i32 %178 to i64
  %180 = inttoptr i64 %0 to ptr
  %181 = getelementptr inbounds nuw i8, ptr %180, i64 8
  %182 = load i64, ptr %181, align 8, !tbaa !37
  %183 = add i64 %182, %179
  %184 = getelementptr inbounds nuw i8, ptr %180, i64 16
  %185 = load i64, ptr %184, align 8, !tbaa !18
  %186 = icmp ugt i64 %183, %185
  br i1 %186, label %187, label %190

187:                                              ; preds = %176
  %188 = getelementptr inbounds nuw i8, ptr %180, i64 24
  %189 = load ptr, ptr %188, align 8, !tbaa !13
  call void %189(ptr noundef nonnull align 8 dereferenceable(32) %180, i64 noundef %183)
  br label %190

190:                                              ; preds = %176, %187
  %191 = and i32 %161, 16777215
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds nuw i8, ptr %180, i64 24
  br label %304

195:                                              ; preds = %315, %190
  %196 = icmp eq i64 %162, 128
  br i1 %196, label %349, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds nuw i8, ptr %180, i64 24
  br label %199

199:                                              ; preds = %280, %197
  %200 = phi i64 [ %162, %197 ], [ %283, %280 ]
  %201 = getelementptr inbounds i8, ptr %5, i64 %200
  %202 = sub nsw i64 128, %200
  %203 = icmp slt i64 %200, 129
  br i1 %203, label %205, label %204

204:                                              ; preds = %199
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

205:                                              ; preds = %199
  %206 = load i64, ptr %181, align 8, !tbaa !37
  %207 = add i64 %206, %202
  %208 = load i64, ptr %184, align 8, !tbaa !18
  %209 = icmp ugt i64 %207, %208
  br i1 %209, label %210, label %214

210:                                              ; preds = %205
  %211 = load ptr, ptr %198, align 8, !tbaa !13
  call void %211(ptr noundef nonnull align 8 dereferenceable(32) %180, i64 noundef %207)
  %212 = load i64, ptr %184, align 8, !tbaa !18
  %213 = load i64, ptr %181, align 8, !tbaa !37
  br label %214

214:                                              ; preds = %210, %205
  %215 = phi i64 [ %206, %205 ], [ %213, %210 ]
  %216 = phi i64 [ %208, %205 ], [ %212, %210 ]
  %217 = sub i64 %216, %215
  %218 = call i64 @llvm.umin.i64(i64 %217, i64 %202)
  %219 = load ptr, ptr %180, align 8, !tbaa !17
  %220 = ptrtoint ptr %219 to i64
  %221 = getelementptr inbounds nuw i8, ptr %219, i64 %215
  %222 = icmp eq i64 %218, 0
  br i1 %222, label %280, label %223

223:                                              ; preds = %214
  %224 = icmp ult i64 %218, 4
  br i1 %224, label %225, label %242

225:                                              ; preds = %263, %276, %242, %223
  %226 = phi i64 [ %250, %263 ], [ 0, %223 ], [ 0, %242 ], [ %268, %276 ]
  %227 = and i64 %218, 3
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %238, label %229

229:                                              ; preds = %225, %229
  %230 = phi i64 [ %235, %229 ], [ %226, %225 ]
  %231 = phi i64 [ %236, %229 ], [ 0, %225 ]
  %232 = getelementptr inbounds nuw i8, ptr %201, i64 %230
  %233 = load i8, ptr %232, align 1, !tbaa !10
  %234 = getelementptr inbounds nuw i8, ptr %221, i64 %230
  store i8 %233, ptr %234, align 1, !tbaa !10
  %235 = add nuw i64 %230, 1
  %236 = add i64 %231, 1
  %237 = icmp eq i64 %236, %227
  br i1 %237, label %238, label %229, !llvm.loop !553

238:                                              ; preds = %229, %225
  %239 = phi i64 [ %226, %225 ], [ %235, %229 ]
  %240 = sub i64 %226, %218
  %241 = icmp ugt i64 %240, -4
  br i1 %241, label %278, label %285

242:                                              ; preds = %223
  %243 = add i64 %215, %220
  %244 = add i64 %200, %6
  %245 = sub i64 %243, %244
  %246 = icmp ult i64 %245, 32
  br i1 %246, label %225, label %247

247:                                              ; preds = %242
  %248 = icmp ult i64 %218, 32
  br i1 %248, label %266, label %249

249:                                              ; preds = %247
  %250 = and i64 %218, -32
  br label %251

251:                                              ; preds = %251, %249
  %252 = phi i64 [ 0, %249 ], [ %259, %251 ]
  %253 = getelementptr inbounds nuw i8, ptr %201, i64 %252
  %254 = getelementptr inbounds nuw i8, ptr %253, i64 16
  %255 = load <16 x i8>, ptr %253, align 1, !tbaa !10
  %256 = load <16 x i8>, ptr %254, align 1, !tbaa !10
  %257 = getelementptr inbounds nuw i8, ptr %221, i64 %252
  %258 = getelementptr inbounds nuw i8, ptr %257, i64 16
  store <16 x i8> %255, ptr %257, align 1, !tbaa !10
  store <16 x i8> %256, ptr %258, align 1, !tbaa !10
  %259 = add nuw i64 %252, 32
  %260 = icmp eq i64 %259, %250
  br i1 %260, label %261, label %251, !llvm.loop !554

261:                                              ; preds = %251
  %262 = icmp eq i64 %218, %250
  br i1 %262, label %278, label %263

263:                                              ; preds = %261
  %264 = and i64 %218, 28
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %225, label %266

266:                                              ; preds = %263, %247
  %267 = phi i64 [ %250, %263 ], [ 0, %247 ]
  %268 = and i64 %218, -4
  br label %269

269:                                              ; preds = %269, %266
  %270 = phi i64 [ %267, %266 ], [ %274, %269 ]
  %271 = getelementptr inbounds nuw i8, ptr %201, i64 %270
  %272 = load <4 x i8>, ptr %271, align 1, !tbaa !10
  %273 = getelementptr inbounds nuw i8, ptr %221, i64 %270
  store <4 x i8> %272, ptr %273, align 1, !tbaa !10
  %274 = add nuw i64 %270, 4
  %275 = icmp eq i64 %274, %268
  br i1 %275, label %276, label %269, !llvm.loop !555

276:                                              ; preds = %269
  %277 = icmp eq i64 %218, %268
  br i1 %277, label %278, label %225

278:                                              ; preds = %238, %285, %276, %261
  %279 = load i64, ptr %181, align 8, !tbaa !37
  br label %280

280:                                              ; preds = %278, %214
  %281 = phi i64 [ %279, %278 ], [ %215, %214 ]
  %282 = add i64 %281, %218
  store i64 %282, ptr %181, align 8, !tbaa !37
  %283 = add nsw i64 %218, %200
  %284 = icmp eq i64 %283, 128
  br i1 %284, label %349, label %199, !llvm.loop !77

285:                                              ; preds = %238, %285
  %286 = phi i64 [ %302, %285 ], [ %239, %238 ]
  %287 = getelementptr inbounds nuw i8, ptr %201, i64 %286
  %288 = load i8, ptr %287, align 1, !tbaa !10
  %289 = getelementptr inbounds nuw i8, ptr %221, i64 %286
  store i8 %288, ptr %289, align 1, !tbaa !10
  %290 = add nuw i64 %286, 1
  %291 = getelementptr inbounds nuw i8, ptr %201, i64 %290
  %292 = load i8, ptr %291, align 1, !tbaa !10
  %293 = getelementptr inbounds nuw i8, ptr %221, i64 %290
  store i8 %292, ptr %293, align 1, !tbaa !10
  %294 = add nuw i64 %286, 2
  %295 = getelementptr inbounds nuw i8, ptr %201, i64 %294
  %296 = load i8, ptr %295, align 1, !tbaa !10
  %297 = getelementptr inbounds nuw i8, ptr %221, i64 %294
  store i8 %296, ptr %297, align 1, !tbaa !10
  %298 = add nuw i64 %286, 3
  %299 = getelementptr inbounds nuw i8, ptr %201, i64 %298
  %300 = load i8, ptr %299, align 1, !tbaa !10
  %301 = getelementptr inbounds nuw i8, ptr %221, i64 %298
  store i8 %300, ptr %301, align 1, !tbaa !10
  %302 = add nuw i64 %286, 4
  %303 = icmp eq i64 %302, %218
  br i1 %303, label %278, label %285, !llvm.loop !556

304:                                              ; preds = %193, %315
  %305 = phi i32 [ %191, %193 ], [ %320, %315 ]
  %306 = trunc i32 %305 to i8
  %307 = load i64, ptr %181, align 8, !tbaa !37
  %308 = add i64 %307, 1
  %309 = load i64, ptr %184, align 8, !tbaa !18
  %310 = icmp ugt i64 %308, %309
  br i1 %310, label %311, label %315

311:                                              ; preds = %304
  %312 = load ptr, ptr %194, align 8, !tbaa !13
  call void %312(ptr noundef nonnull align 8 dereferenceable(32) %180, i64 noundef %308)
  %313 = load i64, ptr %181, align 8, !tbaa !37
  %314 = add i64 %313, 1
  br label %315

315:                                              ; preds = %304, %311
  %316 = phi i64 [ %308, %304 ], [ %314, %311 ]
  %317 = phi i64 [ %307, %304 ], [ %313, %311 ]
  %318 = load ptr, ptr %180, align 8, !tbaa !17
  store i64 %316, ptr %181, align 8, !tbaa !37
  %319 = getelementptr inbounds nuw i8, ptr %318, i64 %317
  store i8 %306, ptr %319, align 1, !tbaa !10
  %320 = lshr i32 %305, 8
  %321 = icmp samesign ult i32 %305, 256
  br i1 %321, label %195, label %304, !llvm.loop !557

322:                                              ; preds = %160
  %323 = lshr i32 %161, 24
  %324 = icmp sgt i32 %165, -1
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

326:                                              ; preds = %322
  %327 = add nuw i32 %165, %323
  %328 = and i32 %12, 56
  %329 = icmp eq i32 %328, 32
  br i1 %329, label %330, label %336

330:                                              ; preds = %326
  %331 = icmp sgt i32 %167, -1
  br i1 %331, label %333, label %332

332:                                              ; preds = %330
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

333:                                              ; preds = %330
  %334 = call i32 @llvm.usub.sat.i32(i32 %167, i32 %327)
  %335 = call i32 @llvm.umax.i32(i32 %167, i32 %327)
  br label %341

336:                                              ; preds = %326
  %337 = icmp sgt i32 %169, %165
  br i1 %337, label %338, label %341

338:                                              ; preds = %336
  %339 = add nuw i32 %169, %323
  %340 = sub nsw i32 %169, %165
  br label %341

341:                                              ; preds = %333, %336, %338
  %342 = phi i32 [ %340, %338 ], [ 0, %336 ], [ %334, %333 ]
  %343 = phi i32 [ %339, %338 ], [ %327, %336 ], [ %335, %333 ]
  %344 = zext i32 %343 to i64
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #30
  store i32 %161, ptr %7, align 8, !tbaa !558
  %345 = getelementptr inbounds nuw i8, ptr %7, i64 4
  store i32 %342, ptr %345, align 4, !tbaa !560
  %346 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store ptr %163, ptr %346, align 8, !tbaa !561
  %347 = getelementptr inbounds nuw i8, ptr %7, i64 16
  store ptr %8, ptr %347, align 8, !tbaa !562
  %348 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_oEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %344, i64 noundef %344, ptr noundef nonnull align 8 dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #30
  br label %349

349:                                              ; preds = %280, %195, %341, %153
  %350 = phi i64 [ %159, %153 ], [ %348, %341 ], [ %0, %195 ], [ %0, %280 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #30
  ret i64 %350
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_9write_intIcS5_oEET0_S7_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS5_E_EES9_S9_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(24) %4) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %7 = load i32, ptr %6, align 4, !tbaa !125
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

10:                                               ; preds = %5
  %11 = zext nneg i32 %7 to i64
  %12 = tail call i64 @llvm.usub.sat.i64(i64 %11, i64 %3)
  %13 = load i32, ptr %1, align 4, !tbaa !53
  %14 = lshr i32 %13, 3
  %15 = and i32 %14, 7
  %16 = zext nneg i32 %15 to i64
  %17 = getelementptr inbounds nuw i8, ptr @.str.26, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !10
  %19 = sext i8 %18 to i64
  %20 = and i64 %19, 4294967295
  %21 = lshr i64 %12, %20
  %22 = sub nsw i64 %12, %21
  %23 = lshr i32 %13, 15
  %24 = and i32 %23, 7
  %25 = zext nneg i32 %24 to i64
  %26 = mul nuw nsw i64 %12, %25
  %27 = inttoptr i64 %0 to ptr
  %28 = getelementptr inbounds nuw i8, ptr %27, i64 8
  %29 = load i64, ptr %28, align 8, !tbaa !37
  %30 = add i64 %29, %2
  %31 = add i64 %30, %26
  %32 = getelementptr inbounds nuw i8, ptr %27, i64 16
  %33 = load i64, ptr %32, align 8, !tbaa !18
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %10
  %36 = getelementptr inbounds nuw i8, ptr %27, i64 24
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  tail call void %37(ptr noundef nonnull align 8 dereferenceable(32) %27, i64 noundef %31)
  br label %38

38:                                               ; preds = %10, %35
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %21, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %0, %38 ]
  %44 = tail call i64 @_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(24) %4, i64 %43)
  %45 = icmp eq i64 %12, %21
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %44, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi i64 [ %47, %46 ], [ %44, %42 ]
  ret i64 %49
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local i64 @_ZZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEENKUlS4_E_clES4_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 %1) local_unnamed_addr #5 comdat align 2 {
  %3 = inttoptr i64 %1 to ptr
  %4 = load i32, ptr %0, align 8, !tbaa !558
  %5 = and i32 %4, 16777215
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %9 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %152

11:                                               ; preds = %163, %2
  %12 = getelementptr inbounds nuw i8, ptr %0, i64 4
  %13 = load i32, ptr %12, align 4, !tbaa !560
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %17 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %18 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %19

19:                                               ; preds = %29, %15
  %20 = phi i32 [ 0, %15 ], [ %34, %29 ]
  %21 = load i64, ptr %16, align 8, !tbaa !37
  %22 = add i64 %21, 1
  %23 = load i64, ptr %17, align 8, !tbaa !18
  %24 = icmp ugt i64 %22, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = load ptr, ptr %18, align 8, !tbaa !13
  tail call void %26(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %22)
  %27 = load i64, ptr %16, align 8, !tbaa !37
  %28 = add i64 %27, 1
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i64 [ %22, %19 ], [ %28, %25 ]
  %31 = phi i64 [ %21, %19 ], [ %27, %25 ]
  %32 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %30, ptr %16, align 8, !tbaa !37
  %33 = getelementptr inbounds nuw i8, ptr %32, i64 %31
  store i8 48, ptr %33, align 1, !tbaa !10
  %34 = add nuw i32 %20, 1
  %35 = icmp eq i32 %34, %13
  br i1 %35, label %36, label %19, !llvm.loop !183

36:                                               ; preds = %29, %11
  %37 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %38 = load ptr, ptr %37, align 8, !tbaa !561
  %39 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %40 = load ptr, ptr %39, align 8, !tbaa !562
  %41 = icmp eq ptr %38, %40
  br i1 %41, label %151, label %42

42:                                               ; preds = %36
  %43 = ptrtoint ptr %40 to i64
  %44 = getelementptr inbounds nuw i8, ptr %3, i64 8
  %45 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %46 = getelementptr inbounds nuw i8, ptr %3, i64 24
  br label %47

47:                                               ; preds = %127, %42
  %48 = phi ptr [ %38, %42 ], [ %130, %127 ]
  %49 = ptrtoint ptr %48 to i64
  %50 = sub i64 %43, %49
  %51 = icmp sgt i64 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

53:                                               ; preds = %47
  %54 = load i64, ptr %44, align 8, !tbaa !37
  %55 = add i64 %54, %50
  %56 = load i64, ptr %45, align 8, !tbaa !18
  %57 = icmp ugt i64 %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = load ptr, ptr %46, align 8, !tbaa !13
  tail call void %59(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %55)
  %60 = load i64, ptr %45, align 8, !tbaa !18
  %61 = load i64, ptr %44, align 8, !tbaa !37
  br label %62

62:                                               ; preds = %58, %53
  %63 = phi i64 [ %54, %53 ], [ %61, %58 ]
  %64 = phi i64 [ %56, %53 ], [ %60, %58 ]
  %65 = sub i64 %64, %63
  %66 = tail call i64 @llvm.umin.i64(i64 %65, i64 %50)
  %67 = load ptr, ptr %3, align 8, !tbaa !17
  %68 = ptrtoint ptr %67 to i64
  %69 = getelementptr inbounds nuw i8, ptr %67, i64 %63
  %70 = icmp eq i64 %66, 0
  br i1 %70, label %127, label %71

71:                                               ; preds = %62
  %72 = icmp ult i64 %66, 4
  br i1 %72, label %73, label %90

73:                                               ; preds = %110, %123, %90, %71
  %74 = phi i64 [ %97, %110 ], [ 0, %71 ], [ 0, %90 ], [ %115, %123 ]
  %75 = and i64 %66, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %73, %77
  %78 = phi i64 [ %83, %77 ], [ %74, %73 ]
  %79 = phi i64 [ %84, %77 ], [ 0, %73 ]
  %80 = getelementptr inbounds nuw i8, ptr %48, i64 %78
  %81 = load i8, ptr %80, align 1, !tbaa !10
  %82 = getelementptr inbounds nuw i8, ptr %69, i64 %78
  store i8 %81, ptr %82, align 1, !tbaa !10
  %83 = add nuw i64 %78, 1
  %84 = add i64 %79, 1
  %85 = icmp eq i64 %84, %75
  br i1 %85, label %86, label %77, !llvm.loop !563

86:                                               ; preds = %77, %73
  %87 = phi i64 [ %74, %73 ], [ %83, %77 ]
  %88 = sub nsw i64 %74, %66
  %89 = icmp ugt i64 %88, -4
  br i1 %89, label %125, label %132

90:                                               ; preds = %71
  %91 = add i64 %63, %68
  %92 = sub i64 %91, %49
  %93 = icmp ult i64 %92, 32
  br i1 %93, label %73, label %94

94:                                               ; preds = %90
  %95 = icmp ult i64 %66, 32
  br i1 %95, label %113, label %96

96:                                               ; preds = %94
  %97 = and i64 %66, 9223372036854775776
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %106, %98 ]
  %100 = getelementptr inbounds nuw i8, ptr %48, i64 %99
  %101 = getelementptr inbounds nuw i8, ptr %100, i64 16
  %102 = load <16 x i8>, ptr %100, align 1, !tbaa !10
  %103 = load <16 x i8>, ptr %101, align 1, !tbaa !10
  %104 = getelementptr inbounds nuw i8, ptr %69, i64 %99
  %105 = getelementptr inbounds nuw i8, ptr %104, i64 16
  store <16 x i8> %102, ptr %104, align 1, !tbaa !10
  store <16 x i8> %103, ptr %105, align 1, !tbaa !10
  %106 = add nuw i64 %99, 32
  %107 = icmp eq i64 %106, %97
  br i1 %107, label %108, label %98, !llvm.loop !564

108:                                              ; preds = %98
  %109 = icmp eq i64 %66, %97
  br i1 %109, label %125, label %110

110:                                              ; preds = %108
  %111 = and i64 %66, 28
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %73, label %113

113:                                              ; preds = %110, %94
  %114 = phi i64 [ %97, %110 ], [ 0, %94 ]
  %115 = and i64 %66, 9223372036854775804
  br label %116

116:                                              ; preds = %116, %113
  %117 = phi i64 [ %114, %113 ], [ %121, %116 ]
  %118 = getelementptr inbounds nuw i8, ptr %48, i64 %117
  %119 = load <4 x i8>, ptr %118, align 1, !tbaa !10
  %120 = getelementptr inbounds nuw i8, ptr %69, i64 %117
  store <4 x i8> %119, ptr %120, align 1, !tbaa !10
  %121 = add nuw i64 %117, 4
  %122 = icmp eq i64 %121, %115
  br i1 %122, label %123, label %116, !llvm.loop !565

123:                                              ; preds = %116
  %124 = icmp eq i64 %66, %115
  br i1 %124, label %125, label %73

125:                                              ; preds = %86, %132, %123, %108
  %126 = load i64, ptr %44, align 8, !tbaa !37
  br label %127

127:                                              ; preds = %125, %62
  %128 = phi i64 [ %126, %125 ], [ %63, %62 ]
  %129 = add i64 %128, %66
  store i64 %129, ptr %44, align 8, !tbaa !37
  %130 = getelementptr inbounds nuw i8, ptr %48, i64 %66
  %131 = icmp eq ptr %130, %40
  br i1 %131, label %151, label %47, !llvm.loop !77

132:                                              ; preds = %86, %132
  %133 = phi i64 [ %149, %132 ], [ %87, %86 ]
  %134 = getelementptr inbounds nuw i8, ptr %48, i64 %133
  %135 = load i8, ptr %134, align 1, !tbaa !10
  %136 = getelementptr inbounds nuw i8, ptr %69, i64 %133
  store i8 %135, ptr %136, align 1, !tbaa !10
  %137 = add nuw i64 %133, 1
  %138 = getelementptr inbounds nuw i8, ptr %48, i64 %137
  %139 = load i8, ptr %138, align 1, !tbaa !10
  %140 = getelementptr inbounds nuw i8, ptr %69, i64 %137
  store i8 %139, ptr %140, align 1, !tbaa !10
  %141 = add nuw i64 %133, 2
  %142 = getelementptr inbounds nuw i8, ptr %48, i64 %141
  %143 = load i8, ptr %142, align 1, !tbaa !10
  %144 = getelementptr inbounds nuw i8, ptr %69, i64 %141
  store i8 %143, ptr %144, align 1, !tbaa !10
  %145 = add nuw i64 %133, 3
  %146 = getelementptr inbounds nuw i8, ptr %48, i64 %145
  %147 = load i8, ptr %146, align 1, !tbaa !10
  %148 = getelementptr inbounds nuw i8, ptr %69, i64 %145
  store i8 %147, ptr %148, align 1, !tbaa !10
  %149 = add nuw i64 %133, 4
  %150 = icmp eq i64 %149, %66
  br i1 %150, label %125, label %132, !llvm.loop !566

151:                                              ; preds = %127, %36
  ret i64 %1

152:                                              ; preds = %7, %163
  %153 = phi i32 [ %5, %7 ], [ %168, %163 ]
  %154 = trunc i32 %153 to i8
  %155 = load i64, ptr %8, align 8, !tbaa !37
  %156 = add i64 %155, 1
  %157 = load i64, ptr %9, align 8, !tbaa !18
  %158 = icmp ugt i64 %156, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %152
  %160 = load ptr, ptr %10, align 8, !tbaa !13
  tail call void %160(ptr noundef nonnull align 8 dereferenceable(32) %3, i64 noundef %156)
  %161 = load i64, ptr %8, align 8, !tbaa !37
  %162 = add i64 %161, 1
  br label %163

163:                                              ; preds = %152, %159
  %164 = phi i64 [ %156, %152 ], [ %162, %159 ]
  %165 = phi i64 [ %155, %152 ], [ %161, %159 ]
  %166 = load ptr, ptr %3, align 8, !tbaa !17
  store i64 %164, ptr %8, align 8, !tbaa !37
  %167 = getelementptr inbounds nuw i8, ptr %166, i64 %165
  store i8 %154, ptr %167, align 1, !tbaa !10
  %168 = lshr i32 %153, 8
  %169 = icmp samesign ult i32 %153, 256
  br i1 %169, label %11, label %152, !llvm.loop !567
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_T_RKNS0_12format_specsENS1_10locale_refE(i64 %0, i8 noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 %3) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.fmt::v11::loc_value", align 16
  %6 = alloca %class.anon.12, align 1
  %7 = load i32, ptr %2, align 4, !tbaa !53
  %8 = trunc i32 %7 to i8
  %9 = and i8 %8, 7
  switch i8 %9, label %24 [
    i8 7, label %10
    i8 1, label %10
    i8 0, label %10
  ]

10:                                               ; preds = %4, %4, %4
  %11 = and i32 %7, 56
  %12 = icmp ne i32 %11, 32
  %13 = and i32 %7, 11264
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  tail call void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.54) #31
  unreachable

17:                                               ; preds = %10
  switch i8 %9, label %24 [
    i8 7, label %18
    i8 1, label %18
    i8 0, label %18
  ]

18:                                               ; preds = %17, %17, %17
  %19 = and i32 %7, 7
  %20 = icmp eq i32 %19, 1
  %21 = zext i1 %20 to i8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #30
  store i8 %21, ptr %6, align 1, !tbaa !112
  %22 = getelementptr inbounds nuw i8, ptr %6, i64 1
  store i8 %1, ptr %22, align 1, !tbaa !115
  %23 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_10write_charIcS5_EET0_S7_T_RKNS0_12format_specsEEUlS5_E_EET1_SE_SB_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef 1, i64 noundef 1, ptr noundef nonnull align 1 dereferenceable(2) %6)
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #30
  br label %47

24:                                               ; preds = %4, %17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5)
  %25 = and i32 %7, 16384
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = zext i8 %1 to i32
  store i32 %28, ptr %5, align 16, !tbaa !10
  %29 = getelementptr inbounds nuw i8, ptr %5, i64 16
  store i32 2, ptr %29, align 16, !tbaa !21
  %30 = call noundef zeroext i1 @_ZN3fmt3v116detail9write_locENS0_14basic_appenderIcEENS0_9loc_valueERKNS0_12format_specsENS1_10locale_refE(i64 %0, ptr noundef nonnull %5, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 %3)
  br i1 %30, label %45, label %31

31:                                               ; preds = %27
  %32 = load i32, ptr %2, align 4, !tbaa !53
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %7, %24 ]
  %35 = lshr i32 %34, 10
  %36 = and i32 %35, 3
  %37 = zext nneg i32 %36 to i64
  %38 = getelementptr inbounds nuw [4 x i32], ptr @__const._ZN3fmt3v116detail18make_write_int_argIhEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE.prefixes, i64 0, i64 %37
  %39 = load i32, ptr %38, align 4, !tbaa !11
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i8 %1 to i64
  %43 = or disjoint i64 %41, %42
  %44 = call i64 @_ZN3fmt3v116detail18write_int_noinlineIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsE(i64 %0, i64 %43, ptr noundef nonnull align 4 dereferenceable(16) %2)
  br label %45

45:                                               ; preds = %27, %33
  %46 = phi i64 [ %44, %33 ], [ %0, %27 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5)
  br label %47

47:                                               ; preds = %45, %18
  %48 = phi i64 [ %23, %18 ], [ %46, %45 ]
  ret i64 %48
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEfEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %0, float noundef %1, ptr noundef %2, i64 %3) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %5 = alloca %class.anon.45, align 8
  %6 = alloca %class.anon.30, align 8
  %7 = alloca %"struct.fmt::v11::format_specs", align 4
  %8 = alloca %"struct.fmt::v11::detail::dragonbox::decimal_fp", align 8
  %9 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %10 = alloca %"struct.fmt::v11::format_specs", align 4
  %11 = alloca %"struct.fmt::v11::detail::big_decimal_fp", align 8
  %12 = inttoptr i64 %0 to ptr
  %13 = bitcast float %1 to i32
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = load i32, ptr %2, align 4, !tbaa !53
  %17 = lshr i32 %16, 10
  %18 = and i32 %17, 3
  br label %19

19:                                               ; preds = %4, %15
  %20 = phi i32 [ %18, %15 ], [ 1, %4 ]
  %21 = tail call float @llvm.fabs.f32(float %1)
  %22 = fcmp ueq float %21, 0x7FF0000000000000
  br i1 %22, label %23, label %43

23:                                               ; preds = %19
  %24 = fcmp uno float %1, 0.000000e+00
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 16, i1 false)
  %25 = load i32, ptr %7, align 4, !tbaa !53
  %26 = and i32 %25, 229376
  %27 = icmp eq i32 %26, 32768
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds nuw i8, ptr %7, i64 4
  %30 = load i8, ptr %29, align 4, !tbaa !10
  %31 = icmp eq i8 %30, 48
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8 32, ptr %29, align 4, !tbaa !10
  br label %33

33:                                               ; preds = %23, %28, %32
  %34 = and i32 %25, 4096
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, ptr @.str.28, ptr @.str.27
  %37 = select i1 %35, ptr @.str.30, ptr @.str.29
  %38 = select i1 %24, ptr %36, ptr %37
  %39 = icmp eq i32 %20, 0
  %40 = select i1 %39, i64 3, i64 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i32 %20, ptr %6, align 8, !tbaa !193
  %41 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store ptr %38, ptr %41, align 8, !tbaa !196
  %42 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %7, i64 noundef %40, i64 noundef %40, ptr noundef nonnull align 8 dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %153

43:                                               ; preds = %19
  %44 = load i32, ptr %2, align 4, !tbaa !53
  %45 = and i32 %44, 56
  %46 = icmp eq i32 %45, 32
  %47 = icmp ne i32 %20, 0
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %74

49:                                               ; preds = %43
  %50 = shl nuw nsw i32 %20, 3
  %51 = lshr i32 539700480, %50
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds nuw i8, ptr %12, i64 8
  %54 = load i64, ptr %53, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = getelementptr inbounds nuw i8, ptr %12, i64 16
  %57 = load i64, ptr %56, align 8, !tbaa !18
  %58 = icmp ugt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds nuw i8, ptr %12, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %12, i64 noundef %55)
  %62 = load i64, ptr %53, align 8, !tbaa !37
  %63 = add i64 %62, 1
  br label %64

64:                                               ; preds = %49, %59
  %65 = phi i64 [ %55, %49 ], [ %63, %59 ]
  %66 = phi i64 [ %54, %49 ], [ %62, %59 ]
  %67 = load ptr, ptr %12, align 8, !tbaa !17
  store i64 %65, ptr %53, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %66
  store i8 %52, ptr %68, align 1, !tbaa !10
  %69 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %70 = load i32, ptr %69, align 4, !tbaa !125
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  %73 = add nsw i32 %70, -1
  store i32 %73, ptr %69, align 4, !tbaa !125
  br label %74

74:                                               ; preds = %64, %72, %43
  %75 = phi i32 [ 0, %72 ], [ 0, %64 ], [ %20, %43 ]
  %76 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %77 = load i32, ptr %76, align 4, !tbaa !55
  %78 = icmp slt i32 %77, 0
  %79 = load i32, ptr %2, align 4, !tbaa !53
  br i1 %78, label %80, label %86

80:                                               ; preds = %74
  %81 = and i32 %79, 7
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #30
  %84 = tail call i64 @_ZN3fmt3v116detail9dragonbox10to_decimalIfEENS2_10decimal_fpIT_EES5_(float noundef %1) #30
  store i64 %84, ptr %8, align 8
  %85 = call i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 4 dereferenceable(8) %8, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %75, i32 noundef 7, i64 %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #30
  br label %153

86:                                               ; preds = %80, %74
  %87 = phi i32 [ %77, %74 ], [ 6, %80 ]
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %9) #30
  %88 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %89 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %90 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 0, ptr %90, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %89, align 8, !tbaa !13
  %91 = getelementptr inbounds nuw i8, ptr %9, i64 32
  store ptr %91, ptr %9, align 8, !tbaa !17
  store i64 500, ptr %88, align 8, !tbaa !18
  %92 = trunc i32 %79 to i8
  %93 = and i8 %92, 7
  switch i8 %93, label %123 [
    i8 4, label %94
    i8 1, label %110
    i8 2, label %119
  ]

94:                                               ; preds = %86
  %95 = icmp eq i32 %75, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %94
  %97 = shl nuw nsw i32 %75, 3
  %98 = lshr i32 539700480, %97
  %99 = trunc i32 %98 to i8
  store i64 1, ptr %90, align 8, !tbaa !37
  store i8 %99, ptr %91, align 8, !tbaa !10
  br label %100

100:                                              ; preds = %96, %94
  %101 = fpext float %1 to double
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %10, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 16, i1 false)
  invoke void @_ZN3fmt3v116detail15format_hexfloatIdTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE(double noundef %101, ptr noundef nonnull %10, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %102 unwind label %108

102:                                              ; preds = %100
  %103 = load ptr, ptr %9, align 8, !tbaa !17
  %104 = load i64, ptr %90, align 8, !tbaa !37
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #30
  store ptr %103, ptr %5, align 8, !tbaa !19
  %105 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 %104, ptr %105, align 8, !tbaa !20
  %106 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_2ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %104, i64 noundef %104, ptr noundef nonnull align 8 dereferenceable(16) %5)
          to label %107 unwind label %108

107:                                              ; preds = %102
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #30
  br label %141

108:                                              ; preds = %102, %112, %100
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %147

110:                                              ; preds = %86
  %111 = icmp eq i32 %87, 2147483647
  br i1 %111, label %112, label %114

112:                                              ; preds = %110
  invoke void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.37) #31
          to label %113 unwind label %108

113:                                              ; preds = %112
  unreachable

114:                                              ; preds = %110
  %115 = add nuw nsw i32 %87, 1
  %116 = icmp eq i32 %77, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %114
  %118 = or i32 %79, 8192
  store i32 %118, ptr %2, align 4, !tbaa !53
  br label %125

119:                                              ; preds = %86
  %120 = icmp eq i32 %77, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = or i32 %79, 8192
  store i32 %122, ptr %2, align 4, !tbaa !53
  br label %125

123:                                              ; preds = %86
  %124 = call i32 @llvm.umax.i32(i32 %87, i32 1)
  br label %125

125:                                              ; preds = %123, %121, %119, %114, %117
  %126 = phi i32 [ %115, %117 ], [ %115, %114 ], [ %87, %121 ], [ %87, %119 ], [ %124, %123 ]
  %127 = fpext float %1 to double
  %128 = invoke noundef i32 @_ZN3fmt3v116detail12format_floatIdEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE(double noundef %127, i32 noundef %126, ptr noundef nonnull align 4 dereferenceable(16) %2, i1 noundef zeroext true, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %129 unwind label %137

129:                                              ; preds = %125
  store i32 %126, ptr %76, align 4, !tbaa !55
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #30
  %130 = load ptr, ptr %9, align 8, !tbaa !17
  store ptr %130, ptr %11, align 8, !tbaa !317
  %131 = getelementptr inbounds nuw i8, ptr %11, i64 8
  %132 = load i64, ptr %90, align 8, !tbaa !37
  %133 = trunc i64 %132 to i32
  store i32 %133, ptr %131, align 8, !tbaa !319
  %134 = getelementptr inbounds nuw i8, ptr %11, i64 12
  store i32 %128, ptr %134, align 4, !tbaa !320
  %135 = invoke i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %75, i32 noundef 7, i64 %3)
          to label %136 unwind label %139

136:                                              ; preds = %129
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #30
  br label %141

137:                                              ; preds = %125
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %147

139:                                              ; preds = %129
  %140 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #30
  br label %147

141:                                              ; preds = %107, %136
  %142 = phi i64 [ %135, %136 ], [ %106, %107 ]
  %143 = load ptr, ptr %9, align 8, !tbaa !17
  %144 = icmp eq ptr %143, %91
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  call void @free(ptr noundef %143)
  br label %146

146:                                              ; preds = %141, %145
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  br label %153

147:                                              ; preds = %137, %139, %108
  %148 = phi { ptr, i32 } [ %109, %108 ], [ %140, %139 ], [ %138, %137 ]
  %149 = load ptr, ptr %9, align 8, !tbaa !17
  %150 = icmp eq ptr %149, %91
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  call void @free(ptr noundef %149)
  br label %152

152:                                              ; preds = %147, %151
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  resume { ptr, i32 } %148

153:                                              ; preds = %83, %146, %33
  %154 = phi i64 [ %42, %33 ], [ %142, %146 ], [ %85, %83 ]
  ret i64 %154
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail15format_hexfloatIdTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE(double noundef %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(32) %2) local_unnamed_addr #0 comdat {
  %4 = alloca [16 x i8], align 16
  %5 = bitcast double %0 to i64
  %6 = and i64 %5, 4503599627370495
  %7 = and i64 %5, 9218868437227405312
  %8 = icmp eq i64 %7, 0
  %9 = lshr exact i64 %7, 52
  %10 = trunc nuw nsw i64 %9 to i32
  %11 = or disjoint i64 %6, 4503599627370496
  %12 = select i1 %8, i64 %6, i64 %11
  %13 = add nsw i32 %10, -1023
  %14 = select i1 %8, i32 -1022, i32 %13
  %15 = getelementptr inbounds nuw i8, ptr %1, i64 12
  %16 = load i32, ptr %15, align 4, !tbaa !55
  %17 = icmp ult i32 %16, 13
  br i1 %17, label %18, label %32

18:                                               ; preds = %3
  %19 = shl nuw nsw i32 %16, 2
  %20 = sub nuw nsw i32 48, %19
  %21 = zext nneg i32 %20 to i64
  %22 = shl nuw nsw i64 8, %21
  %23 = and i64 %22, %12
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = sub nuw nsw i32 52, %19
  %27 = zext nneg i32 %26 to i64
  %28 = shl nuw nsw i64 1, %27
  %29 = add nuw nsw i64 %28, %12
  %30 = sub nsw i64 0, %28
  %31 = and i64 %29, %30
  br label %32

32:                                               ; preds = %18, %25, %3
  %33 = phi i64 [ %12, %3 ], [ %12, %18 ], [ %31, %25 ]
  %34 = phi i32 [ 13, %3 ], [ %16, %18 ], [ %16, %25 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %4, i8 48, i64 16, i1 false)
  %35 = load i32, ptr %1, align 4, !tbaa !53
  %36 = and i32 %35, 4096
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds nuw i8, ptr %4, i64 14
  %39 = select i1 %37, ptr @.str.24, ptr @.str.23
  br label %40

40:                                               ; preds = %40, %32
  %41 = phi i64 [ %47, %40 ], [ %33, %32 ]
  %42 = phi ptr [ %46, %40 ], [ %38, %32 ]
  %43 = and i64 %41, 15
  %44 = getelementptr inbounds nuw i8, ptr %39, i64 %43
  %45 = load i8, ptr %44, align 1, !tbaa !10
  %46 = getelementptr inbounds i8, ptr %42, i64 -1
  store i8 %45, ptr %46, align 1, !tbaa !10
  %47 = lshr i64 %41, 4
  %48 = icmp ult i64 %41, 16
  br i1 %48, label %49, label %40, !llvm.loop !109

49:                                               ; preds = %40
  %50 = icmp sgt i32 %34, 0
  br i1 %50, label %51, label %60

51:                                               ; preds = %49, %57
  %52 = phi i32 [ %58, %57 ], [ %34, %49 ]
  %53 = zext nneg i32 %52 to i64
  %54 = getelementptr inbounds nuw [16 x i8], ptr %4, i64 0, i64 %53
  %55 = load i8, ptr %54, align 1, !tbaa !10
  %56 = icmp ne i8 %55, 48
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = add nsw i32 %52, -1
  %59 = icmp sgt i32 %52, 1
  br i1 %59, label %51, label %60, !llvm.loop !568

60:                                               ; preds = %51, %57, %49
  %61 = phi i32 [ %34, %49 ], [ 0, %57 ], [ %52, %51 ]
  %62 = phi i1 [ false, %49 ], [ %56, %57 ], [ %56, %51 ]
  %63 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %64 = load i64, ptr %63, align 8, !tbaa !37
  %65 = add i64 %64, 1
  %66 = getelementptr inbounds nuw i8, ptr %2, i64 16
  %67 = load i64, ptr %66, align 8, !tbaa !18
  %68 = icmp ugt i64 %65, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %60
  %70 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %71 = load ptr, ptr %70, align 8, !tbaa !13
  tail call void %71(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %65)
  %72 = load i64, ptr %63, align 8, !tbaa !37
  %73 = add i64 %72, 1
  br label %74

74:                                               ; preds = %60, %69
  %75 = phi i64 [ %65, %60 ], [ %73, %69 ]
  %76 = phi i64 [ %64, %60 ], [ %72, %69 ]
  %77 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %75, ptr %63, align 8, !tbaa !37
  %78 = getelementptr inbounds nuw i8, ptr %77, i64 %76
  store i8 48, ptr %78, align 1, !tbaa !10
  %79 = load i32, ptr %1, align 4, !tbaa !53
  %80 = and i32 %79, 4096
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i8 120, i8 88
  %83 = load i64, ptr %63, align 8, !tbaa !37
  %84 = add i64 %83, 1
  %85 = load i64, ptr %66, align 8, !tbaa !18
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %74
  %88 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %89 = load ptr, ptr %88, align 8, !tbaa !13
  tail call void %89(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %84)
  %90 = load i64, ptr %63, align 8, !tbaa !37
  %91 = add i64 %90, 1
  br label %92

92:                                               ; preds = %74, %87
  %93 = phi i64 [ %84, %74 ], [ %91, %87 ]
  %94 = phi i64 [ %83, %74 ], [ %90, %87 ]
  %95 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %93, ptr %63, align 8, !tbaa !37
  %96 = getelementptr inbounds nuw i8, ptr %95, i64 %94
  store i8 %82, ptr %96, align 1, !tbaa !10
  %97 = load i64, ptr %63, align 8, !tbaa !37
  %98 = add i64 %97, 1
  %99 = load i64, ptr %66, align 8, !tbaa !18
  %100 = icmp ugt i64 %98, %99
  br i1 %100, label %101, label %106

101:                                              ; preds = %92
  %102 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %103 = load ptr, ptr %102, align 8, !tbaa !13
  tail call void %103(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %98)
  %104 = load i64, ptr %63, align 8, !tbaa !37
  %105 = add i64 %104, 1
  br label %106

106:                                              ; preds = %92, %101
  %107 = phi i64 [ %98, %92 ], [ %105, %101 ]
  %108 = phi i64 [ %97, %92 ], [ %104, %101 ]
  %109 = load i8, ptr %4, align 16, !tbaa !10
  %110 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %107, ptr %63, align 8, !tbaa !37
  %111 = getelementptr inbounds nuw i8, ptr %110, i64 %108
  store i8 %109, ptr %111, align 1, !tbaa !10
  %112 = load i32, ptr %1, align 4, !tbaa !53
  %113 = and i32 %112, 8192
  %114 = icmp ne i32 %113, 0
  %115 = or i1 %62, %114
  br i1 %115, label %119, label %116

116:                                              ; preds = %106
  %117 = load i32, ptr %15, align 4, !tbaa !55
  %118 = icmp slt i32 %61, %117
  br i1 %118, label %119, label %134

119:                                              ; preds = %116, %106
  %120 = load i64, ptr %63, align 8, !tbaa !37
  %121 = add i64 %120, 1
  %122 = load i64, ptr %66, align 8, !tbaa !18
  %123 = icmp ugt i64 %121, %122
  br i1 %123, label %124, label %129

124:                                              ; preds = %119
  %125 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %126 = load ptr, ptr %125, align 8, !tbaa !13
  tail call void %126(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %121)
  %127 = load i64, ptr %63, align 8, !tbaa !37
  %128 = add i64 %127, 1
  br label %129

129:                                              ; preds = %119, %124
  %130 = phi i64 [ %121, %119 ], [ %128, %124 ]
  %131 = phi i64 [ %120, %119 ], [ %127, %124 ]
  %132 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %130, ptr %63, align 8, !tbaa !37
  %133 = getelementptr inbounds nuw i8, ptr %132, i64 %131
  store i8 46, ptr %133, align 1, !tbaa !10
  br label %134

134:                                              ; preds = %129, %116
  %135 = sext i32 %61 to i64
  %136 = getelementptr i8, ptr %4, i64 %135
  %137 = getelementptr i8, ptr %136, i64 1
  %138 = icmp eq i32 %61, 0
  br i1 %138, label %247, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds nuw i8, ptr %4, i64 1
  %141 = ptrtoint ptr %137 to i64
  %142 = getelementptr inbounds nuw i8, ptr %2, i64 24
  br label %143

143:                                              ; preds = %223, %139
  %144 = phi ptr [ %140, %139 ], [ %226, %223 ]
  %145 = ptrtoint ptr %144 to i64
  %146 = sub i64 %141, %145
  %147 = icmp sgt i64 %146, -1
  br i1 %147, label %149, label %148

148:                                              ; preds = %143
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

149:                                              ; preds = %143
  %150 = load i64, ptr %63, align 8, !tbaa !37
  %151 = add i64 %150, %146
  %152 = load i64, ptr %66, align 8, !tbaa !18
  %153 = icmp ugt i64 %151, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %149
  %155 = load ptr, ptr %142, align 8, !tbaa !13
  call void %155(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %151)
  %156 = load i64, ptr %66, align 8, !tbaa !18
  %157 = load i64, ptr %63, align 8, !tbaa !37
  br label %158

158:                                              ; preds = %154, %149
  %159 = phi i64 [ %150, %149 ], [ %157, %154 ]
  %160 = phi i64 [ %152, %149 ], [ %156, %154 ]
  %161 = sub i64 %160, %159
  %162 = call i64 @llvm.umin.i64(i64 %161, i64 %146)
  %163 = load ptr, ptr %2, align 8, !tbaa !17
  %164 = ptrtoint ptr %163 to i64
  %165 = getelementptr inbounds nuw i8, ptr %163, i64 %159
  %166 = icmp eq i64 %162, 0
  br i1 %166, label %223, label %167

167:                                              ; preds = %158
  %168 = icmp ult i64 %162, 4
  br i1 %168, label %169, label %186

169:                                              ; preds = %206, %219, %186, %167
  %170 = phi i64 [ %193, %206 ], [ 0, %167 ], [ 0, %186 ], [ %211, %219 ]
  %171 = and i64 %162, 3
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %182, label %173

173:                                              ; preds = %169, %173
  %174 = phi i64 [ %179, %173 ], [ %170, %169 ]
  %175 = phi i64 [ %180, %173 ], [ 0, %169 ]
  %176 = getelementptr inbounds nuw i8, ptr %144, i64 %174
  %177 = load i8, ptr %176, align 1, !tbaa !10
  %178 = getelementptr inbounds nuw i8, ptr %165, i64 %174
  store i8 %177, ptr %178, align 1, !tbaa !10
  %179 = add nuw i64 %174, 1
  %180 = add i64 %175, 1
  %181 = icmp eq i64 %180, %171
  br i1 %181, label %182, label %173, !llvm.loop !569

182:                                              ; preds = %173, %169
  %183 = phi i64 [ %170, %169 ], [ %179, %173 ]
  %184 = sub nsw i64 %170, %162
  %185 = icmp ugt i64 %184, -4
  br i1 %185, label %221, label %228

186:                                              ; preds = %167
  %187 = add i64 %159, %164
  %188 = sub i64 %187, %145
  %189 = icmp ult i64 %188, 32
  br i1 %189, label %169, label %190

190:                                              ; preds = %186
  %191 = icmp ult i64 %162, 32
  br i1 %191, label %209, label %192

192:                                              ; preds = %190
  %193 = and i64 %162, 9223372036854775776
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i64 [ 0, %192 ], [ %202, %194 ]
  %196 = getelementptr inbounds nuw i8, ptr %144, i64 %195
  %197 = getelementptr inbounds nuw i8, ptr %196, i64 16
  %198 = load <16 x i8>, ptr %196, align 1, !tbaa !10
  %199 = load <16 x i8>, ptr %197, align 1, !tbaa !10
  %200 = getelementptr inbounds nuw i8, ptr %165, i64 %195
  %201 = getelementptr inbounds nuw i8, ptr %200, i64 16
  store <16 x i8> %198, ptr %200, align 1, !tbaa !10
  store <16 x i8> %199, ptr %201, align 1, !tbaa !10
  %202 = add nuw i64 %195, 32
  %203 = icmp eq i64 %202, %193
  br i1 %203, label %204, label %194, !llvm.loop !570

204:                                              ; preds = %194
  %205 = icmp eq i64 %162, %193
  br i1 %205, label %221, label %206

206:                                              ; preds = %204
  %207 = and i64 %162, 28
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %169, label %209

209:                                              ; preds = %206, %190
  %210 = phi i64 [ %193, %206 ], [ 0, %190 ]
  %211 = and i64 %162, 9223372036854775804
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ %210, %209 ], [ %217, %212 ]
  %214 = getelementptr inbounds nuw i8, ptr %144, i64 %213
  %215 = load <4 x i8>, ptr %214, align 1, !tbaa !10
  %216 = getelementptr inbounds nuw i8, ptr %165, i64 %213
  store <4 x i8> %215, ptr %216, align 1, !tbaa !10
  %217 = add nuw i64 %213, 4
  %218 = icmp eq i64 %217, %211
  br i1 %218, label %219, label %212, !llvm.loop !571

219:                                              ; preds = %212
  %220 = icmp eq i64 %162, %211
  br i1 %220, label %221, label %169

221:                                              ; preds = %182, %228, %219, %204
  %222 = load i64, ptr %63, align 8, !tbaa !37
  br label %223

223:                                              ; preds = %221, %158
  %224 = phi i64 [ %222, %221 ], [ %159, %158 ]
  %225 = add i64 %224, %162
  store i64 %225, ptr %63, align 8, !tbaa !37
  %226 = getelementptr inbounds nuw i8, ptr %144, i64 %162
  %227 = icmp eq ptr %226, %137
  br i1 %227, label %247, label %143, !llvm.loop !77

228:                                              ; preds = %182, %228
  %229 = phi i64 [ %245, %228 ], [ %183, %182 ]
  %230 = getelementptr inbounds nuw i8, ptr %144, i64 %229
  %231 = load i8, ptr %230, align 1, !tbaa !10
  %232 = getelementptr inbounds nuw i8, ptr %165, i64 %229
  store i8 %231, ptr %232, align 1, !tbaa !10
  %233 = add nuw i64 %229, 1
  %234 = getelementptr inbounds nuw i8, ptr %144, i64 %233
  %235 = load i8, ptr %234, align 1, !tbaa !10
  %236 = getelementptr inbounds nuw i8, ptr %165, i64 %233
  store i8 %235, ptr %236, align 1, !tbaa !10
  %237 = add nuw i64 %229, 2
  %238 = getelementptr inbounds nuw i8, ptr %144, i64 %237
  %239 = load i8, ptr %238, align 1, !tbaa !10
  %240 = getelementptr inbounds nuw i8, ptr %165, i64 %237
  store i8 %239, ptr %240, align 1, !tbaa !10
  %241 = add nuw i64 %229, 3
  %242 = getelementptr inbounds nuw i8, ptr %144, i64 %241
  %243 = load i8, ptr %242, align 1, !tbaa !10
  %244 = getelementptr inbounds nuw i8, ptr %165, i64 %241
  store i8 %243, ptr %244, align 1, !tbaa !10
  %245 = add nuw i64 %229, 4
  %246 = icmp eq i64 %245, %162
  br i1 %246, label %221, label %228, !llvm.loop !572

247:                                              ; preds = %223, %134
  %248 = load i32, ptr %15, align 4, !tbaa !55
  %249 = icmp slt i32 %61, %248
  br i1 %249, label %250, label %270

250:                                              ; preds = %247
  %251 = getelementptr inbounds nuw i8, ptr %2, i64 24
  br label %252

252:                                              ; preds = %250, %262
  %253 = phi i32 [ %61, %250 ], [ %267, %262 ]
  %254 = load i64, ptr %63, align 8, !tbaa !37
  %255 = add i64 %254, 1
  %256 = load i64, ptr %66, align 8, !tbaa !18
  %257 = icmp ugt i64 %255, %256
  br i1 %257, label %258, label %262

258:                                              ; preds = %252
  %259 = load ptr, ptr %251, align 8, !tbaa !13
  call void %259(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %255)
  %260 = load i64, ptr %63, align 8, !tbaa !37
  %261 = add i64 %260, 1
  br label %262

262:                                              ; preds = %252, %258
  %263 = phi i64 [ %255, %252 ], [ %261, %258 ]
  %264 = phi i64 [ %254, %252 ], [ %260, %258 ]
  %265 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %263, ptr %63, align 8, !tbaa !37
  %266 = getelementptr inbounds nuw i8, ptr %265, i64 %264
  store i8 48, ptr %266, align 1, !tbaa !10
  %267 = add nsw i32 %253, 1
  %268 = load i32, ptr %15, align 4, !tbaa !55
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %252, label %270, !llvm.loop !573

270:                                              ; preds = %262, %247
  %271 = load i32, ptr %1, align 4, !tbaa !53
  %272 = and i32 %271, 4096
  %273 = icmp eq i32 %272, 0
  %274 = select i1 %273, i8 112, i8 80
  %275 = load i64, ptr %63, align 8, !tbaa !37
  %276 = add i64 %275, 1
  %277 = load i64, ptr %66, align 8, !tbaa !18
  %278 = icmp ugt i64 %276, %277
  br i1 %278, label %279, label %284

279:                                              ; preds = %270
  %280 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %281 = load ptr, ptr %280, align 8, !tbaa !13
  call void %281(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %276)
  %282 = load i64, ptr %63, align 8, !tbaa !37
  %283 = add i64 %282, 1
  br label %284

284:                                              ; preds = %270, %279
  %285 = phi i64 [ %276, %270 ], [ %283, %279 ]
  %286 = phi i64 [ %275, %270 ], [ %282, %279 ]
  %287 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %285, ptr %63, align 8, !tbaa !37
  %288 = getelementptr inbounds nuw i8, ptr %287, i64 %286
  store i8 %274, ptr %288, align 1, !tbaa !10
  %289 = icmp slt i32 %14, 0
  %290 = load i64, ptr %63, align 8, !tbaa !37
  %291 = add i64 %290, 1
  %292 = load i64, ptr %66, align 8, !tbaa !18
  %293 = icmp ugt i64 %291, %292
  br i1 %289, label %294, label %306

294:                                              ; preds = %284
  br i1 %293, label %295, label %300

295:                                              ; preds = %294
  %296 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %297 = load ptr, ptr %296, align 8, !tbaa !13
  call void %297(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %291)
  %298 = load i64, ptr %63, align 8, !tbaa !37
  %299 = add i64 %298, 1
  br label %300

300:                                              ; preds = %294, %295
  %301 = phi i64 [ %291, %294 ], [ %299, %295 ]
  %302 = phi i64 [ %290, %294 ], [ %298, %295 ]
  %303 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %301, ptr %63, align 8, !tbaa !37
  %304 = getelementptr inbounds nuw i8, ptr %303, i64 %302
  store i8 45, ptr %304, align 1, !tbaa !10
  %305 = sub nsw i32 0, %14
  br label %317

306:                                              ; preds = %284
  br i1 %293, label %307, label %312

307:                                              ; preds = %306
  %308 = getelementptr inbounds nuw i8, ptr %2, i64 24
  %309 = load ptr, ptr %308, align 8, !tbaa !13
  call void %309(ptr noundef nonnull align 8 dereferenceable(32) %2, i64 noundef %291)
  %310 = load i64, ptr %63, align 8, !tbaa !37
  %311 = add i64 %310, 1
  br label %312

312:                                              ; preds = %306, %307
  %313 = phi i64 [ %291, %306 ], [ %311, %307 ]
  %314 = phi i64 [ %290, %306 ], [ %310, %307 ]
  %315 = load ptr, ptr %2, align 8, !tbaa !17
  store i64 %313, ptr %63, align 8, !tbaa !37
  %316 = getelementptr inbounds nuw i8, ptr %315, i64 %314
  store i8 43, ptr %316, align 1, !tbaa !10
  br label %317

317:                                              ; preds = %312, %300
  %318 = phi i32 [ %305, %300 ], [ %13, %312 ]
  %319 = or i32 %318, 1
  %320 = call range(i32 0, 32) i32 @llvm.ctlz.i32(i32 %319, i1 true)
  %321 = xor i32 %320, 31
  %322 = zext nneg i32 %321 to i64
  %323 = getelementptr inbounds nuw [32 x i64], ptr @_ZZN3fmt3v116detail15do_count_digitsEjE5table, i64 0, i64 %322
  %324 = load i64, ptr %323, align 8, !tbaa !20
  %325 = zext nneg i32 %318 to i64
  %326 = add i64 %324, %325
  %327 = lshr i64 %326, 32
  %328 = trunc nuw i64 %327 to i32
  %329 = ptrtoint ptr %2 to i64
  %330 = call i64 @_ZN3fmt3v116detail14format_decimalIcjNS0_14basic_appenderIcEETnNSt3__19enable_ifIXntsr3std10is_pointerINS5_9remove_cvINS5_16remove_referenceIT1_E4typeEE4typeEEE5valueEiE4typeELi0EEES9_S9_T0_i(i64 %329, i32 noundef %318, i32 noundef %328)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #30
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3fmt3v116detail12format_floatIdEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE(double noundef %0, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2, i1 noundef zeroext %3, ptr noundef nonnull align 8 dereferenceable(32) %4) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.fmt::v11::detail::uint128_fallback", align 8
  %8 = alloca %"struct.fmt::v11::detail::basic_fp", align 16
  %9 = load i32, ptr %2, align 4, !tbaa !53
  %10 = and i32 %9, 7
  %11 = icmp ne i32 %10, 2
  %12 = fcmp oeq double %0, 0.000000e+00
  br i1 %12, label %13, label %48

13:                                               ; preds = %5
  %14 = icmp slt i32 %1, 1
  %15 = or i1 %14, %11
  br i1 %15, label %16, label %33

16:                                               ; preds = %13
  %17 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %18 = load i64, ptr %17, align 8, !tbaa !37
  %19 = add i64 %18, 1
  %20 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %21 = load i64, ptr %20, align 8, !tbaa !18
  %22 = icmp ugt i64 %19, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  tail call void %25(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %19)
  %26 = load i64, ptr %17, align 8, !tbaa !37
  %27 = add i64 %26, 1
  br label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %19, %16 ], [ %27, %23 ]
  %30 = phi i64 [ %18, %16 ], [ %26, %23 ]
  %31 = load ptr, ptr %4, align 8, !tbaa !17
  store i64 %29, ptr %17, align 8, !tbaa !37
  %32 = getelementptr inbounds nuw i8, ptr %31, i64 %30
  store i8 48, ptr %32, align 1, !tbaa !10
  br label %470

33:                                               ; preds = %13
  %34 = zext nneg i32 %1 to i64
  %35 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %36 = load i64, ptr %35, align 8, !tbaa !18
  %37 = icmp ult i64 %36, %34
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %40 = load ptr, ptr %39, align 8, !tbaa !13
  tail call void %40(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %34)
  %41 = load i64, ptr %35, align 8, !tbaa !18
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i64 [ %36, %33 ], [ %41, %38 ]
  %44 = tail call noundef i64 @llvm.umin.i64(i64 %34, i64 %43)
  %45 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 %44, ptr %45, align 8, !tbaa !37
  %46 = load ptr, ptr %4, align 8, !tbaa !17
  tail call void @llvm.memset.p0.i64(ptr align 1 %46, i8 48, i64 %34, i1 false)
  %47 = sub nsw i32 0, %1
  br label %470

48:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #30
  %49 = bitcast double %0 to i64
  %50 = and i64 %49, 4503599627370495
  %51 = and i64 %49, 9218868437227405312
  %52 = lshr exact i64 %51, 52
  %53 = trunc nuw nsw i64 %52 to i32
  %54 = icmp eq i64 %51, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  %56 = add nsw i32 %53, -1075
  %57 = shl nuw nsw i64 %50, 1
  %58 = or disjoint i64 %57, 9007199254740992
  br label %69

59:                                               ; preds = %48
  %60 = icmp eq i64 %50, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 3045, ptr noundef nonnull @.str.55) #31
  unreachable

62:                                               ; preds = %59
  %63 = tail call range(i64 0, 65) i64 @llvm.ctlz.i64(i64 %50, i1 true)
  %64 = trunc nuw nsw i64 %63 to i32
  %65 = add nuw nsw i64 %63, 4294967286
  %66 = sub nuw nsw i32 -1063, %64
  %67 = and i64 %65, 4294967295
  %68 = shl i64 %50, %67
  br label %69

69:                                               ; preds = %62, %55
  %70 = phi i32 [ %56, %55 ], [ %66, %62 ]
  %71 = phi i64 [ %58, %55 ], [ %68, %62 ]
  %72 = mul nsw i32 %70, 315653
  %73 = ashr i32 %72, 20
  %74 = add nsw i32 %73, -2
  %75 = sub nsw i32 2, %73
  %76 = mul nsw i32 %75, 1741647
  %77 = ashr i32 %76, 19
  %78 = add nsw i32 %77, %70
  %79 = zext nneg i32 %78 to i64
  %80 = shl i64 %71, %79
  call void @_ZN3fmt3v116detail9dragonbox14cache_accessorIdE16get_cached_powerEi(ptr dead_on_unwind nonnull writable sret(%"class.fmt::v11::detail::uint128_fallback") align 8 %7, i32 noundef %75) #30
  %81 = getelementptr inbounds nuw i8, ptr %7, i64 8
  %82 = load i64, ptr %81, align 8, !tbaa !265, !noalias !574
  %83 = zext i64 %80 to i128
  %84 = zext i64 %82 to i128
  %85 = mul nuw i128 %83, %84
  %86 = lshr i128 %85, 64
  %87 = trunc nuw i128 %86 to i64
  %88 = trunc i128 %85 to i64
  %89 = load i64, ptr %7, align 8, !tbaa !577, !noalias !574
  %90 = zext i64 %89 to i128
  %91 = mul nuw i128 %83, %90
  %92 = lshr i128 %91, 64
  %93 = trunc nuw i128 %92 to i64
  %94 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %88, i64 %93)
  %95 = extractvalue { i64, i1 } %94, 1
  %96 = extractvalue { i64, i1 } %94, 0
  %97 = zext i1 %95 to i64
  %98 = add nuw i64 %97, %87
  %99 = icmp ne i64 %96, 0
  %100 = icmp ugt i64 %98, 999999999999999999
  %101 = mul nuw i64 %98, 10
  %102 = select i1 %100, i32 19, i32 18
  %103 = select i1 %100, i64 %98, i64 %101
  br i1 %11, label %117, label %104

104:                                              ; preds = %69
  %105 = add nsw i32 %74, %102
  %106 = icmp sgt i32 %105, 0
  %107 = sub nuw nsw i32 2147483647, %105
  %108 = icmp sgt i32 %1, %107
  %109 = select i1 %106, i1 %108, i1 false
  br i1 %109, label %110, label %115

110:                                              ; preds = %104
  %111 = call ptr @__cxa_allocate_exception(i64 16) #30
  invoke void @_ZN3fmt3v1112format_errorCI2St13runtime_errorEPKc(ptr noundef nonnull align 8 dereferenceable(16) %111, ptr noundef nonnull @.str.37)
          to label %112 unwind label %113

112:                                              ; preds = %110
  call void @__cxa_throw(ptr nonnull %111, ptr nonnull @_ZTIN3fmt3v1112format_errorE, ptr nonnull @_ZNSt13runtime_errorD2Ev) #31
  unreachable

113:                                              ; preds = %110
  %114 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %111) #30
  resume { ptr, i32 } %114

115:                                              ; preds = %104
  %116 = add nsw i32 %105, %1
  br label %117

117:                                              ; preds = %115, %69
  %118 = phi i32 [ %116, %115 ], [ %1, %69 ]
  %119 = icmp sgt i32 %102, %118
  br i1 %119, label %120, label %391

120:                                              ; preds = %117
  %121 = icmp slt i32 %118, 1
  br i1 %121, label %122, label %146

122:                                              ; preds = %120
  %123 = add nsw i32 %74, %102
  store i32 %123, ptr %6, align 4, !tbaa !11
  %124 = icmp slt i32 %118, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 0, ptr %126, align 8, !tbaa !37
  br label %431

127:                                              ; preds = %122
  %128 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %129 = load i64, ptr %128, align 8, !tbaa !18
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %133 = load ptr, ptr %132, align 8, !tbaa !13
  call void %133(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef 1)
  %134 = load i64, ptr %128, align 8, !tbaa !18
  %135 = icmp ne i64 %134, 0
  %136 = zext i1 %135 to i64
  br label %137

137:                                              ; preds = %127, %131
  %138 = phi i64 [ 1, %127 ], [ %136, %131 ]
  %139 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 %138, ptr %139, align 8, !tbaa !37
  %140 = zext i1 %99 to i64
  %141 = or i64 %103, %140
  %142 = icmp ugt i64 %141, 5000000000000000000
  %143 = load ptr, ptr %4, align 8, !tbaa !17
  br i1 %142, label %144, label %145

144:                                              ; preds = %137
  store i8 49, ptr %143, align 1, !tbaa !10
  br label %431

145:                                              ; preds = %137
  store i8 48, ptr %143, align 1, !tbaa !10
  br label %431

146:                                              ; preds = %120
  %147 = sub nuw nsw i32 %102, %118
  %148 = add nsw i32 %147, %74
  store i32 %148, ptr %6, align 4, !tbaa !11
  %149 = zext i64 %103 to i128
  %150 = mul nuw nsw i128 %149, 7922816251426433760
  %151 = lshr i128 %150, 96
  %152 = trunc nuw nsw i128 %151 to i64
  %153 = mul i64 %152, -10000000000
  %154 = add i64 %153, %103
  %155 = call i32 @llvm.umin.i32(i32 %118, i32 9)
  %156 = load ptr, ptr %4, align 8, !tbaa !17
  %157 = and i32 %155, 1
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %146
  %160 = mul nuw nsw i64 %152, 720575941
  %161 = lshr i64 %160, 24
  %162 = add nuw nsw i64 %161, 1
  %163 = lshr i64 %162, 32
  %164 = trunc nuw nsw i64 %163 to i8
  %165 = add nuw nsw i8 %164, 48
  store i8 %165, ptr %156, align 1, !tbaa !10
  br label %174

166:                                              ; preds = %146
  %167 = mul nuw nsw i64 %152, 450359963
  %168 = lshr i64 %167, 20
  %169 = add nuw nsw i64 %168, 1
  %170 = lshr i64 %169, 32
  %171 = shl nuw nsw i64 %170, 1
  %172 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %171
  %173 = load i16, ptr %172, align 2
  store i16 %173, ptr %156, align 1
  br label %174

174:                                              ; preds = %166, %159
  %175 = phi i64 [ %169, %166 ], [ %162, %159 ]
  %176 = phi i64 [ %170, %166 ], [ %163, %159 ]
  %177 = phi i32 [ 2, %166 ], [ 1, %159 ]
  %178 = icmp samesign ugt i32 %118, %177
  br i1 %178, label %181, label %179

179:                                              ; preds = %174
  %180 = trunc nuw nsw i64 %176 to i32
  br label %228

181:                                              ; preds = %174
  %182 = zext nneg i32 %177 to i64
  %183 = zext nneg i32 %155 to i64
  %184 = and i64 %175, 4294967295
  %185 = mul nuw nsw i64 %184, 100
  %186 = lshr i64 %185, 32
  %187 = getelementptr inbounds nuw i8, ptr %156, i64 %182
  %188 = shl nuw nsw i64 %186, 1
  %189 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %188
  %190 = load i16, ptr %189, align 2
  store i16 %190, ptr %187, align 1
  %191 = add nuw nsw i64 %182, 2
  %192 = icmp samesign ult i64 %191, %183
  br i1 %192, label %193, label %221, !llvm.loop !578

193:                                              ; preds = %181
  %194 = and i64 %185, 4294967292
  %195 = mul nuw nsw i64 %194, 100
  %196 = lshr i64 %195, 32
  %197 = getelementptr inbounds nuw i8, ptr %156, i64 %191
  %198 = shl nuw nsw i64 %196, 1
  %199 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %198
  %200 = load i16, ptr %199, align 2
  store i16 %200, ptr %197, align 1
  %201 = or disjoint i64 %182, 4
  %202 = icmp samesign ult i64 %201, %183
  br i1 %202, label %203, label %221, !llvm.loop !578

203:                                              ; preds = %193
  %204 = and i64 %195, 4294967280
  %205 = mul nuw nsw i64 %204, 100
  %206 = lshr i64 %205, 32
  %207 = getelementptr inbounds nuw i8, ptr %156, i64 %201
  %208 = shl nuw nsw i64 %206, 1
  %209 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %208
  %210 = load i16, ptr %209, align 2
  store i16 %210, ptr %207, align 1
  %211 = add nuw nsw i64 %182, 6
  %212 = icmp samesign ult i64 %211, %183
  br i1 %212, label %213, label %221, !llvm.loop !578

213:                                              ; preds = %203
  %214 = and i64 %205, 4294967232
  %215 = mul nuw nsw i64 %214, 100
  %216 = lshr i64 %215, 32
  %217 = getelementptr inbounds nuw i8, ptr %156, i64 %211
  %218 = shl nuw nsw i64 %216, 1
  %219 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %218
  %220 = load i16, ptr %219, align 2
  store i16 %220, ptr %217, align 1
  br label %221

221:                                              ; preds = %213, %203, %193, %181
  %222 = phi i64 [ %185, %181 ], [ %195, %193 ], [ %205, %203 ], [ %215, %213 ]
  %223 = phi i64 [ %186, %181 ], [ %196, %193 ], [ %206, %203 ], [ %216, %213 ]
  %224 = trunc nuw nsw i64 %223 to i32
  %225 = icmp slt i32 %118, 10
  br i1 %225, label %226, label %253

226:                                              ; preds = %221
  %227 = icmp eq i32 %118, 9
  br i1 %227, label %245, label %228

228:                                              ; preds = %179, %226
  %229 = phi i64 [ %175, %179 ], [ %222, %226 ]
  %230 = phi i32 [ %180, %179 ], [ %224, %226 ]
  %231 = trunc i64 %229 to i32
  %232 = sub nsw i32 8, %155
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [9 x i32], ptr @.str.56, i64 0, i64 %233
  %235 = load i32, ptr %234, align 4, !tbaa !579
  %236 = icmp ugt i32 %235, %231
  br i1 %236, label %237, label %339

237:                                              ; preds = %228
  %238 = lshr i32 %231, 31
  %239 = or i64 %154, %96
  %240 = icmp ne i64 %239, 0
  %241 = zext i1 %240 to i32
  %242 = or i32 %230, %241
  %243 = and i32 %242, %238
  %244 = trunc nuw i32 %243 to i1
  br i1 %244, label %339, label %377

245:                                              ; preds = %226
  %246 = icmp ugt i64 %154, 5000000000
  br i1 %246, label %332, label %247

247:                                              ; preds = %245
  %248 = icmp eq i64 %154, 5000000000
  br i1 %248, label %249, label %381

249:                                              ; preds = %247
  %250 = and i32 %224, 1
  %251 = icmp ne i32 %250, 0
  %252 = or i1 %99, %251
  br i1 %252, label %332, label %381

253:                                              ; preds = %221
  %254 = zext i64 %154 to i128
  %255 = mul nuw nsw i128 %254, 1844674407370955162
  %256 = lshr i128 %255, 64
  %257 = trunc i128 %256 to i32
  %258 = trunc i64 %154 to i32
  %259 = mul i32 %257, -10
  %260 = add i32 %259, %258
  %261 = add nsw i32 %118, -9
  %262 = load ptr, ptr %4, align 8, !tbaa !17
  %263 = getelementptr inbounds nuw i8, ptr %262, i64 9
  %264 = and i32 %261, 1
  %265 = icmp eq i32 %264, 0
  %266 = trunc nuw nsw i128 %256 to i64
  %267 = and i64 %266, 4294967295
  br i1 %265, label %275, label %268

268:                                              ; preds = %253
  %269 = mul nuw nsw i64 %267, 720575941
  %270 = lshr i64 %269, 24
  %271 = add nuw nsw i64 %270, 1
  %272 = lshr i64 %271, 32
  %273 = trunc nuw nsw i64 %272 to i8
  %274 = add nuw nsw i8 %273, 48
  store i8 %274, ptr %263, align 1, !tbaa !10
  br label %283

275:                                              ; preds = %253
  %276 = mul nuw nsw i64 %267, 450359963
  %277 = lshr i64 %276, 20
  %278 = add nuw nsw i64 %277, 1
  %279 = lshr i64 %278, 32
  %280 = shl nuw nsw i64 %279, 1
  %281 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %280
  %282 = load i16, ptr %281, align 2
  store i16 %282, ptr %263, align 1
  br label %283

283:                                              ; preds = %275, %268
  %284 = phi i64 [ %278, %275 ], [ %271, %268 ]
  %285 = phi i64 [ %279, %275 ], [ %272, %268 ]
  %286 = phi i32 [ 2, %275 ], [ 1, %268 ]
  %287 = trunc nuw nsw i64 %285 to i32
  %288 = icmp samesign ult i32 %286, %261
  br i1 %288, label %289, label %307

289:                                              ; preds = %283
  %290 = zext nneg i32 %286 to i64
  %291 = zext nneg i32 %261 to i64
  br label %292

292:                                              ; preds = %292, %289
  %293 = phi i64 [ %284, %289 ], [ %296, %292 ]
  %294 = phi i64 [ %290, %289 ], [ %302, %292 ]
  %295 = and i64 %293, 4294967295
  %296 = mul nuw nsw i64 %295, 100
  %297 = lshr i64 %296, 32
  %298 = getelementptr inbounds nuw i8, ptr %263, i64 %294
  %299 = shl nuw nsw i64 %297, 1
  %300 = getelementptr inbounds nuw [201 x i8], ptr @_ZZN3fmt3v116detail7digits2EyE4data, i64 0, i64 %299
  %301 = load i16, ptr %300, align 2
  store i16 %301, ptr %298, align 1
  %302 = add nuw nsw i64 %294, 2
  %303 = icmp samesign ult i64 %302, %291
  br i1 %303, label %292, label %304, !llvm.loop !578

304:                                              ; preds = %292
  %305 = trunc nuw nsw i64 %297 to i32
  %306 = icmp slt i32 %118, 18
  br i1 %306, label %307, label %324

307:                                              ; preds = %283, %304
  %308 = phi i32 [ %305, %304 ], [ %287, %283 ]
  %309 = phi i64 [ %296, %304 ], [ %284, %283 ]
  %310 = trunc i64 %309 to i32
  %311 = sub nsw i32 17, %118
  %312 = zext nneg i32 %311 to i64
  %313 = getelementptr inbounds nuw [9 x i32], ptr @.str.56, i64 0, i64 %312
  %314 = load i32, ptr %313, align 4, !tbaa !579
  %315 = icmp ugt i32 %314, %310
  br i1 %315, label %316, label %339

316:                                              ; preds = %307
  %317 = lshr i32 %310, 31
  %318 = icmp ne i32 %260, 0
  %319 = or i1 %318, %99
  %320 = zext i1 %319 to i32
  %321 = or i32 %308, %320
  %322 = and i32 %317, %321
  %323 = trunc nuw i32 %322 to i1
  br i1 %323, label %339, label %377

324:                                              ; preds = %304
  %325 = icmp ugt i32 %260, 5
  br i1 %325, label %332, label %326

326:                                              ; preds = %324
  %327 = icmp eq i32 %260, 5
  br i1 %327, label %328, label %381

328:                                              ; preds = %326
  %329 = and i32 %305, 1
  %330 = icmp ne i32 %329, 0
  %331 = or i1 %99, %330
  br i1 %331, label %332, label %381

332:                                              ; preds = %249, %245, %324, %328
  %333 = load ptr, ptr %4, align 8, !tbaa !17
  %334 = zext nneg i32 %118 to i64
  %335 = getelementptr i8, ptr %333, i64 %334
  %336 = getelementptr i8, ptr %335, i64 -1
  %337 = load i8, ptr %336, align 1, !tbaa !10
  %338 = add i8 %337, 1
  store i8 %338, ptr %336, align 1, !tbaa !10
  br label %347

339:                                              ; preds = %316, %237, %228, %307
  %340 = load ptr, ptr %4, align 8, !tbaa !17
  %341 = zext nneg i32 %118 to i64
  %342 = getelementptr i8, ptr %340, i64 %341
  %343 = getelementptr i8, ptr %342, i64 -1
  %344 = load i8, ptr %343, align 1, !tbaa !10
  %345 = add i8 %344, 1
  store i8 %345, ptr %343, align 1, !tbaa !10
  %346 = icmp eq i32 %118, 1
  br i1 %346, label %357, label %347

347:                                              ; preds = %332, %339
  %348 = phi i64 [ %334, %332 ], [ %341, %339 ]
  br label %349

349:                                              ; preds = %347, %362
  %350 = phi i64 [ %348, %347 ], [ %351, %362 ]
  %351 = add nsw i64 %350, -1
  %352 = load ptr, ptr %4, align 8, !tbaa !17
  %353 = and i64 %351, 4294967295
  %354 = getelementptr inbounds nuw i8, ptr %352, i64 %353
  %355 = load i8, ptr %354, align 1, !tbaa !10
  %356 = icmp sgt i8 %355, 57
  br i1 %356, label %362, label %357

357:                                              ; preds = %349, %362, %339
  %358 = phi i64 [ 1, %339 ], [ %348, %362 ], [ %348, %349 ]
  %359 = load ptr, ptr %4, align 8, !tbaa !17
  %360 = load i8, ptr %359, align 1, !tbaa !10
  %361 = icmp sgt i8 %360, 57
  br i1 %361, label %370, label %377

362:                                              ; preds = %349
  store i8 48, ptr %354, align 1, !tbaa !10
  %363 = load ptr, ptr %4, align 8, !tbaa !17
  %364 = getelementptr i8, ptr %363, i64 %350
  %365 = getelementptr i8, ptr %364, i64 -2
  %366 = load i8, ptr %365, align 1, !tbaa !10
  %367 = add i8 %366, 1
  store i8 %367, ptr %365, align 1, !tbaa !10
  %368 = trunc nuw i64 %350 to i32
  %369 = icmp sgt i32 %368, 2
  br i1 %369, label %349, label %357, !llvm.loop !581

370:                                              ; preds = %357
  store i8 49, ptr %359, align 1, !tbaa !10
  br i1 %11, label %375, label %371

371:                                              ; preds = %370
  %372 = add nuw nsw i32 %118, 1
  %373 = load ptr, ptr %4, align 8, !tbaa !17
  %374 = getelementptr inbounds nuw i8, ptr %373, i64 %358
  store i8 48, ptr %374, align 1, !tbaa !10
  br label %377

375:                                              ; preds = %370
  %376 = add nsw i32 %148, 1
  store i32 %376, ptr %6, align 4, !tbaa !11
  br label %377

377:                                              ; preds = %316, %237, %357, %375, %371
  %378 = phi i32 [ %372, %371 ], [ %118, %375 ], [ %118, %357 ], [ %118, %237 ], [ %118, %316 ]
  %379 = icmp sgt i32 %378, -1
  br i1 %379, label %381, label %380

380:                                              ; preds = %377
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

381:                                              ; preds = %249, %326, %247, %328, %377
  %382 = phi i32 [ %378, %377 ], [ %118, %328 ], [ 9, %247 ], [ %118, %326 ], [ 9, %249 ]
  %383 = zext nneg i32 %382 to i64
  %384 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %385 = load i64, ptr %384, align 8, !tbaa !18
  %386 = icmp ult i64 %385, %383
  br i1 %386, label %387, label %394

387:                                              ; preds = %381
  %388 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %389 = load ptr, ptr %388, align 8, !tbaa !13
  call void %389(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %383)
  %390 = load i64, ptr %384, align 8, !tbaa !18
  br label %394

391:                                              ; preds = %117
  %392 = add nsw i32 %102, -1
  %393 = add nsw i32 %392, %74
  store i32 %393, ptr %6, align 4, !tbaa !11
  br i1 %3, label %398, label %413

394:                                              ; preds = %387, %381
  %395 = phi i64 [ %385, %381 ], [ %390, %387 ]
  %396 = call noundef i64 @llvm.umin.i64(i64 %383, i64 %395)
  %397 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 %396, ptr %397, align 8, !tbaa !37
  br label %431

398:                                              ; preds = %391
  %399 = fptrunc double %0 to float
  %400 = bitcast float %399 to i32
  %401 = and i32 %400, 8388607
  %402 = zext nneg i32 %401 to i128
  %403 = and i32 %400, 2139095040
  %404 = icmp eq i32 %403, 0
  %405 = lshr exact i32 %403, 23
  %406 = or disjoint i128 %402, 8388608
  %407 = add nsw i32 %405, -150
  %408 = select i1 %404, i128 %402, i128 %406
  %409 = select i1 %404, i32 -149, i32 %407
  %410 = icmp eq i32 %401, 0
  %411 = icmp samesign ugt i32 %403, 16777215
  %412 = and i1 %410, %411
  br label %422

413:                                              ; preds = %391
  %414 = zext nneg i64 %50 to i128
  %415 = or disjoint i128 %414, 4503599627370496
  %416 = add nsw i32 %53, -1075
  %417 = select i1 %54, i128 %414, i128 %415
  %418 = select i1 %54, i32 -1074, i32 %416
  %419 = icmp eq i64 %50, 0
  %420 = icmp samesign ugt i64 %51, 9007199254740991
  %421 = and i1 %419, %420
  br label %422

422:                                              ; preds = %413, %398
  %423 = phi i128 [ %408, %398 ], [ %417, %413 ]
  %424 = phi i32 [ %409, %398 ], [ %418, %413 ]
  %425 = phi i1 [ %412, %398 ], [ %421, %413 ]
  %426 = zext i1 %425 to i32
  %427 = or disjoint i32 %426, 4
  %428 = select i1 %11, i32 %426, i32 %427
  %429 = call i32 @llvm.umin.i32(i32 %118, i32 767)
  store i128 %423, ptr %8, align 16, !tbaa !49
  %430 = getelementptr inbounds nuw i8, ptr %8, i64 16
  store i32 %424, ptr %430, align 16, !tbaa !11
  call void @_ZN3fmt3v116detail13format_dragonENS1_8basic_fpIoEEjiRNS1_6bufferIcEERi(ptr noundef nonnull %8, i32 noundef %428, i32 noundef %429, ptr noundef nonnull align 8 dereferenceable(32) %4, ptr noundef nonnull align 4 dereferenceable(4) %6)
  br label %431

431:                                              ; preds = %394, %125, %145, %144, %422
  br i1 %11, label %432, label %468

432:                                              ; preds = %431
  %433 = load i32, ptr %2, align 4, !tbaa !53
  %434 = and i32 %433, 8192
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %468

436:                                              ; preds = %432
  %437 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %438 = load i64, ptr %437, align 8, !tbaa !37
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %453, label %440

440:                                              ; preds = %436
  %441 = load i32, ptr %6, align 4
  %442 = load ptr, ptr %4, align 8, !tbaa !17
  br label %443

443:                                              ; preds = %440, %450
  %444 = phi i64 [ %438, %440 ], [ %446, %450 ]
  %445 = phi i32 [ %441, %440 ], [ %451, %450 ]
  %446 = add i64 %444, -1
  %447 = getelementptr inbounds nuw i8, ptr %442, i64 %446
  %448 = load i8, ptr %447, align 1, !tbaa !10
  %449 = icmp eq i8 %448, 48
  br i1 %449, label %450, label %456

450:                                              ; preds = %443
  %451 = add nsw i32 %445, 1
  store i32 %451, ptr %6, align 4, !tbaa !11
  %452 = icmp eq i64 %446, 0
  br i1 %452, label %453, label %443, !llvm.loop !582

453:                                              ; preds = %450, %436
  %454 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %455 = load i64, ptr %454, align 8, !tbaa !18
  br label %464

456:                                              ; preds = %443
  %457 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %458 = load i64, ptr %457, align 8, !tbaa !18
  %459 = icmp ugt i64 %444, %458
  br i1 %459, label %460, label %464

460:                                              ; preds = %456
  %461 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %462 = load ptr, ptr %461, align 8, !tbaa !13
  call void %462(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %444)
  %463 = load i64, ptr %457, align 8, !tbaa !18
  br label %464

464:                                              ; preds = %453, %456, %460
  %465 = phi i64 [ %444, %456 ], [ %444, %460 ], [ 0, %453 ]
  %466 = phi i64 [ %458, %456 ], [ %463, %460 ], [ %455, %453 ]
  %467 = call noundef i64 @llvm.umin.i64(i64 %465, i64 %466)
  store i64 %467, ptr %437, align 8, !tbaa !37
  br label %468

468:                                              ; preds = %464, %432, %431
  %469 = load i32, ptr %6, align 4, !tbaa !11
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #30
  br label %470

470:                                              ; preds = %468, %42, %28
  %471 = phi i32 [ 0, %28 ], [ %47, %42 ], [ %469, %468 ]
  ret i32 %471
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail11write_floatIcNS0_14basic_appenderIcEEdEET0_S5_T1_NS0_12format_specsENS1_10locale_refE(i64 %0, double noundef %1, ptr noundef %2, i64 %3) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %5 = alloca %class.anon.45, align 8
  %6 = alloca %class.anon.30, align 8
  %7 = alloca %"struct.fmt::v11::format_specs", align 4
  %8 = alloca %"struct.fmt::v11::detail::dragonbox::decimal_fp.37", align 8
  %9 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  %10 = alloca %"struct.fmt::v11::format_specs", align 4
  %11 = alloca %"struct.fmt::v11::detail::big_decimal_fp", align 8
  %12 = inttoptr i64 %0 to ptr
  %13 = bitcast double %1 to i64
  %14 = icmp slt i64 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = load i32, ptr %2, align 4, !tbaa !53
  %17 = lshr i32 %16, 10
  %18 = and i32 %17, 3
  br label %19

19:                                               ; preds = %4, %15
  %20 = phi i32 [ %18, %15 ], [ 1, %4 ]
  %21 = tail call double @llvm.fabs.f64(double %1)
  %22 = fcmp ueq double %21, 0x7FF0000000000000
  br i1 %22, label %23, label %43

23:                                               ; preds = %19
  %24 = fcmp uno double %1, 0.000000e+00
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %7, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 16, i1 false)
  %25 = load i32, ptr %7, align 4, !tbaa !53
  %26 = and i32 %25, 229376
  %27 = icmp eq i32 %26, 32768
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds nuw i8, ptr %7, i64 4
  %30 = load i8, ptr %29, align 4, !tbaa !10
  %31 = icmp eq i8 %30, 48
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8 32, ptr %29, align 4, !tbaa !10
  br label %33

33:                                               ; preds = %23, %28, %32
  %34 = and i32 %25, 4096
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, ptr @.str.28, ptr @.str.27
  %37 = select i1 %35, ptr @.str.30, ptr @.str.29
  %38 = select i1 %24, ptr %36, ptr %37
  %39 = icmp eq i32 %20, 0
  %40 = select i1 %39, i64 3, i64 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #30
  store i32 %20, ptr %6, align 8, !tbaa !193
  %41 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store ptr %38, ptr %41, align 8, !tbaa !196
  %42 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEERZNS1_15write_nonfiniteIcS5_EET0_S7_bNS0_12format_specsENS0_4signEEUlS5_E_EET1_SC_RKS8_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %7, i64 noundef %40, i64 noundef %40, ptr noundef nonnull align 8 dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #30
  br label %150

43:                                               ; preds = %19
  %44 = load i32, ptr %2, align 4, !tbaa !53
  %45 = and i32 %44, 56
  %46 = icmp eq i32 %45, 32
  %47 = icmp ne i32 %20, 0
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %74

49:                                               ; preds = %43
  %50 = shl nuw nsw i32 %20, 3
  %51 = lshr i32 539700480, %50
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds nuw i8, ptr %12, i64 8
  %54 = load i64, ptr %53, align 8, !tbaa !37
  %55 = add i64 %54, 1
  %56 = getelementptr inbounds nuw i8, ptr %12, i64 16
  %57 = load i64, ptr %56, align 8, !tbaa !18
  %58 = icmp ugt i64 %55, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds nuw i8, ptr %12, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %12, i64 noundef %55)
  %62 = load i64, ptr %53, align 8, !tbaa !37
  %63 = add i64 %62, 1
  br label %64

64:                                               ; preds = %49, %59
  %65 = phi i64 [ %55, %49 ], [ %63, %59 ]
  %66 = phi i64 [ %54, %49 ], [ %62, %59 ]
  %67 = load ptr, ptr %12, align 8, !tbaa !17
  store i64 %65, ptr %53, align 8, !tbaa !37
  %68 = getelementptr inbounds nuw i8, ptr %67, i64 %66
  store i8 %52, ptr %68, align 1, !tbaa !10
  %69 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %70 = load i32, ptr %69, align 4, !tbaa !125
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  %73 = add nsw i32 %70, -1
  store i32 %73, ptr %69, align 4, !tbaa !125
  br label %74

74:                                               ; preds = %64, %72, %43
  %75 = phi i32 [ 0, %72 ], [ 0, %64 ], [ %20, %43 ]
  %76 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %77 = load i32, ptr %76, align 4, !tbaa !55
  %78 = icmp slt i32 %77, 0
  %79 = load i32, ptr %2, align 4, !tbaa !53
  br i1 %78, label %80, label %85

80:                                               ; preds = %74
  %81 = and i32 %79, 7
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #30
  call void @_ZN3fmt3v116detail9dragonbox10to_decimalIdEENS2_10decimal_fpIT_EES5_(ptr dead_on_unwind nonnull writable sret(%"struct.fmt::v11::detail::dragonbox::decimal_fp.37") align 8 %8, double noundef %1) #30
  %84 = call i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %8, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %75, i32 noundef 16, i64 %3)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #30
  br label %150

85:                                               ; preds = %80, %74
  %86 = phi i32 [ %77, %74 ], [ 6, %80 ]
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %9) #30
  %87 = getelementptr inbounds nuw i8, ptr %9, i64 16
  %88 = getelementptr inbounds nuw i8, ptr %9, i64 24
  %89 = getelementptr inbounds nuw i8, ptr %9, i64 8
  store i64 0, ptr %89, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %88, align 8, !tbaa !13
  %90 = getelementptr inbounds nuw i8, ptr %9, i64 32
  store ptr %90, ptr %9, align 8, !tbaa !17
  store i64 500, ptr %87, align 8, !tbaa !18
  %91 = trunc i32 %79 to i8
  %92 = and i8 %91, 7
  switch i8 %92, label %121 [
    i8 4, label %93
    i8 1, label %108
    i8 2, label %117
  ]

93:                                               ; preds = %85
  %94 = icmp eq i32 %75, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %93
  %96 = shl nuw nsw i32 %75, 3
  %97 = lshr i32 539700480, %96
  %98 = trunc i32 %97 to i8
  store i64 1, ptr %89, align 8, !tbaa !37
  store i8 %98, ptr %90, align 8, !tbaa !10
  br label %99

99:                                               ; preds = %95, %93
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %10, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 16, i1 false)
  invoke void @_ZN3fmt3v116detail15format_hexfloatIdTnNSt3__19enable_ifIXntsr16is_double_doubleIT_EE5valueEiE4typeELi0EEEvS5_NS0_12format_specsERNS1_6bufferIcEE(double noundef %1, ptr noundef nonnull %10, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %100 unwind label %106

100:                                              ; preds = %99
  %101 = load ptr, ptr %9, align 8, !tbaa !17
  %102 = load i64, ptr %89, align 8, !tbaa !37
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #30
  store ptr %101, ptr %5, align 8, !tbaa !19
  %103 = getelementptr inbounds nuw i8, ptr %5, i64 8
  store i64 %102, ptr %103, align 8, !tbaa !20
  %104 = invoke i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE2ENS0_14basic_appenderIcEERZNS1_11write_bytesIcLS3_2ES5_EET1_S7_NS0_17basic_string_viewIcEERKNS0_12format_specsEEUlS5_E_EES7_S7_SC_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %102, i64 noundef %102, ptr noundef nonnull align 8 dereferenceable(16) %5)
          to label %105 unwind label %106

105:                                              ; preds = %100
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #30
  br label %138

106:                                              ; preds = %100, %110, %99
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %144

108:                                              ; preds = %85
  %109 = icmp eq i32 %86, 2147483647
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  invoke void @_ZN3fmt3v1112report_errorEPKc(ptr noundef nonnull @.str.37) #31
          to label %111 unwind label %106

111:                                              ; preds = %110
  unreachable

112:                                              ; preds = %108
  %113 = add nuw nsw i32 %86, 1
  %114 = icmp eq i32 %77, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %112
  %116 = or i32 %79, 8192
  store i32 %116, ptr %2, align 4, !tbaa !53
  br label %123

117:                                              ; preds = %85
  %118 = icmp eq i32 %77, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %117
  %120 = or i32 %79, 8192
  store i32 %120, ptr %2, align 4, !tbaa !53
  br label %123

121:                                              ; preds = %85
  %122 = call i32 @llvm.umax.i32(i32 %86, i32 1)
  br label %123

123:                                              ; preds = %121, %119, %117, %112, %115
  %124 = phi i32 [ %113, %115 ], [ %113, %112 ], [ %86, %119 ], [ %86, %117 ], [ %122, %121 ]
  %125 = invoke noundef i32 @_ZN3fmt3v116detail12format_floatIdEEiT_iRKNS0_12format_specsEbRNS1_6bufferIcEE(double noundef %1, i32 noundef %124, ptr noundef nonnull align 4 dereferenceable(16) %2, i1 noundef zeroext false, ptr noundef nonnull align 8 dereferenceable(32) %9)
          to label %126 unwind label %134

126:                                              ; preds = %123
  store i32 %124, ptr %76, align 4, !tbaa !55
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #30
  %127 = load ptr, ptr %9, align 8, !tbaa !17
  store ptr %127, ptr %11, align 8, !tbaa !317
  %128 = getelementptr inbounds nuw i8, ptr %11, i64 8
  %129 = load i64, ptr %89, align 8, !tbaa !37
  %130 = trunc i64 %129 to i32
  store i32 %130, ptr %128, align 8, !tbaa !319
  %131 = getelementptr inbounds nuw i8, ptr %11, i64 12
  store i32 %125, ptr %131, align 4, !tbaa !320
  %132 = invoke i64 @_ZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refE(i64 %0, ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 4 dereferenceable(16) %2, i32 noundef %75, i32 noundef 16, i64 %3)
          to label %133 unwind label %136

133:                                              ; preds = %126
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #30
  br label %138

134:                                              ; preds = %123
  %135 = landingpad { ptr, i32 }
          cleanup
  br label %144

136:                                              ; preds = %126
  %137 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #30
  br label %144

138:                                              ; preds = %105, %133
  %139 = phi i64 [ %132, %133 ], [ %104, %105 ]
  %140 = load ptr, ptr %9, align 8, !tbaa !17
  %141 = icmp eq ptr %140, %90
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  call void @free(ptr noundef %140)
  br label %143

143:                                              ; preds = %138, %142
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  br label %150

144:                                              ; preds = %134, %136, %106
  %145 = phi { ptr, i32 } [ %107, %106 ], [ %137, %136 ], [ %135, %134 ]
  %146 = load ptr, ptr %9, align 8, !tbaa !17
  %147 = icmp eq ptr %146, %90
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @free(ptr noundef %146)
  br label %149

149:                                              ; preds = %144, %148
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %9) #30
  resume { ptr, i32 } %145

150:                                              ; preds = %83, %143, %33
  %151 = phi i64 [ %42, %33 ], [ %139, %143 ], [ %84, %83 ]
  ret i64 %151
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsE(i64 %0, ptr noundef %1, ptr noundef nonnull align 4 dereferenceable(16) %2) local_unnamed_addr #0 comdat {
  %4 = alloca %class.anon.72, align 8
  %5 = alloca [7 x i8], align 1
  %6 = ptrtoint ptr %5 to i64
  %7 = alloca i64, align 8
  %8 = alloca %class.anon.69, align 8
  %9 = alloca [7 x i8], align 1
  %10 = ptrtoint ptr %9 to i64
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.fmt::v11::detail::counting_buffer", align 8
  %14 = alloca %"class.fmt::v11::basic_string_view", align 8
  %15 = alloca %class.anon.67, align 8
  %16 = load ptr, ptr %1, align 8, !tbaa !38
  %17 = ptrtoint ptr %16 to i64
  %18 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %19 = load i64, ptr %18, align 8, !tbaa !39
  %20 = getelementptr inbounds nuw i8, ptr %2, i64 12
  %21 = load i32, ptr %20, align 4, !tbaa !55
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %157

23:                                               ; preds = %3
  %24 = zext nneg i32 %21 to i64
  %25 = icmp ugt i64 %19, %24
  br i1 %25, label %26, label %157

26:                                               ; preds = %23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  store i64 %24, ptr %11, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #30
  store i64 %19, ptr %12, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #30
  store ptr %16, ptr %8, align 8, !tbaa !19
  %27 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store ptr %11, ptr %27, align 8, !tbaa !282
  %28 = getelementptr inbounds nuw i8, ptr %8, i64 16
  store ptr %12, ptr %28, align 8, !tbaa !282
  %29 = icmp ugt i64 %19, 3
  br i1 %29, label %30, label %39

30:                                               ; preds = %26
  %31 = getelementptr inbounds nuw i8, ptr %16, i64 %19
  %32 = getelementptr inbounds i8, ptr %31, i64 -3
  br label %33

33:                                               ; preds = %36, %30
  %34 = phi ptr [ %16, %30 ], [ %37, %36 ]
  %35 = icmp ult ptr %34, %32
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = call noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_16code_point_indexENS0_17basic_string_viewIcEEyEUljS4_E_EEvS4_T_ENKUlPKcS8_E_clES8_S8_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %34, ptr noundef %34)
  %38 = icmp eq ptr %37, null
  br i1 %38, label %155, label %33, !llvm.loop !583

39:                                               ; preds = %33, %26
  %40 = phi ptr [ %16, %26 ], [ %34, %33 ]
  %41 = getelementptr inbounds nuw i8, ptr %16, i64 %19
  %42 = ptrtoint ptr %41 to i64
  %43 = ptrtoint ptr %40 to i64
  %44 = sub i64 %42, %43
  %45 = icmp sgt i64 %44, -1
  br i1 %45, label %47, label %46

46:                                               ; preds = %39
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

47:                                               ; preds = %39
  %48 = icmp eq ptr %41, %40
  br i1 %48, label %155, label %49

49:                                               ; preds = %47
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %9) #30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %9, i8 0, i64 7, i1 false)
  %50 = icmp ult i64 %44, 4
  %51 = sub i64 %10, %43
  %52 = icmp ult i64 %51, 32
  %53 = or i1 %50, %52
  br i1 %53, label %89, label %54

54:                                               ; preds = %49
  %55 = icmp ult i64 %44, 32
  br i1 %55, label %75, label %56

56:                                               ; preds = %54
  %57 = and i64 %44, 9223372036854775776
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ 0, %56 ], [ %66, %58 ]
  %60 = getelementptr i8, ptr %9, i64 %59
  %61 = getelementptr i8, ptr %40, i64 %59
  %62 = getelementptr i8, ptr %61, i64 16
  %63 = load <16 x i8>, ptr %61, align 1, !tbaa !10
  %64 = load <16 x i8>, ptr %62, align 1, !tbaa !10
  %65 = getelementptr i8, ptr %60, i64 16
  store <16 x i8> %63, ptr %60, align 1, !tbaa !10
  store <16 x i8> %64, ptr %65, align 1, !tbaa !10
  %66 = add nuw i64 %59, 32
  %67 = icmp eq i64 %66, %57
  br i1 %67, label %68, label %58, !llvm.loop !584

68:                                               ; preds = %58
  %69 = icmp eq i64 %44, %57
  br i1 %69, label %139, label %70

70:                                               ; preds = %68
  %71 = getelementptr i8, ptr %9, i64 %57
  %72 = getelementptr i8, ptr %40, i64 %57
  %73 = and i64 %44, 28
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %70, %54
  %76 = phi i64 [ %57, %70 ], [ 0, %54 ]
  %77 = and i64 %44, 9223372036854775804
  %78 = getelementptr i8, ptr %9, i64 %77
  %79 = getelementptr i8, ptr %40, i64 %77
  br label %80

80:                                               ; preds = %80, %75
  %81 = phi i64 [ %76, %75 ], [ %85, %80 ]
  %82 = getelementptr i8, ptr %9, i64 %81
  %83 = getelementptr i8, ptr %40, i64 %81
  %84 = load <4 x i8>, ptr %83, align 1, !tbaa !10
  store <4 x i8> %84, ptr %82, align 1, !tbaa !10
  %85 = add nuw i64 %81, 4
  %86 = icmp eq i64 %85, %77
  br i1 %86, label %87, label %80, !llvm.loop !585

87:                                               ; preds = %80
  %88 = icmp eq i64 %44, %77
  br i1 %88, label %139, label %89

89:                                               ; preds = %70, %87, %49
  %90 = phi ptr [ %71, %70 ], [ %9, %49 ], [ %78, %87 ]
  %91 = phi ptr [ %72, %70 ], [ %40, %49 ], [ %79, %87 ]
  %92 = add i64 %19, %17
  %93 = ptrtoint ptr %91 to i64
  %94 = sub i64 %92, %93
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %89, %97
  %98 = phi ptr [ %103, %97 ], [ %90, %89 ]
  %99 = phi ptr [ %101, %97 ], [ %91, %89 ]
  %100 = phi i64 [ %104, %97 ], [ 0, %89 ]
  %101 = getelementptr inbounds nuw i8, ptr %99, i64 1
  %102 = load i8, ptr %99, align 1, !tbaa !10
  %103 = getelementptr inbounds nuw i8, ptr %98, i64 1
  store i8 %102, ptr %98, align 1, !tbaa !10
  %104 = add i64 %100, 1
  %105 = icmp eq i64 %104, %95
  br i1 %105, label %106, label %97, !llvm.loop !586

106:                                              ; preds = %97, %89
  %107 = phi ptr [ %90, %89 ], [ %103, %97 ]
  %108 = phi ptr [ %91, %89 ], [ %101, %97 ]
  %109 = sub i64 %93, %92
  %110 = icmp ugt i64 %109, -8
  br i1 %110, label %139, label %111

111:                                              ; preds = %106, %111
  %112 = phi ptr [ %137, %111 ], [ %107, %106 ]
  %113 = phi ptr [ %135, %111 ], [ %108, %106 ]
  %114 = getelementptr inbounds nuw i8, ptr %113, i64 1
  %115 = load i8, ptr %113, align 1, !tbaa !10
  %116 = getelementptr inbounds nuw i8, ptr %112, i64 1
  store i8 %115, ptr %112, align 1, !tbaa !10
  %117 = getelementptr inbounds nuw i8, ptr %113, i64 2
  %118 = load i8, ptr %114, align 1, !tbaa !10
  %119 = getelementptr inbounds nuw i8, ptr %112, i64 2
  store i8 %118, ptr %116, align 1, !tbaa !10
  %120 = getelementptr inbounds nuw i8, ptr %113, i64 3
  %121 = load i8, ptr %117, align 1, !tbaa !10
  %122 = getelementptr inbounds nuw i8, ptr %112, i64 3
  store i8 %121, ptr %119, align 1, !tbaa !10
  %123 = getelementptr inbounds nuw i8, ptr %113, i64 4
  %124 = load i8, ptr %120, align 1, !tbaa !10
  %125 = getelementptr inbounds nuw i8, ptr %112, i64 4
  store i8 %124, ptr %122, align 1, !tbaa !10
  %126 = getelementptr inbounds nuw i8, ptr %113, i64 5
  %127 = load i8, ptr %123, align 1, !tbaa !10
  %128 = getelementptr inbounds nuw i8, ptr %112, i64 5
  store i8 %127, ptr %125, align 1, !tbaa !10
  %129 = getelementptr inbounds nuw i8, ptr %113, i64 6
  %130 = load i8, ptr %126, align 1, !tbaa !10
  %131 = getelementptr inbounds nuw i8, ptr %112, i64 6
  store i8 %130, ptr %128, align 1, !tbaa !10
  %132 = getelementptr inbounds nuw i8, ptr %113, i64 7
  %133 = load i8, ptr %129, align 1, !tbaa !10
  %134 = getelementptr inbounds nuw i8, ptr %112, i64 7
  store i8 %133, ptr %131, align 1, !tbaa !10
  %135 = getelementptr inbounds nuw i8, ptr %113, i64 8
  %136 = load i8, ptr %132, align 1, !tbaa !10
  %137 = getelementptr inbounds nuw i8, ptr %112, i64 8
  store i8 %136, ptr %134, align 1, !tbaa !10
  %138 = icmp eq ptr %135, %41
  br i1 %138, label %139, label %111, !llvm.loop !587

139:                                              ; preds = %106, %111, %87, %68
  %140 = getelementptr inbounds nuw i8, ptr %9, i64 %44
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi ptr [ %149, %141 ], [ %9, %139 ]
  %143 = phi ptr [ %151, %141 ], [ %40, %139 ]
  %144 = call noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_16code_point_indexENS0_17basic_string_viewIcEEyEUljS4_E_EEvS4_T_ENKUlPKcS8_E_clES8_S8_(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %142, ptr noundef %143)
  %145 = icmp ne ptr %144, null
  %146 = ptrtoint ptr %144 to i64
  %147 = ptrtoint ptr %142 to i64
  %148 = sub i64 %146, %147
  %149 = select i1 %145, ptr %144, ptr %142
  %150 = select i1 %145, i64 %148, i64 0
  %151 = getelementptr inbounds i8, ptr %143, i64 %150
  %152 = icmp ult ptr %149, %140
  %153 = select i1 %145, i1 %152, i1 false
  br i1 %153, label %141, label %154, !llvm.loop !588

154:                                              ; preds = %141
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %9) #30
  br label %155

155:                                              ; preds = %36, %47, %154
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #30
  %156 = load i64, ptr %12, align 8, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  br label %157

157:                                              ; preds = %155, %23, %3
  %158 = phi i64 [ %156, %155 ], [ %19, %23 ], [ %19, %3 ]
  %159 = load i32, ptr %2, align 4, !tbaa !53
  %160 = and i32 %159, 7
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %177

162:                                              ; preds = %157
  call void @llvm.lifetime.start.p0(i64 296, ptr nonnull %13) #30
  %163 = getelementptr inbounds nuw i8, ptr %13, i64 32
  store ptr %163, ptr %13, align 8, !tbaa !17
  %164 = getelementptr inbounds nuw i8, ptr %13, i64 8
  store i64 0, ptr %164, align 8, !tbaa !37
  %165 = getelementptr inbounds nuw i8, ptr %13, i64 16
  store i64 256, ptr %165, align 8, !tbaa !18
  %166 = getelementptr inbounds nuw i8, ptr %13, i64 24
  store ptr @_ZN3fmt3v116detail15counting_bufferIcE4growERNS1_6bufferIcEEy, ptr %166, align 8, !tbaa !13
  %167 = getelementptr inbounds nuw i8, ptr %13, i64 288
  store i64 0, ptr %167, align 8, !tbaa !589
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false), !tbaa.struct !591
  %168 = ptrtoint ptr %13 to i64
  %169 = call i64 @_ZN3fmt3v116detail20write_escaped_stringIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EE(i64 %168, ptr noundef nonnull %14)
  %170 = load i64, ptr %167, align 8, !tbaa !589
  %171 = load i64, ptr %164, align 8, !tbaa !37
  %172 = add i64 %171, %170
  call void @llvm.lifetime.end.p0(i64 296, ptr nonnull %13) #30
  %173 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %174 = load i32, ptr %173, align 4, !tbaa !125
  %175 = icmp eq i32 %174, 0
  %176 = select i1 %175, i64 0, i64 %172
  br label %310

177:                                              ; preds = %157
  %178 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %179 = load i32, ptr %178, align 4, !tbaa !125
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %310, label %181

181:                                              ; preds = %177
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #30
  store i64 0, ptr %7, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #30
  store ptr %7, ptr %4, align 8, !tbaa !282
  %182 = icmp ugt i64 %158, 3
  br i1 %182, label %183, label %192

183:                                              ; preds = %181
  %184 = getelementptr inbounds nuw i8, ptr %16, i64 %158
  %185 = getelementptr inbounds i8, ptr %184, i64 -3
  br label %186

186:                                              ; preds = %189, %183
  %187 = phi ptr [ %16, %183 ], [ %190, %189 ]
  %188 = icmp ult ptr %187, %185
  br i1 %188, label %189, label %192

189:                                              ; preds = %186
  %190 = call noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_13compute_widthENS0_17basic_string_viewIcEEE17count_code_pointsEEvS4_T_ENKUlPKcS8_E_clES8_S8_(ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef %187, ptr noundef %187)
  %191 = icmp eq ptr %190, null
  br i1 %191, label %308, label %186, !llvm.loop !592

192:                                              ; preds = %186, %181
  %193 = phi ptr [ %16, %181 ], [ %187, %186 ]
  %194 = getelementptr inbounds nuw i8, ptr %16, i64 %158
  %195 = ptrtoint ptr %194 to i64
  %196 = ptrtoint ptr %193 to i64
  %197 = sub i64 %195, %196
  %198 = icmp sgt i64 %197, -1
  br i1 %198, label %200, label %199

199:                                              ; preds = %192
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

200:                                              ; preds = %192
  %201 = icmp eq ptr %194, %193
  br i1 %201, label %308, label %202

202:                                              ; preds = %200
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %5) #30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %5, i8 0, i64 7, i1 false)
  %203 = icmp ult i64 %197, 4
  %204 = sub i64 %6, %196
  %205 = icmp ult i64 %204, 32
  %206 = or i1 %203, %205
  br i1 %206, label %242, label %207

207:                                              ; preds = %202
  %208 = icmp ult i64 %197, 32
  br i1 %208, label %228, label %209

209:                                              ; preds = %207
  %210 = and i64 %197, 9223372036854775776
  br label %211

211:                                              ; preds = %211, %209
  %212 = phi i64 [ 0, %209 ], [ %219, %211 ]
  %213 = getelementptr i8, ptr %5, i64 %212
  %214 = getelementptr i8, ptr %193, i64 %212
  %215 = getelementptr i8, ptr %214, i64 16
  %216 = load <16 x i8>, ptr %214, align 1, !tbaa !10
  %217 = load <16 x i8>, ptr %215, align 1, !tbaa !10
  %218 = getelementptr i8, ptr %213, i64 16
  store <16 x i8> %216, ptr %213, align 1, !tbaa !10
  store <16 x i8> %217, ptr %218, align 1, !tbaa !10
  %219 = add nuw i64 %212, 32
  %220 = icmp eq i64 %219, %210
  br i1 %220, label %221, label %211, !llvm.loop !593

221:                                              ; preds = %211
  %222 = icmp eq i64 %197, %210
  br i1 %222, label %292, label %223

223:                                              ; preds = %221
  %224 = getelementptr i8, ptr %5, i64 %210
  %225 = getelementptr i8, ptr %193, i64 %210
  %226 = and i64 %197, 28
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %242, label %228

228:                                              ; preds = %223, %207
  %229 = phi i64 [ %210, %223 ], [ 0, %207 ]
  %230 = and i64 %197, 9223372036854775804
  %231 = getelementptr i8, ptr %5, i64 %230
  %232 = getelementptr i8, ptr %193, i64 %230
  br label %233

233:                                              ; preds = %233, %228
  %234 = phi i64 [ %229, %228 ], [ %238, %233 ]
  %235 = getelementptr i8, ptr %5, i64 %234
  %236 = getelementptr i8, ptr %193, i64 %234
  %237 = load <4 x i8>, ptr %236, align 1, !tbaa !10
  store <4 x i8> %237, ptr %235, align 1, !tbaa !10
  %238 = add nuw i64 %234, 4
  %239 = icmp eq i64 %238, %230
  br i1 %239, label %240, label %233, !llvm.loop !594

240:                                              ; preds = %233
  %241 = icmp eq i64 %197, %230
  br i1 %241, label %292, label %242

242:                                              ; preds = %223, %240, %202
  %243 = phi ptr [ %224, %223 ], [ %5, %202 ], [ %231, %240 ]
  %244 = phi ptr [ %225, %223 ], [ %193, %202 ], [ %232, %240 ]
  %245 = add i64 %158, %17
  %246 = ptrtoint ptr %244 to i64
  %247 = sub i64 %245, %246
  %248 = and i64 %247, 7
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %259, label %250

250:                                              ; preds = %242, %250
  %251 = phi ptr [ %256, %250 ], [ %243, %242 ]
  %252 = phi ptr [ %254, %250 ], [ %244, %242 ]
  %253 = phi i64 [ %257, %250 ], [ 0, %242 ]
  %254 = getelementptr inbounds nuw i8, ptr %252, i64 1
  %255 = load i8, ptr %252, align 1, !tbaa !10
  %256 = getelementptr inbounds nuw i8, ptr %251, i64 1
  store i8 %255, ptr %251, align 1, !tbaa !10
  %257 = add i64 %253, 1
  %258 = icmp eq i64 %257, %248
  br i1 %258, label %259, label %250, !llvm.loop !595

259:                                              ; preds = %250, %242
  %260 = phi ptr [ %243, %242 ], [ %256, %250 ]
  %261 = phi ptr [ %244, %242 ], [ %254, %250 ]
  %262 = sub i64 %246, %245
  %263 = icmp ugt i64 %262, -8
  br i1 %263, label %292, label %264

264:                                              ; preds = %259, %264
  %265 = phi ptr [ %290, %264 ], [ %260, %259 ]
  %266 = phi ptr [ %288, %264 ], [ %261, %259 ]
  %267 = getelementptr inbounds nuw i8, ptr %266, i64 1
  %268 = load i8, ptr %266, align 1, !tbaa !10
  %269 = getelementptr inbounds nuw i8, ptr %265, i64 1
  store i8 %268, ptr %265, align 1, !tbaa !10
  %270 = getelementptr inbounds nuw i8, ptr %266, i64 2
  %271 = load i8, ptr %267, align 1, !tbaa !10
  %272 = getelementptr inbounds nuw i8, ptr %265, i64 2
  store i8 %271, ptr %269, align 1, !tbaa !10
  %273 = getelementptr inbounds nuw i8, ptr %266, i64 3
  %274 = load i8, ptr %270, align 1, !tbaa !10
  %275 = getelementptr inbounds nuw i8, ptr %265, i64 3
  store i8 %274, ptr %272, align 1, !tbaa !10
  %276 = getelementptr inbounds nuw i8, ptr %266, i64 4
  %277 = load i8, ptr %273, align 1, !tbaa !10
  %278 = getelementptr inbounds nuw i8, ptr %265, i64 4
  store i8 %277, ptr %275, align 1, !tbaa !10
  %279 = getelementptr inbounds nuw i8, ptr %266, i64 5
  %280 = load i8, ptr %276, align 1, !tbaa !10
  %281 = getelementptr inbounds nuw i8, ptr %265, i64 5
  store i8 %280, ptr %278, align 1, !tbaa !10
  %282 = getelementptr inbounds nuw i8, ptr %266, i64 6
  %283 = load i8, ptr %279, align 1, !tbaa !10
  %284 = getelementptr inbounds nuw i8, ptr %265, i64 6
  store i8 %283, ptr %281, align 1, !tbaa !10
  %285 = getelementptr inbounds nuw i8, ptr %266, i64 7
  %286 = load i8, ptr %282, align 1, !tbaa !10
  %287 = getelementptr inbounds nuw i8, ptr %265, i64 7
  store i8 %286, ptr %284, align 1, !tbaa !10
  %288 = getelementptr inbounds nuw i8, ptr %266, i64 8
  %289 = load i8, ptr %285, align 1, !tbaa !10
  %290 = getelementptr inbounds nuw i8, ptr %265, i64 8
  store i8 %289, ptr %287, align 1, !tbaa !10
  %291 = icmp eq ptr %288, %194
  br i1 %291, label %292, label %264, !llvm.loop !596

292:                                              ; preds = %259, %264, %240, %221
  %293 = getelementptr inbounds nuw i8, ptr %5, i64 %197
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi ptr [ %302, %294 ], [ %5, %292 ]
  %296 = phi ptr [ %304, %294 ], [ %193, %292 ]
  %297 = call noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_13compute_widthENS0_17basic_string_viewIcEEE17count_code_pointsEEvS4_T_ENKUlPKcS8_E_clES8_S8_(ptr noundef nonnull align 8 dereferenceable(8) %4, ptr noundef %295, ptr noundef %296)
  %298 = icmp ne ptr %297, null
  %299 = ptrtoint ptr %297 to i64
  %300 = ptrtoint ptr %295 to i64
  %301 = sub i64 %299, %300
  %302 = select i1 %298, ptr %297, ptr %295
  %303 = select i1 %298, i64 %301, i64 0
  %304 = getelementptr inbounds i8, ptr %296, i64 %303
  %305 = icmp ult ptr %302, %293
  %306 = select i1 %298, i1 %305, i1 false
  br i1 %306, label %294, label %307, !llvm.loop !597

307:                                              ; preds = %294
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %5) #30
  br label %308

308:                                              ; preds = %189, %200, %307
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #30
  %309 = load i64, ptr %7, align 8, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #30
  br label %310

310:                                              ; preds = %162, %177, %308
  %311 = phi i64 [ %158, %177 ], [ %158, %308 ], [ %172, %162 ]
  %312 = phi i64 [ 0, %177 ], [ %309, %308 ], [ %176, %162 ]
  %313 = zext i1 %161 to i8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %15) #30
  store i8 %313, ptr %15, align 8, !tbaa !598
  %314 = getelementptr inbounds nuw i8, ptr %15, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %314, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false), !tbaa.struct !591
  %315 = getelementptr inbounds nuw i8, ptr %15, i64 24
  store ptr %16, ptr %315, align 8, !tbaa !600
  %316 = getelementptr inbounds nuw i8, ptr %15, i64 32
  store i64 %311, ptr %316, align 8, !tbaa !601
  %317 = call i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEEZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsEEUlS5_E_EET1_SF_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %2, i64 noundef %311, i64 noundef %312, ptr noundef nonnull align 8 dereferenceable(40) %15)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %15) #30
  ret i64 %317
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail20write_escaped_stringIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EE(i64 %0, ptr noundef %1) local_unnamed_addr #0 comdat {
  %3 = alloca [7 x i8], align 1
  %4 = ptrtoint ptr %3 to i64
  %5 = alloca %"struct.fmt::v11::detail::find_escape_result", align 8
  %6 = inttoptr i64 %0 to ptr
  %7 = getelementptr inbounds nuw i8, ptr %6, i64 8
  %8 = load i64, ptr %7, align 8, !tbaa !37
  %9 = add i64 %8, 1
  %10 = getelementptr inbounds nuw i8, ptr %6, i64 16
  %11 = load i64, ptr %10, align 8, !tbaa !18
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds nuw i8, ptr %6, i64 24
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  tail call void %15(ptr noundef nonnull align 8 dereferenceable(32) %6, i64 noundef %9)
  %16 = load i64, ptr %7, align 8, !tbaa !37
  %17 = add i64 %16, 1
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi i64 [ %9, %2 ], [ %17, %13 ]
  %20 = phi i64 [ %8, %2 ], [ %16, %13 ]
  %21 = load ptr, ptr %6, align 8, !tbaa !17
  store i64 %19, ptr %7, align 8, !tbaa !37
  %22 = getelementptr inbounds nuw i8, ptr %21, i64 %20
  store i8 34, ptr %22, align 1, !tbaa !10
  %23 = load ptr, ptr %1, align 8, !tbaa !38
  %24 = ptrtoint ptr %23 to i64
  %25 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %26 = load i64, ptr %25, align 8, !tbaa !39
  %27 = getelementptr inbounds nuw i8, ptr %23, i64 %26
  %28 = getelementptr inbounds nuw i8, ptr %5, i64 8
  %29 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %30 = ptrtoint ptr %27 to i64
  %31 = add i64 %26, %24
  %32 = add i64 %26, %24
  %33 = add i64 %26, %24
  br label %34

34:                                               ; preds = %573, %18
  %35 = phi ptr [ %6, %18 ], [ %575, %573 ]
  %36 = phi ptr [ %23, %18 ], [ %570, %573 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #30
  call void @llvm.experimental.noalias.scope.decl(metadata !602)
  store ptr %27, ptr %5, align 8, !tbaa !137, !alias.scope !602
  store ptr null, ptr %28, align 8, !tbaa !139, !alias.scope !602
  store i32 0, ptr %29, align 8, !tbaa !140, !alias.scope !602
  %37 = ptrtoint ptr %36 to i64
  %38 = sub i64 %30, %37
  %39 = icmp sgt i64 %38, -1
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31, !noalias !602
  unreachable

41:                                               ; preds = %34
  %42 = icmp samesign ugt i64 %38, 3
  br i1 %42, label %43, label %133

43:                                               ; preds = %41
  %44 = getelementptr inbounds nuw i8, ptr %36, i64 %38
  %45 = getelementptr inbounds i8, ptr %44, i64 -3
  %46 = icmp ult ptr %36, %45
  br i1 %46, label %47, label %133

47:                                               ; preds = %43, %125
  %48 = phi ptr [ %126, %125 ], [ %36, %43 ]
  %49 = load i8, ptr %48, align 1, !tbaa !10
  %50 = zext i8 %49 to i32
  %51 = lshr i32 %50, 3
  %52 = zext nneg i32 %51 to i64
  %53 = getelementptr inbounds nuw [32 x i8], ptr @.str.57, i64 0, i64 %52
  %54 = load i8, ptr %53, align 1, !tbaa !10
  %55 = sext i8 %54 to i64
  %56 = getelementptr inbounds i8, ptr %48, i64 %55
  %57 = lshr i32 -2130771968, %51
  %58 = and i32 %57, 1
  %59 = zext nneg i32 %58 to i64
  %60 = getelementptr inbounds nuw i8, ptr %56, i64 %59
  %61 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.masks, i64 0, i64 %55
  %62 = load i32, ptr %61, align 4, !tbaa !11
  %63 = and i32 %62, %50
  %64 = shl nuw nsw i32 %63, 18
  %65 = getelementptr inbounds nuw i8, ptr %48, i64 1
  %66 = load i8, ptr %65, align 1, !tbaa !10
  %67 = and i8 %66, 63
  %68 = zext nneg i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 12
  %70 = or disjoint i32 %69, %64
  %71 = getelementptr inbounds nuw i8, ptr %48, i64 2
  %72 = load i8, ptr %71, align 1, !tbaa !10
  %73 = and i8 %72, 63
  %74 = zext nneg i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 6
  %76 = or disjoint i32 %75, %70
  %77 = getelementptr inbounds nuw i8, ptr %48, i64 3
  %78 = load i8, ptr %77, align 1, !tbaa !10
  %79 = and i8 %78, 63
  %80 = zext nneg i8 %79 to i32
  %81 = or disjoint i32 %76, %80
  %82 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shiftc, i64 0, i64 %55
  %83 = load i32, ptr %82, align 4, !tbaa !11
  %84 = lshr i32 %81, %83
  %85 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.mins, i64 0, i64 %55
  %86 = load i32, ptr %85, align 4, !tbaa !11
  %87 = icmp ult i32 %84, %86
  %88 = select i1 %87, i32 64, i32 0
  %89 = and i32 %84, 2147481600
  %90 = icmp eq i32 %89, 55296
  %91 = select i1 %90, i32 128, i32 0
  %92 = icmp samesign ugt i32 %84, 1114111
  %93 = select i1 %92, i32 256, i32 0
  %94 = lshr i8 %66, 2
  %95 = and i8 %94, 48
  %96 = lshr i8 %72, 4
  %97 = and i8 %96, 12
  %98 = lshr i8 %78, 6
  %99 = or disjoint i8 %97, %95
  %100 = or disjoint i8 %99, %98
  %101 = zext nneg i8 %100 to i32
  %102 = or disjoint i32 %88, %101
  %103 = or disjoint i32 %102, %93
  %104 = or disjoint i32 %103, %91
  %105 = xor i32 %104, 42
  %106 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shifte, i64 0, i64 %55
  %107 = load i32, ptr %106, align 4, !tbaa !11
  %108 = lshr i32 %105, %107
  %109 = icmp eq i32 %108, 0
  %110 = select i1 %109, i32 %84, i32 -1
  br i1 %109, label %111, label %117

111:                                              ; preds = %47
  %112 = ptrtoint ptr %60 to i64
  %113 = ptrtoint ptr %48 to i64
  %114 = sub i64 %112, %113
  %115 = icmp sgt i64 %114, -1
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

117:                                              ; preds = %111, %47
  %118 = phi i64 [ 1, %47 ], [ %114, %111 ]
  %119 = icmp ult i32 %110, 32
  br i1 %119, label %123, label %120

120:                                              ; preds = %117
  switch i32 %110, label %121 [
    i32 127, label %123
    i32 92, label %123
    i32 34, label %123
  ]

121:                                              ; preds = %120
  %122 = call noundef zeroext i1 @_ZN3fmt3v116detail12is_printableEj(i32 noundef %110)
  br i1 %122, label %125, label %123

123:                                              ; preds = %117, %120, %120, %120, %121
  %124 = getelementptr inbounds nuw i8, ptr %48, i64 %118
  store ptr %48, ptr %5, align 8, !tbaa !19
  store ptr %124, ptr %28, align 8, !tbaa !19
  store i32 %110, ptr %29, align 8, !tbaa !11
  br label %456

125:                                              ; preds = %121
  %126 = select i1 %109, ptr %60, ptr %65
  %127 = icmp ult ptr %126, %45
  br i1 %127, label %47, label %128, !llvm.loop !605

128:                                              ; preds = %125
  %129 = ptrtoint ptr %126 to i64
  %130 = sub i64 %30, %129
  %131 = icmp sgt i64 %130, -1
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

133:                                              ; preds = %43, %128, %41
  %134 = phi ptr [ %126, %128 ], [ %36, %41 ], [ %36, %43 ]
  %135 = phi i64 [ %130, %128 ], [ %38, %41 ], [ %38, %43 ]
  %136 = icmp eq ptr %27, %134
  br i1 %136, label %456, label %137

137:                                              ; preds = %133
  %138 = ptrtoint ptr %134 to i64
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %3) #30, !noalias !602
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %3, i8 0, i64 7, i1 false), !noalias !602
  %139 = sub i64 %31, %138
  %140 = icmp ult i64 %139, 4
  %141 = sub i64 %4, %138
  %142 = icmp ult i64 %141, 32
  %143 = or i1 %140, %142
  br i1 %143, label %179, label %144

144:                                              ; preds = %137
  %145 = icmp ult i64 %139, 32
  br i1 %145, label %165, label %146

146:                                              ; preds = %144
  %147 = and i64 %139, -32
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi i64 [ 0, %146 ], [ %156, %148 ]
  %150 = getelementptr i8, ptr %3, i64 %149
  %151 = getelementptr i8, ptr %134, i64 %149
  %152 = getelementptr i8, ptr %151, i64 16
  %153 = load <16 x i8>, ptr %151, align 1, !tbaa !10
  %154 = load <16 x i8>, ptr %152, align 1, !tbaa !10
  %155 = getelementptr i8, ptr %150, i64 16
  store <16 x i8> %153, ptr %150, align 1, !tbaa !10, !noalias !602
  store <16 x i8> %154, ptr %155, align 1, !tbaa !10, !noalias !602
  %156 = add nuw i64 %149, 32
  %157 = icmp eq i64 %156, %147
  br i1 %157, label %158, label %148, !llvm.loop !606

158:                                              ; preds = %148
  %159 = icmp eq i64 %139, %147
  br i1 %159, label %228, label %160

160:                                              ; preds = %158
  %161 = getelementptr i8, ptr %3, i64 %147
  %162 = getelementptr i8, ptr %134, i64 %147
  %163 = and i64 %139, 28
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %179, label %165

165:                                              ; preds = %160, %144
  %166 = phi i64 [ %147, %160 ], [ 0, %144 ]
  %167 = and i64 %139, -4
  %168 = getelementptr i8, ptr %3, i64 %167
  %169 = getelementptr i8, ptr %134, i64 %167
  br label %170

170:                                              ; preds = %170, %165
  %171 = phi i64 [ %166, %165 ], [ %175, %170 ]
  %172 = getelementptr i8, ptr %3, i64 %171
  %173 = getelementptr i8, ptr %134, i64 %171
  %174 = load <4 x i8>, ptr %173, align 1, !tbaa !10
  store <4 x i8> %174, ptr %172, align 1, !tbaa !10, !noalias !602
  %175 = add nuw i64 %171, 4
  %176 = icmp eq i64 %175, %167
  br i1 %176, label %177, label %170, !llvm.loop !607

177:                                              ; preds = %170
  %178 = icmp eq i64 %139, %167
  br i1 %178, label %228, label %179

179:                                              ; preds = %160, %177, %137
  %180 = phi ptr [ %161, %160 ], [ %3, %137 ], [ %168, %177 ]
  %181 = phi ptr [ %162, %160 ], [ %134, %137 ], [ %169, %177 ]
  %182 = ptrtoint ptr %181 to i64
  %183 = sub i64 %32, %182
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %195, label %186

186:                                              ; preds = %179, %186
  %187 = phi ptr [ %192, %186 ], [ %180, %179 ]
  %188 = phi ptr [ %190, %186 ], [ %181, %179 ]
  %189 = phi i64 [ %193, %186 ], [ 0, %179 ]
  %190 = getelementptr inbounds nuw i8, ptr %188, i64 1
  %191 = load i8, ptr %188, align 1, !tbaa !10
  %192 = getelementptr inbounds nuw i8, ptr %187, i64 1
  store i8 %191, ptr %187, align 1, !tbaa !10, !noalias !602
  %193 = add i64 %189, 1
  %194 = icmp eq i64 %193, %184
  br i1 %194, label %195, label %186, !llvm.loop !608

195:                                              ; preds = %186, %179
  %196 = phi ptr [ %180, %179 ], [ %192, %186 ]
  %197 = phi ptr [ %181, %179 ], [ %190, %186 ]
  %198 = sub i64 %182, %33
  %199 = icmp ugt i64 %198, -8
  br i1 %199, label %228, label %200

200:                                              ; preds = %195, %200
  %201 = phi ptr [ %226, %200 ], [ %196, %195 ]
  %202 = phi ptr [ %224, %200 ], [ %197, %195 ]
  %203 = getelementptr inbounds nuw i8, ptr %202, i64 1
  %204 = load i8, ptr %202, align 1, !tbaa !10
  %205 = getelementptr inbounds nuw i8, ptr %201, i64 1
  store i8 %204, ptr %201, align 1, !tbaa !10, !noalias !602
  %206 = getelementptr inbounds nuw i8, ptr %202, i64 2
  %207 = load i8, ptr %203, align 1, !tbaa !10
  %208 = getelementptr inbounds nuw i8, ptr %201, i64 2
  store i8 %207, ptr %205, align 1, !tbaa !10, !noalias !602
  %209 = getelementptr inbounds nuw i8, ptr %202, i64 3
  %210 = load i8, ptr %206, align 1, !tbaa !10
  %211 = getelementptr inbounds nuw i8, ptr %201, i64 3
  store i8 %210, ptr %208, align 1, !tbaa !10, !noalias !602
  %212 = getelementptr inbounds nuw i8, ptr %202, i64 4
  %213 = load i8, ptr %209, align 1, !tbaa !10
  %214 = getelementptr inbounds nuw i8, ptr %201, i64 4
  store i8 %213, ptr %211, align 1, !tbaa !10, !noalias !602
  %215 = getelementptr inbounds nuw i8, ptr %202, i64 5
  %216 = load i8, ptr %212, align 1, !tbaa !10
  %217 = getelementptr inbounds nuw i8, ptr %201, i64 5
  store i8 %216, ptr %214, align 1, !tbaa !10, !noalias !602
  %218 = getelementptr inbounds nuw i8, ptr %202, i64 6
  %219 = load i8, ptr %215, align 1, !tbaa !10
  %220 = getelementptr inbounds nuw i8, ptr %201, i64 6
  store i8 %219, ptr %217, align 1, !tbaa !10, !noalias !602
  %221 = getelementptr inbounds nuw i8, ptr %202, i64 7
  %222 = load i8, ptr %218, align 1, !tbaa !10
  %223 = getelementptr inbounds nuw i8, ptr %201, i64 7
  store i8 %222, ptr %220, align 1, !tbaa !10, !noalias !602
  %224 = getelementptr inbounds nuw i8, ptr %202, i64 8
  %225 = load i8, ptr %221, align 1, !tbaa !10
  %226 = getelementptr inbounds nuw i8, ptr %201, i64 8
  store i8 %225, ptr %223, align 1, !tbaa !10, !noalias !602
  %227 = icmp eq ptr %224, %27
  br i1 %227, label %228, label %200, !llvm.loop !609

228:                                              ; preds = %195, %200, %177, %158
  %229 = getelementptr inbounds nuw i8, ptr %3, i64 %135
  br label %230

230:                                              ; preds = %448, %228
  %231 = phi ptr [ %449, %448 ], [ %3, %228 ]
  %232 = phi ptr [ %453, %448 ], [ %134, %228 ]
  %233 = load i8, ptr %231, align 1, !tbaa !10
  %234 = zext i8 %233 to i32
  %235 = lshr i32 %234, 3
  %236 = zext nneg i32 %235 to i64
  %237 = getelementptr inbounds nuw [32 x i8], ptr @.str.57, i64 0, i64 %236
  %238 = load i8, ptr %237, align 1, !tbaa !10
  %239 = sext i8 %238 to i64
  %240 = getelementptr inbounds i8, ptr %231, i64 %239
  %241 = lshr i32 -2130771968, %235
  %242 = and i32 %241, 1
  %243 = zext nneg i32 %242 to i64
  %244 = getelementptr inbounds nuw i8, ptr %240, i64 %243
  %245 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.masks, i64 0, i64 %239
  %246 = load i32, ptr %245, align 4, !tbaa !11
  %247 = and i32 %246, %234
  %248 = shl nuw nsw i32 %247, 18
  %249 = getelementptr inbounds nuw i8, ptr %231, i64 1
  %250 = load i8, ptr %249, align 1, !tbaa !10
  %251 = and i8 %250, 63
  %252 = zext nneg i8 %251 to i32
  %253 = shl nuw nsw i32 %252, 12
  %254 = or disjoint i32 %253, %248
  %255 = getelementptr inbounds nuw i8, ptr %231, i64 2
  %256 = load i8, ptr %255, align 1, !tbaa !10
  %257 = and i8 %256, 63
  %258 = zext nneg i8 %257 to i32
  %259 = shl nuw nsw i32 %258, 6
  %260 = or disjoint i32 %259, %254
  %261 = getelementptr inbounds nuw i8, ptr %231, i64 3
  %262 = load i8, ptr %261, align 1, !tbaa !10
  %263 = and i8 %262, 63
  %264 = zext nneg i8 %263 to i32
  %265 = or disjoint i32 %260, %264
  %266 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shiftc, i64 0, i64 %239
  %267 = load i32, ptr %266, align 4, !tbaa !11
  %268 = lshr i32 %265, %267
  %269 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.mins, i64 0, i64 %239
  %270 = load i32, ptr %269, align 4, !tbaa !11
  %271 = icmp ult i32 %268, %270
  %272 = select i1 %271, i32 64, i32 0
  %273 = and i32 %268, 2147481600
  %274 = icmp eq i32 %273, 55296
  %275 = select i1 %274, i32 128, i32 0
  %276 = icmp samesign ugt i32 %268, 1114111
  %277 = select i1 %276, i32 256, i32 0
  %278 = lshr i8 %250, 2
  %279 = and i8 %278, 48
  %280 = lshr i8 %256, 4
  %281 = and i8 %280, 12
  %282 = lshr i8 %262, 6
  %283 = or disjoint i8 %281, %279
  %284 = or disjoint i8 %283, %282
  %285 = zext nneg i8 %284 to i32
  %286 = or disjoint i32 %272, %285
  %287 = or disjoint i32 %286, %277
  %288 = or disjoint i32 %287, %275
  %289 = xor i32 %288, 42
  %290 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shifte, i64 0, i64 %239
  %291 = load i32, ptr %290, align 4, !tbaa !11
  %292 = lshr i32 %289, %291
  %293 = icmp eq i32 %292, 0
  %294 = select i1 %293, i32 %268, i32 -1
  br i1 %293, label %295, label %301

295:                                              ; preds = %230
  %296 = ptrtoint ptr %244 to i64
  %297 = ptrtoint ptr %231 to i64
  %298 = sub i64 %296, %297
  %299 = icmp sgt i64 %298, -1
  br i1 %299, label %301, label %300

300:                                              ; preds = %295
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

301:                                              ; preds = %295, %230
  %302 = phi i64 [ 1, %230 ], [ %298, %295 ]
  %303 = icmp ult i32 %294, 32
  br i1 %303, label %446, label %304

304:                                              ; preds = %301
  switch i32 %294, label %305 [
    i32 127, label %446
    i32 92, label %446
    i32 34, label %446
  ]

305:                                              ; preds = %304
  %306 = icmp ult i32 %294, 65536
  br i1 %306, label %307, label %365

307:                                              ; preds = %305
  %308 = lshr i32 %294, 8
  %309 = trunc i32 %294 to i8
  br label %310

310:                                              ; preds = %336, %307
  %311 = phi i32 [ 0, %307 ], [ %318, %336 ]
  %312 = phi i64 [ 0, %307 ], [ %337, %336 ]
  %313 = getelementptr inbounds nuw %"struct.fmt::v11::detail::singleton", ptr @_ZZN3fmt3v116detail12is_printableEjE11singletons0, i64 %312
  %314 = load i8, ptr %313, align 2, !tbaa !10
  %315 = getelementptr inbounds nuw i8, ptr %313, i64 1
  %316 = load i8, ptr %315, align 1, !tbaa !10
  %317 = zext i8 %316 to i32
  %318 = add nuw nsw i32 %311, %317
  %319 = zext i8 %314 to i32
  %320 = icmp samesign ult i32 %308, %319
  br i1 %320, label %339, label %321

321:                                              ; preds = %310
  %322 = icmp eq i32 %308, %319
  %323 = icmp ne i8 %316, 0
  %324 = select i1 %322, i1 %323, i1 false
  br i1 %324, label %325, label %336

325:                                              ; preds = %321
  %326 = zext nneg i32 %311 to i64
  %327 = zext nneg i32 %318 to i64
  br label %331

328:                                              ; preds = %331
  %329 = add nuw nsw i64 %332, 1
  %330 = icmp samesign ult i64 %329, %327
  br i1 %330, label %331, label %336, !llvm.loop !141

331:                                              ; preds = %328, %325
  %332 = phi i64 [ %326, %325 ], [ %329, %328 ]
  %333 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE17singletons0_lower, i64 %332
  %334 = load i8, ptr %333, align 1, !tbaa !10
  %335 = icmp eq i8 %334, %309
  br i1 %335, label %446, label %328

336:                                              ; preds = %328, %321
  %337 = add nuw nsw i64 %312, 1
  %338 = icmp eq i64 %337, 41
  br i1 %338, label %339, label %310, !llvm.loop !142

339:                                              ; preds = %336, %310
  br label %340

340:                                              ; preds = %339, %361
  %341 = phi i64 [ %363, %361 ], [ 0, %339 ]
  %342 = phi i1 [ %362, %361 ], [ true, %339 ]
  %343 = phi i32 [ %359, %361 ], [ %294, %339 ]
  %344 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal0, i64 %341
  %345 = load i8, ptr %344, align 1, !tbaa !10
  %346 = zext i8 %345 to i32
  %347 = icmp sgt i8 %345, -1
  br i1 %347, label %356, label %348

348:                                              ; preds = %340
  %349 = shl nuw nsw i32 %346, 8
  %350 = and i32 %349, 32512
  %351 = add nuw nsw i64 %341, 1
  %352 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal0, i64 %351
  %353 = load i8, ptr %352, align 1, !tbaa !10
  %354 = zext i8 %353 to i32
  %355 = or disjoint i32 %350, %354
  br label %356

356:                                              ; preds = %348, %340
  %357 = phi i64 [ %351, %348 ], [ %341, %340 ]
  %358 = phi i32 [ %355, %348 ], [ %346, %340 ]
  %359 = sub nsw i32 %343, %358
  %360 = icmp sgt i32 %359, -1
  br i1 %360, label %361, label %444

361:                                              ; preds = %356
  %362 = xor i1 %342, true
  %363 = add i64 %357, 1
  %364 = icmp ult i64 %363, 309
  br i1 %364, label %340, label %444, !llvm.loop !143

365:                                              ; preds = %305
  %366 = icmp ult i32 %294, 131072
  br i1 %366, label %367, label %426

367:                                              ; preds = %365
  %368 = and i32 %294, 65535
  %369 = lshr i32 %368, 8
  %370 = trunc i32 %294 to i8
  br label %371

371:                                              ; preds = %397, %367
  %372 = phi i32 [ 0, %367 ], [ %379, %397 ]
  %373 = phi i64 [ 0, %367 ], [ %398, %397 ]
  %374 = getelementptr inbounds nuw %"struct.fmt::v11::detail::singleton", ptr @_ZZN3fmt3v116detail12is_printableEjE11singletons1, i64 %373
  %375 = load i8, ptr %374, align 2, !tbaa !10
  %376 = getelementptr inbounds nuw i8, ptr %374, i64 1
  %377 = load i8, ptr %376, align 1, !tbaa !10
  %378 = zext i8 %377 to i32
  %379 = add nuw nsw i32 %372, %378
  %380 = zext i8 %375 to i32
  %381 = icmp samesign ult i32 %369, %380
  br i1 %381, label %400, label %382

382:                                              ; preds = %371
  %383 = icmp eq i32 %369, %380
  %384 = icmp ne i8 %377, 0
  %385 = select i1 %383, i1 %384, i1 false
  br i1 %385, label %386, label %397

386:                                              ; preds = %382
  %387 = zext nneg i32 %372 to i64
  %388 = zext nneg i32 %379 to i64
  br label %392

389:                                              ; preds = %392
  %390 = add nuw nsw i64 %393, 1
  %391 = icmp samesign ult i64 %390, %388
  br i1 %391, label %392, label %397, !llvm.loop !141

392:                                              ; preds = %389, %386
  %393 = phi i64 [ %387, %386 ], [ %390, %389 ]
  %394 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE17singletons1_lower, i64 %393
  %395 = load i8, ptr %394, align 1, !tbaa !10
  %396 = icmp eq i8 %395, %370
  br i1 %396, label %446, label %389

397:                                              ; preds = %389, %382
  %398 = add nuw nsw i64 %373, 1
  %399 = icmp eq i64 %398, 38
  br i1 %399, label %400, label %371, !llvm.loop !142

400:                                              ; preds = %397, %371
  br label %401

401:                                              ; preds = %400, %422
  %402 = phi i64 [ %424, %422 ], [ 0, %400 ]
  %403 = phi i1 [ %423, %422 ], [ true, %400 ]
  %404 = phi i32 [ %420, %422 ], [ %368, %400 ]
  %405 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal1, i64 %402
  %406 = load i8, ptr %405, align 1, !tbaa !10
  %407 = zext i8 %406 to i32
  %408 = icmp sgt i8 %406, -1
  br i1 %408, label %417, label %409

409:                                              ; preds = %401
  %410 = shl nuw nsw i32 %407, 8
  %411 = and i32 %410, 32512
  %412 = add nuw nsw i64 %402, 1
  %413 = getelementptr inbounds nuw i8, ptr @_ZZN3fmt3v116detail12is_printableEjE7normal1, i64 %412
  %414 = load i8, ptr %413, align 1, !tbaa !10
  %415 = zext i8 %414 to i32
  %416 = or disjoint i32 %411, %415
  br label %417

417:                                              ; preds = %409, %401
  %418 = phi i64 [ %412, %409 ], [ %402, %401 ]
  %419 = phi i32 [ %416, %409 ], [ %407, %401 ]
  %420 = sub nsw i32 %404, %419
  %421 = icmp sgt i32 %420, -1
  br i1 %421, label %422, label %444

422:                                              ; preds = %417
  %423 = xor i1 %403, true
  %424 = add i64 %418, 1
  %425 = icmp ult i64 %424, 419
  br i1 %425, label %401, label %444, !llvm.loop !143

426:                                              ; preds = %365
  %427 = insertelement <4 x i32> poison, i32 %294, i64 0
  %428 = shufflevector <4 x i32> %427, <4 x i32> poison, <4 x i32> zeroinitializer
  %429 = add nsw <4 x i32> %428, <i32 -173790, i32 -177973, i32 -183970, i32 -191457>
  %430 = and i32 %294, -2
  %431 = icmp eq i32 %430, 178206
  %432 = icmp ult <4 x i32> %429, <i32 34, i32 11, i32 14, i32 3103>
  %433 = add nsw i32 %294, -195102
  %434 = icmp ult i32 %433, 1506
  %435 = add nsw i32 %294, -201547
  %436 = icmp ult i32 %435, 716213
  %437 = icmp ugt i32 %294, 917999
  %438 = bitcast <4 x i1> %432 to i4
  %439 = icmp ne i4 %438, 0
  %440 = or i1 %439, %434
  %441 = or i1 %436, %437
  %442 = or i1 %440, %441
  %443 = or i1 %442, %431
  br i1 %443, label %446, label %448

444:                                              ; preds = %417, %422, %356, %361
  %445 = phi i1 [ %362, %361 ], [ %342, %356 ], [ %423, %422 ], [ %403, %417 ]
  br i1 %445, label %448, label %446

446:                                              ; preds = %301, %304, %304, %304, %444, %426, %392, %331
  %447 = getelementptr inbounds nuw i8, ptr %232, i64 %302
  store ptr %232, ptr %5, align 8, !tbaa !19
  store ptr %447, ptr %28, align 8, !tbaa !19
  store i32 %294, ptr %29, align 8, !tbaa !11
  br label %455

448:                                              ; preds = %444, %426
  %449 = select i1 %293, ptr %244, ptr %249
  %450 = ptrtoint ptr %449 to i64
  %451 = ptrtoint ptr %231 to i64
  %452 = sub i64 %450, %451
  %453 = getelementptr inbounds i8, ptr %232, i64 %452
  %454 = icmp ult ptr %449, %229
  br i1 %454, label %230, label %455, !llvm.loop !610

455:                                              ; preds = %448, %446
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %3) #30, !noalias !602
  br label %456

456:                                              ; preds = %123, %133, %455
  %457 = load ptr, ptr %5, align 8, !tbaa !137
  %458 = ptrtoint ptr %35 to i64
  %459 = icmp eq ptr %36, %457
  br i1 %459, label %569, label %460

460:                                              ; preds = %456
  %461 = ptrtoint ptr %457 to i64
  %462 = getelementptr inbounds nuw i8, ptr %35, i64 8
  %463 = getelementptr inbounds nuw i8, ptr %35, i64 16
  %464 = getelementptr inbounds nuw i8, ptr %35, i64 24
  br label %465

465:                                              ; preds = %545, %460
  %466 = phi ptr [ %36, %460 ], [ %548, %545 ]
  %467 = ptrtoint ptr %466 to i64
  %468 = sub i64 %461, %467
  %469 = icmp sgt i64 %468, -1
  br i1 %469, label %471, label %470

470:                                              ; preds = %465
  call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

471:                                              ; preds = %465
  %472 = load i64, ptr %462, align 8, !tbaa !37
  %473 = add i64 %472, %468
  %474 = load i64, ptr %463, align 8, !tbaa !18
  %475 = icmp ugt i64 %473, %474
  br i1 %475, label %476, label %480

476:                                              ; preds = %471
  %477 = load ptr, ptr %464, align 8, !tbaa !13
  call void %477(ptr noundef nonnull align 8 dereferenceable(32) %35, i64 noundef %473)
  %478 = load i64, ptr %463, align 8, !tbaa !18
  %479 = load i64, ptr %462, align 8, !tbaa !37
  br label %480

480:                                              ; preds = %476, %471
  %481 = phi i64 [ %472, %471 ], [ %479, %476 ]
  %482 = phi i64 [ %474, %471 ], [ %478, %476 ]
  %483 = sub i64 %482, %481
  %484 = call i64 @llvm.umin.i64(i64 %483, i64 %468)
  %485 = load ptr, ptr %35, align 8, !tbaa !17
  %486 = ptrtoint ptr %485 to i64
  %487 = getelementptr inbounds nuw i8, ptr %485, i64 %481
  %488 = icmp eq i64 %484, 0
  br i1 %488, label %545, label %489

489:                                              ; preds = %480
  %490 = icmp ult i64 %484, 4
  br i1 %490, label %491, label %508

491:                                              ; preds = %528, %541, %508, %489
  %492 = phi i64 [ %515, %528 ], [ 0, %489 ], [ 0, %508 ], [ %533, %541 ]
  %493 = and i64 %484, 3
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %504, label %495

495:                                              ; preds = %491, %495
  %496 = phi i64 [ %501, %495 ], [ %492, %491 ]
  %497 = phi i64 [ %502, %495 ], [ 0, %491 ]
  %498 = getelementptr inbounds nuw i8, ptr %466, i64 %496
  %499 = load i8, ptr %498, align 1, !tbaa !10
  %500 = getelementptr inbounds nuw i8, ptr %487, i64 %496
  store i8 %499, ptr %500, align 1, !tbaa !10
  %501 = add nuw i64 %496, 1
  %502 = add i64 %497, 1
  %503 = icmp eq i64 %502, %493
  br i1 %503, label %504, label %495, !llvm.loop !611

504:                                              ; preds = %495, %491
  %505 = phi i64 [ %492, %491 ], [ %501, %495 ]
  %506 = sub nsw i64 %492, %484
  %507 = icmp ugt i64 %506, -4
  br i1 %507, label %543, label %550

508:                                              ; preds = %489
  %509 = add i64 %481, %486
  %510 = sub i64 %509, %467
  %511 = icmp ult i64 %510, 32
  br i1 %511, label %491, label %512

512:                                              ; preds = %508
  %513 = icmp ult i64 %484, 32
  br i1 %513, label %531, label %514

514:                                              ; preds = %512
  %515 = and i64 %484, 9223372036854775776
  br label %516

516:                                              ; preds = %516, %514
  %517 = phi i64 [ 0, %514 ], [ %524, %516 ]
  %518 = getelementptr inbounds nuw i8, ptr %466, i64 %517
  %519 = getelementptr inbounds nuw i8, ptr %518, i64 16
  %520 = load <16 x i8>, ptr %518, align 1, !tbaa !10
  %521 = load <16 x i8>, ptr %519, align 1, !tbaa !10
  %522 = getelementptr inbounds nuw i8, ptr %487, i64 %517
  %523 = getelementptr inbounds nuw i8, ptr %522, i64 16
  store <16 x i8> %520, ptr %522, align 1, !tbaa !10
  store <16 x i8> %521, ptr %523, align 1, !tbaa !10
  %524 = add nuw i64 %517, 32
  %525 = icmp eq i64 %524, %515
  br i1 %525, label %526, label %516, !llvm.loop !612

526:                                              ; preds = %516
  %527 = icmp eq i64 %484, %515
  br i1 %527, label %543, label %528

528:                                              ; preds = %526
  %529 = and i64 %484, 28
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %491, label %531

531:                                              ; preds = %528, %512
  %532 = phi i64 [ %515, %528 ], [ 0, %512 ]
  %533 = and i64 %484, 9223372036854775804
  br label %534

534:                                              ; preds = %534, %531
  %535 = phi i64 [ %532, %531 ], [ %539, %534 ]
  %536 = getelementptr inbounds nuw i8, ptr %466, i64 %535
  %537 = load <4 x i8>, ptr %536, align 1, !tbaa !10
  %538 = getelementptr inbounds nuw i8, ptr %487, i64 %535
  store <4 x i8> %537, ptr %538, align 1, !tbaa !10
  %539 = add nuw i64 %535, 4
  %540 = icmp eq i64 %539, %533
  br i1 %540, label %541, label %534, !llvm.loop !613

541:                                              ; preds = %534
  %542 = icmp eq i64 %484, %533
  br i1 %542, label %543, label %491

543:                                              ; preds = %504, %550, %541, %526
  %544 = load i64, ptr %462, align 8, !tbaa !37
  br label %545

545:                                              ; preds = %543, %480
  %546 = phi i64 [ %544, %543 ], [ %481, %480 ]
  %547 = add i64 %546, %484
  store i64 %547, ptr %462, align 8, !tbaa !37
  %548 = getelementptr inbounds nuw i8, ptr %466, i64 %484
  %549 = icmp eq ptr %548, %457
  br i1 %549, label %569, label %465, !llvm.loop !77

550:                                              ; preds = %504, %550
  %551 = phi i64 [ %567, %550 ], [ %505, %504 ]
  %552 = getelementptr inbounds nuw i8, ptr %466, i64 %551
  %553 = load i8, ptr %552, align 1, !tbaa !10
  %554 = getelementptr inbounds nuw i8, ptr %487, i64 %551
  store i8 %553, ptr %554, align 1, !tbaa !10
  %555 = add nuw i64 %551, 1
  %556 = getelementptr inbounds nuw i8, ptr %466, i64 %555
  %557 = load i8, ptr %556, align 1, !tbaa !10
  %558 = getelementptr inbounds nuw i8, ptr %487, i64 %555
  store i8 %557, ptr %558, align 1, !tbaa !10
  %559 = add nuw i64 %551, 2
  %560 = getelementptr inbounds nuw i8, ptr %466, i64 %559
  %561 = load i8, ptr %560, align 1, !tbaa !10
  %562 = getelementptr inbounds nuw i8, ptr %487, i64 %559
  store i8 %561, ptr %562, align 1, !tbaa !10
  %563 = add nuw i64 %551, 3
  %564 = getelementptr inbounds nuw i8, ptr %466, i64 %563
  %565 = load i8, ptr %564, align 1, !tbaa !10
  %566 = getelementptr inbounds nuw i8, ptr %487, i64 %563
  store i8 %565, ptr %566, align 1, !tbaa !10
  %567 = add nuw i64 %551, 4
  %568 = icmp eq i64 %567, %484
  br i1 %568, label %543, label %550, !llvm.loop !614

569:                                              ; preds = %545, %456
  %570 = load ptr, ptr %28, align 8, !tbaa !139
  %571 = icmp eq ptr %570, null
  br i1 %571, label %572, label %573

572:                                              ; preds = %569
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #30
  br label %577

573:                                              ; preds = %569
  %574 = call i64 @_ZN3fmt3v116detail16write_escaped_cpINS0_14basic_appenderIcEEcEET_S5_RKNS1_18find_escape_resultIT0_EE(i64 %458, ptr noundef nonnull align 8 dereferenceable(24) %5)
  %575 = inttoptr i64 %574 to ptr
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #30
  %576 = icmp eq ptr %570, %27
  br i1 %576, label %577, label %34, !llvm.loop !615

577:                                              ; preds = %573, %572
  %578 = phi ptr [ %35, %572 ], [ %575, %573 ]
  %579 = getelementptr inbounds nuw i8, ptr %578, i64 8
  %580 = load i64, ptr %579, align 8, !tbaa !37
  %581 = add i64 %580, 1
  %582 = getelementptr inbounds nuw i8, ptr %578, i64 16
  %583 = load i64, ptr %582, align 8, !tbaa !18
  %584 = icmp ugt i64 %581, %583
  br i1 %584, label %585, label %590

585:                                              ; preds = %577
  %586 = getelementptr inbounds nuw i8, ptr %578, i64 24
  %587 = load ptr, ptr %586, align 8, !tbaa !13
  call void %587(ptr noundef nonnull align 8 dereferenceable(32) %578, i64 noundef %581)
  %588 = load i64, ptr %579, align 8, !tbaa !37
  %589 = add i64 %588, 1
  br label %590

590:                                              ; preds = %577, %585
  %591 = phi i64 [ %581, %577 ], [ %589, %585 ]
  %592 = phi i64 [ %580, %577 ], [ %588, %585 ]
  %593 = ptrtoint ptr %578 to i64
  %594 = load ptr, ptr %578, align 8, !tbaa !17
  store i64 %591, ptr %579, align 8, !tbaa !37
  %595 = getelementptr inbounds nuw i8, ptr %594, i64 %592
  store i8 34, ptr %595, align 1, !tbaa !10
  ret i64 %593
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local i64 @_ZN3fmt3v116detail12write_paddedIcLNS0_5alignE1ENS0_14basic_appenderIcEEZNS1_5writeIcS5_EET0_S7_NS0_17basic_string_viewIT_EERKNS0_12format_specsEEUlS5_E_EET1_SF_SD_yyOT2_(i64 %0, ptr noundef nonnull align 4 dereferenceable(16) %1, i64 noundef %2, i64 noundef %3, ptr noundef nonnull align 8 dereferenceable(40) %4) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.fmt::v11::basic_string_view", align 8
  %7 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %8 = load i32, ptr %7, align 4, !tbaa !125
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

11:                                               ; preds = %5
  %12 = zext nneg i32 %8 to i64
  %13 = tail call i64 @llvm.usub.sat.i64(i64 %12, i64 %3)
  %14 = load i32, ptr %1, align 4, !tbaa !53
  %15 = lshr i32 %14, 3
  %16 = and i32 %15, 7
  %17 = zext nneg i32 %16 to i64
  %18 = getelementptr inbounds nuw i8, ptr @.str.25, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !10
  %20 = sext i8 %19 to i64
  %21 = and i64 %20, 4294967295
  %22 = lshr i64 %13, %21
  %23 = sub nsw i64 %13, %22
  %24 = lshr i32 %14, 15
  %25 = and i32 %24, 7
  %26 = zext nneg i32 %25 to i64
  %27 = mul nuw nsw i64 %13, %26
  %28 = inttoptr i64 %0 to ptr
  %29 = getelementptr inbounds nuw i8, ptr %28, i64 8
  %30 = load i64, ptr %29, align 8, !tbaa !37
  %31 = add i64 %30, %2
  %32 = add i64 %31, %27
  %33 = getelementptr inbounds nuw i8, ptr %28, i64 16
  %34 = load i64, ptr %33, align 8, !tbaa !18
  %35 = icmp ugt i64 %32, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %11
  %37 = getelementptr inbounds nuw i8, ptr %28, i64 24
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  tail call void %38(ptr noundef nonnull align 8 dereferenceable(32) %28, i64 noundef %32)
  br label %39

39:                                               ; preds = %11, %36
  %40 = icmp eq i64 %22, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = tail call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %0, i64 noundef %22, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %0, %39 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  %45 = load i8, ptr %4, align 8, !tbaa !598, !range !51, !noundef !52
  %46 = trunc nuw i8 %45 to i1
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = getelementptr inbounds nuw i8, ptr %4, i64 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %48, i64 16, i1 false), !tbaa.struct !591
  %49 = call i64 @_ZN3fmt3v116detail20write_escaped_stringIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EE(i64 %44, ptr noundef nonnull %6)
  br label %167

50:                                               ; preds = %43
  %51 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %52 = load ptr, ptr %51, align 8, !tbaa !600
  %53 = getelementptr inbounds nuw i8, ptr %4, i64 32
  %54 = load i64, ptr %53, align 8, !tbaa !601
  %55 = getelementptr inbounds nuw i8, ptr %52, i64 %54
  %56 = inttoptr i64 %44 to ptr
  %57 = icmp samesign eq i64 %54, 0
  br i1 %57, label %167, label %58

58:                                               ; preds = %50
  %59 = ptrtoint ptr %55 to i64
  %60 = getelementptr inbounds nuw i8, ptr %56, i64 8
  %61 = getelementptr inbounds nuw i8, ptr %56, i64 16
  %62 = getelementptr inbounds nuw i8, ptr %56, i64 24
  br label %63

63:                                               ; preds = %143, %58
  %64 = phi ptr [ %52, %58 ], [ %146, %143 ]
  %65 = ptrtoint ptr %64 to i64
  %66 = sub i64 %59, %65
  %67 = icmp sgt i64 %66, -1
  br i1 %67, label %69, label %68

68:                                               ; preds = %63
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

69:                                               ; preds = %63
  %70 = load i64, ptr %60, align 8, !tbaa !37
  %71 = add i64 %70, %66
  %72 = load i64, ptr %61, align 8, !tbaa !18
  %73 = icmp ugt i64 %71, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = load ptr, ptr %62, align 8, !tbaa !13
  tail call void %75(ptr noundef nonnull align 8 dereferenceable(32) %56, i64 noundef %71)
  %76 = load i64, ptr %61, align 8, !tbaa !18
  %77 = load i64, ptr %60, align 8, !tbaa !37
  br label %78

78:                                               ; preds = %74, %69
  %79 = phi i64 [ %70, %69 ], [ %77, %74 ]
  %80 = phi i64 [ %72, %69 ], [ %76, %74 ]
  %81 = sub i64 %80, %79
  %82 = tail call i64 @llvm.umin.i64(i64 %81, i64 %66)
  %83 = load ptr, ptr %56, align 8, !tbaa !17
  %84 = ptrtoint ptr %83 to i64
  %85 = getelementptr inbounds nuw i8, ptr %83, i64 %79
  %86 = icmp eq i64 %82, 0
  br i1 %86, label %143, label %87

87:                                               ; preds = %78
  %88 = icmp ult i64 %82, 4
  br i1 %88, label %89, label %106

89:                                               ; preds = %126, %139, %106, %87
  %90 = phi i64 [ %113, %126 ], [ 0, %87 ], [ 0, %106 ], [ %131, %139 ]
  %91 = and i64 %82, 3
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %102, label %93

93:                                               ; preds = %89, %93
  %94 = phi i64 [ %99, %93 ], [ %90, %89 ]
  %95 = phi i64 [ %100, %93 ], [ 0, %89 ]
  %96 = getelementptr inbounds nuw i8, ptr %64, i64 %94
  %97 = load i8, ptr %96, align 1, !tbaa !10
  %98 = getelementptr inbounds nuw i8, ptr %85, i64 %94
  store i8 %97, ptr %98, align 1, !tbaa !10
  %99 = add nuw i64 %94, 1
  %100 = add i64 %95, 1
  %101 = icmp eq i64 %100, %91
  br i1 %101, label %102, label %93, !llvm.loop !616

102:                                              ; preds = %93, %89
  %103 = phi i64 [ %90, %89 ], [ %99, %93 ]
  %104 = sub nsw i64 %90, %82
  %105 = icmp ugt i64 %104, -4
  br i1 %105, label %141, label %148

106:                                              ; preds = %87
  %107 = add i64 %79, %84
  %108 = sub i64 %107, %65
  %109 = icmp ult i64 %108, 32
  br i1 %109, label %89, label %110

110:                                              ; preds = %106
  %111 = icmp ult i64 %82, 32
  br i1 %111, label %129, label %112

112:                                              ; preds = %110
  %113 = and i64 %82, 9223372036854775776
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i64 [ 0, %112 ], [ %122, %114 ]
  %116 = getelementptr inbounds nuw i8, ptr %64, i64 %115
  %117 = getelementptr inbounds nuw i8, ptr %116, i64 16
  %118 = load <16 x i8>, ptr %116, align 1, !tbaa !10
  %119 = load <16 x i8>, ptr %117, align 1, !tbaa !10
  %120 = getelementptr inbounds nuw i8, ptr %85, i64 %115
  %121 = getelementptr inbounds nuw i8, ptr %120, i64 16
  store <16 x i8> %118, ptr %120, align 1, !tbaa !10
  store <16 x i8> %119, ptr %121, align 1, !tbaa !10
  %122 = add nuw i64 %115, 32
  %123 = icmp eq i64 %122, %113
  br i1 %123, label %124, label %114, !llvm.loop !617

124:                                              ; preds = %114
  %125 = icmp eq i64 %82, %113
  br i1 %125, label %141, label %126

126:                                              ; preds = %124
  %127 = and i64 %82, 28
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %89, label %129

129:                                              ; preds = %126, %110
  %130 = phi i64 [ %113, %126 ], [ 0, %110 ]
  %131 = and i64 %82, 9223372036854775804
  br label %132

132:                                              ; preds = %132, %129
  %133 = phi i64 [ %130, %129 ], [ %137, %132 ]
  %134 = getelementptr inbounds nuw i8, ptr %64, i64 %133
  %135 = load <4 x i8>, ptr %134, align 1, !tbaa !10
  %136 = getelementptr inbounds nuw i8, ptr %85, i64 %133
  store <4 x i8> %135, ptr %136, align 1, !tbaa !10
  %137 = add nuw i64 %133, 4
  %138 = icmp eq i64 %137, %131
  br i1 %138, label %139, label %132, !llvm.loop !618

139:                                              ; preds = %132
  %140 = icmp eq i64 %82, %131
  br i1 %140, label %141, label %89

141:                                              ; preds = %102, %148, %139, %124
  %142 = load i64, ptr %60, align 8, !tbaa !37
  br label %143

143:                                              ; preds = %141, %78
  %144 = phi i64 [ %142, %141 ], [ %79, %78 ]
  %145 = add i64 %144, %82
  store i64 %145, ptr %60, align 8, !tbaa !37
  %146 = getelementptr inbounds nuw i8, ptr %64, i64 %82
  %147 = icmp eq ptr %146, %55
  br i1 %147, label %167, label %63, !llvm.loop !77

148:                                              ; preds = %102, %148
  %149 = phi i64 [ %165, %148 ], [ %103, %102 ]
  %150 = getelementptr inbounds nuw i8, ptr %64, i64 %149
  %151 = load i8, ptr %150, align 1, !tbaa !10
  %152 = getelementptr inbounds nuw i8, ptr %85, i64 %149
  store i8 %151, ptr %152, align 1, !tbaa !10
  %153 = add nuw i64 %149, 1
  %154 = getelementptr inbounds nuw i8, ptr %64, i64 %153
  %155 = load i8, ptr %154, align 1, !tbaa !10
  %156 = getelementptr inbounds nuw i8, ptr %85, i64 %153
  store i8 %155, ptr %156, align 1, !tbaa !10
  %157 = add nuw i64 %149, 2
  %158 = getelementptr inbounds nuw i8, ptr %64, i64 %157
  %159 = load i8, ptr %158, align 1, !tbaa !10
  %160 = getelementptr inbounds nuw i8, ptr %85, i64 %157
  store i8 %159, ptr %160, align 1, !tbaa !10
  %161 = add nuw i64 %149, 3
  %162 = getelementptr inbounds nuw i8, ptr %64, i64 %161
  %163 = load i8, ptr %162, align 1, !tbaa !10
  %164 = getelementptr inbounds nuw i8, ptr %85, i64 %161
  store i8 %163, ptr %164, align 1, !tbaa !10
  %165 = add nuw i64 %149, 4
  %166 = icmp eq i64 %165, %82
  br i1 %166, label %141, label %148, !llvm.loop !619

167:                                              ; preds = %143, %47, %50
  %168 = phi i64 [ %49, %47 ], [ %44, %50 ], [ %44, %143 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  %169 = icmp eq i64 %13, %22
  br i1 %169, label %172, label %170

170:                                              ; preds = %167
  %171 = call i64 @_ZN3fmt3v116detail4fillIcNS0_14basic_appenderIcEEEET0_S5_yRKNS0_11basic_specsE(i64 %168, i64 noundef %23, ptr noundef nonnull align 4 dereferenceable(8) %1)
  br label %172

172:                                              ; preds = %170, %167
  %173 = phi i64 [ %171, %170 ], [ %168, %167 ]
  ret i64 %173
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_16code_point_indexENS0_17basic_string_viewIcEEyEUljS4_E_EEvS4_T_ENKUlPKcS8_E_clES8_S8_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #5 comdat align 2 {
  %4 = load i8, ptr %1, align 1, !tbaa !10
  %5 = zext i8 %4 to i32
  %6 = lshr i32 %5, 3
  %7 = zext nneg i32 %6 to i64
  %8 = getelementptr inbounds nuw [32 x i8], ptr @.str.57, i64 0, i64 %7
  %9 = load i8, ptr %8, align 1, !tbaa !10
  %10 = sext i8 %9 to i64
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = lshr i32 -2130771968, %6
  %13 = and i32 %12, 1
  %14 = zext nneg i32 %13 to i64
  %15 = getelementptr inbounds nuw i8, ptr %11, i64 %14
  %16 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.masks, i64 0, i64 %10
  %17 = load i32, ptr %16, align 4, !tbaa !11
  %18 = and i32 %17, %5
  %19 = shl nuw nsw i32 %18, 18
  %20 = getelementptr inbounds nuw i8, ptr %1, i64 1
  %21 = load i8, ptr %20, align 1, !tbaa !10
  %22 = and i8 %21, 63
  %23 = zext nneg i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 12
  %25 = or disjoint i32 %24, %19
  %26 = getelementptr inbounds nuw i8, ptr %1, i64 2
  %27 = load i8, ptr %26, align 1, !tbaa !10
  %28 = and i8 %27, 63
  %29 = zext nneg i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 6
  %31 = or disjoint i32 %30, %25
  %32 = getelementptr inbounds nuw i8, ptr %1, i64 3
  %33 = load i8, ptr %32, align 1, !tbaa !10
  %34 = and i8 %33, 63
  %35 = zext nneg i8 %34 to i32
  %36 = or disjoint i32 %31, %35
  %37 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shiftc, i64 0, i64 %10
  %38 = load i32, ptr %37, align 4, !tbaa !11
  %39 = lshr i32 %36, %38
  %40 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.mins, i64 0, i64 %10
  %41 = load i32, ptr %40, align 4, !tbaa !11
  %42 = icmp ult i32 %39, %41
  %43 = select i1 %42, i32 64, i32 0
  %44 = and i32 %39, 2147481600
  %45 = icmp eq i32 %44, 55296
  %46 = select i1 %45, i32 128, i32 0
  %47 = icmp samesign ugt i32 %39, 1114111
  %48 = select i1 %47, i32 256, i32 0
  %49 = lshr i8 %21, 2
  %50 = and i8 %49, 48
  %51 = lshr i8 %27, 4
  %52 = and i8 %51, 12
  %53 = lshr i8 %33, 6
  %54 = or disjoint i8 %52, %50
  %55 = or disjoint i8 %54, %53
  %56 = zext nneg i8 %55 to i32
  %57 = or disjoint i32 %43, %56
  %58 = or disjoint i32 %57, %48
  %59 = or disjoint i32 %58, %46
  %60 = xor i32 %59, 42
  %61 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shifte, i64 0, i64 %10
  %62 = load i32, ptr %61, align 4, !tbaa !11
  %63 = lshr i32 %60, %62
  %64 = icmp ne i32 %63, 0
  %65 = ptrtoint ptr %15 to i64
  %66 = ptrtoint ptr %1 to i64
  %67 = sub i64 %65, %66
  %68 = icmp sgt i64 %67, -1
  %69 = select i1 %64, i1 true, i1 %68
  br i1 %69, label %71, label %70

70:                                               ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

71:                                               ; preds = %3
  %72 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %73 = load ptr, ptr %72, align 8, !tbaa !620
  %74 = load i64, ptr %73, align 8, !tbaa !20
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = add i64 %74, -1
  store i64 %77, ptr %73, align 8, !tbaa !20
  br label %88

78:                                               ; preds = %71
  %79 = load ptr, ptr %0, align 8, !tbaa !622
  %80 = ptrtoint ptr %2 to i64
  %81 = ptrtoint ptr %79 to i64
  %82 = sub i64 %80, %81
  %83 = icmp sgt i64 %82, -1
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

85:                                               ; preds = %78
  %86 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %87 = load ptr, ptr %86, align 8, !tbaa !623
  store i64 %82, ptr %87, align 8, !tbaa !20
  br label %88

88:                                               ; preds = %76, %85
  %89 = select i1 %64, ptr %20, ptr %15
  %90 = select i1 %75, ptr null, ptr %89
  ret ptr %90
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail15counting_bufferIcE4growERNS1_6bufferIcEEy(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1) #0 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %4 = load i64, ptr %3, align 8, !tbaa !37
  %5 = icmp eq i64 %4, 256
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 288
  %8 = load i64, ptr %7, align 8, !tbaa !589
  %9 = add i64 %8, 256
  store i64 %9, ptr %7, align 8, !tbaa !589
  store i64 0, ptr %3, align 8, !tbaa !37
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_13compute_widthENS0_17basic_string_viewIcEEE17count_code_pointsEEvS4_T_ENKUlPKcS8_E_clES8_S8_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #5 comdat align 2 {
  %4 = load i8, ptr %1, align 1, !tbaa !10
  %5 = zext i8 %4 to i32
  %6 = lshr i32 %5, 3
  %7 = zext nneg i32 %6 to i64
  %8 = getelementptr inbounds nuw [32 x i8], ptr @.str.57, i64 0, i64 %7
  %9 = load i8, ptr %8, align 1, !tbaa !10
  %10 = sext i8 %9 to i64
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = lshr i32 -2130771968, %6
  %13 = and i32 %12, 1
  %14 = zext nneg i32 %13 to i64
  %15 = getelementptr inbounds nuw i8, ptr %11, i64 %14
  %16 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.masks, i64 0, i64 %10
  %17 = load i32, ptr %16, align 4, !tbaa !11
  %18 = and i32 %17, %5
  %19 = shl nuw nsw i32 %18, 18
  %20 = getelementptr inbounds nuw i8, ptr %1, i64 1
  %21 = load i8, ptr %20, align 1, !tbaa !10
  %22 = and i8 %21, 63
  %23 = zext nneg i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 12
  %25 = or disjoint i32 %24, %19
  %26 = getelementptr inbounds nuw i8, ptr %1, i64 2
  %27 = load i8, ptr %26, align 1, !tbaa !10
  %28 = and i8 %27, 63
  %29 = zext nneg i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 6
  %31 = or disjoint i32 %30, %25
  %32 = getelementptr inbounds nuw i8, ptr %1, i64 3
  %33 = load i8, ptr %32, align 1, !tbaa !10
  %34 = and i8 %33, 63
  %35 = zext nneg i8 %34 to i32
  %36 = or disjoint i32 %31, %35
  %37 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shiftc, i64 0, i64 %10
  %38 = load i32, ptr %37, align 4, !tbaa !11
  %39 = lshr i32 %36, %38
  %40 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.mins, i64 0, i64 %10
  %41 = load i32, ptr %40, align 4, !tbaa !11
  %42 = icmp ult i32 %39, %41
  %43 = select i1 %42, i32 64, i32 0
  %44 = and i32 %39, 2147481600
  %45 = icmp eq i32 %44, 55296
  %46 = select i1 %45, i32 128, i32 0
  %47 = icmp samesign ugt i32 %39, 1114111
  %48 = select i1 %47, i32 256, i32 0
  %49 = lshr i8 %21, 2
  %50 = and i8 %49, 48
  %51 = lshr i8 %27, 4
  %52 = and i8 %51, 12
  %53 = lshr i8 %33, 6
  %54 = or disjoint i8 %52, %50
  %55 = or disjoint i8 %54, %53
  %56 = zext nneg i8 %55 to i32
  %57 = or disjoint i32 %43, %56
  %58 = or disjoint i32 %57, %48
  %59 = or disjoint i32 %58, %46
  %60 = xor i32 %59, 42
  %61 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shifte, i64 0, i64 %10
  %62 = load i32, ptr %61, align 4, !tbaa !11
  %63 = lshr i32 %60, %62
  %64 = icmp ne i32 %63, 0
  %65 = select i1 %64, i32 -1, i32 %39
  %66 = ptrtoint ptr %15 to i64
  %67 = ptrtoint ptr %1 to i64
  %68 = sub i64 %66, %67
  %69 = icmp sgt i64 %68, -1
  %70 = select i1 %64, i1 true, i1 %69
  br i1 %70, label %72, label %71

71:                                               ; preds = %3
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

72:                                               ; preds = %3
  %73 = icmp ugt i32 %65, 4351
  br i1 %73, label %74, label %97

74:                                               ; preds = %72
  %75 = icmp ult i32 %65, 4448
  %76 = add nsw i32 %65, -9001
  %77 = icmp ult i32 %76, 2
  %78 = or i1 %75, %77
  br i1 %78, label %97, label %79

79:                                               ; preds = %74
  %80 = add nsw i32 %65, -11904
  %81 = icmp ult i32 %80, 30288
  %82 = icmp ne i32 %65, 12351
  %83 = and i1 %82, %81
  %84 = and i32 %65, -65538
  %85 = insertelement <8 x i32> poison, i32 %65, i64 0
  %86 = insertelement <8 x i32> %85, i32 %84, i64 1
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0>
  %88 = add <8 x i32> %87, <i32 -44032, i32 -63744, i32 -65040, i32 -65072, i32 -65280, i32 -65504, i32 -131072, i32 -127744>
  %89 = icmp ult <8 x i32> %88, <i32 11172, i32 512, i32 10, i32 64, i32 97, i32 7, i32 65534, i32 848>
  %90 = bitcast <8 x i1> %89 to i8
  %91 = icmp ne i8 %90, 0
  %92 = or i1 %91, %83
  br i1 %92, label %97, label %93

93:                                               ; preds = %79
  %94 = and i32 %65, -256
  %95 = icmp eq i32 %94, 129280
  %96 = select i1 %95, i64 2, i64 1
  br label %97

97:                                               ; preds = %72, %74, %79, %93
  %98 = phi i64 [ 1, %72 ], [ 2, %74 ], [ %96, %93 ], [ 2, %79 ]
  %99 = load ptr, ptr %0, align 8, !tbaa !624
  %100 = load i64, ptr %99, align 8, !tbaa !20
  %101 = add i64 %100, %98
  store i64 %101, ptr %99, align 8, !tbaa !20
  %102 = select i1 %64, ptr %20, ptr %15
  ret ptr %102
}

declare dllimport i32 @_fileno(ptr noundef) local_unnamed_addr #3

declare dllimport i32 @_isatty(i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v116detail13utf8_to_utf16C2ENS0_17basic_string_viewIcEE(ptr noundef nonnull align 8 dereferenceable(1040) %0, ptr noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %3 = alloca %class.anon.78, align 8
  %4 = alloca [7 x i8], align 1
  %5 = ptrtoint ptr %4 to i64
  %6 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %7 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %8 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i64 0, ptr %8, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIwLy500ENS0_6detail9allocatorIwEEE4growERNS2_6bufferIwEEy, ptr %7, align 8, !tbaa !626
  %9 = getelementptr inbounds nuw i8, ptr %0, i64 32
  store ptr %9, ptr %0, align 8, !tbaa !40
  store i64 500, ptr %6, align 8, !tbaa !627
  %10 = load ptr, ptr %1, align 8, !tbaa !19
  %11 = ptrtoint ptr %10 to i64
  %12 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %13 = load i64, ptr %12, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #30
  store ptr %0, ptr %3, align 8, !tbaa !628
  %14 = icmp ugt i64 %13, 3
  br i1 %14, label %15, label %25

15:                                               ; preds = %2
  %16 = getelementptr inbounds nuw i8, ptr %10, i64 %13
  %17 = getelementptr inbounds i8, ptr %16, i64 -3
  br label %18

18:                                               ; preds = %23, %15
  %19 = phi ptr [ %10, %15 ], [ %22, %23 ]
  %20 = icmp ult ptr %19, %17
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = invoke noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_13utf8_to_utf16C1ENS0_17basic_string_viewIcEEEUljS5_E_EEvS5_T_ENKUlPKcS9_E_clES9_S9_(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef %19, ptr noundef %19)
          to label %23 unwind label %160

23:                                               ; preds = %21
  %24 = icmp eq ptr %22, null
  br i1 %24, label %143, label %18, !llvm.loop !630

25:                                               ; preds = %18, %2
  %26 = phi ptr [ %10, %2 ], [ %19, %18 ]
  %27 = getelementptr inbounds nuw i8, ptr %10, i64 %13
  %28 = ptrtoint ptr %27 to i64
  %29 = ptrtoint ptr %26 to i64
  %30 = sub i64 %28, %29
  %31 = icmp sgt i64 %30, -1
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  invoke void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
          to label %33 unwind label %162

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %25
  %35 = icmp eq ptr %27, %26
  br i1 %35, label %143, label %36

36:                                               ; preds = %34
  call void @llvm.lifetime.start.p0(i64 7, ptr nonnull %4) #30
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %4, i8 0, i64 7, i1 false)
  %37 = icmp ult i64 %30, 4
  %38 = sub i64 %5, %29
  %39 = icmp ult i64 %38, 32
  %40 = or i1 %37, %39
  br i1 %40, label %76, label %41

41:                                               ; preds = %36
  %42 = icmp ult i64 %30, 32
  br i1 %42, label %62, label %43

43:                                               ; preds = %41
  %44 = and i64 %30, 9223372036854775776
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %53, %45 ]
  %47 = getelementptr i8, ptr %4, i64 %46
  %48 = getelementptr i8, ptr %26, i64 %46
  %49 = getelementptr i8, ptr %48, i64 16
  %50 = load <16 x i8>, ptr %48, align 1, !tbaa !10
  %51 = load <16 x i8>, ptr %49, align 1, !tbaa !10
  %52 = getelementptr i8, ptr %47, i64 16
  store <16 x i8> %50, ptr %47, align 1, !tbaa !10
  store <16 x i8> %51, ptr %52, align 1, !tbaa !10
  %53 = add nuw i64 %46, 32
  %54 = icmp eq i64 %53, %44
  br i1 %54, label %55, label %45, !llvm.loop !631

55:                                               ; preds = %45
  %56 = icmp eq i64 %30, %44
  br i1 %56, label %126, label %57

57:                                               ; preds = %55
  %58 = getelementptr i8, ptr %4, i64 %44
  %59 = getelementptr i8, ptr %26, i64 %44
  %60 = and i64 %30, 28
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %57, %41
  %63 = phi i64 [ %44, %57 ], [ 0, %41 ]
  %64 = and i64 %30, 9223372036854775804
  %65 = getelementptr i8, ptr %4, i64 %64
  %66 = getelementptr i8, ptr %26, i64 %64
  br label %67

67:                                               ; preds = %67, %62
  %68 = phi i64 [ %63, %62 ], [ %72, %67 ]
  %69 = getelementptr i8, ptr %4, i64 %68
  %70 = getelementptr i8, ptr %26, i64 %68
  %71 = load <4 x i8>, ptr %70, align 1, !tbaa !10
  store <4 x i8> %71, ptr %69, align 1, !tbaa !10
  %72 = add nuw i64 %68, 4
  %73 = icmp eq i64 %72, %64
  br i1 %73, label %74, label %67, !llvm.loop !632

74:                                               ; preds = %67
  %75 = icmp eq i64 %30, %64
  br i1 %75, label %126, label %76

76:                                               ; preds = %57, %74, %36
  %77 = phi ptr [ %58, %57 ], [ %4, %36 ], [ %65, %74 ]
  %78 = phi ptr [ %59, %57 ], [ %26, %36 ], [ %66, %74 ]
  %79 = add i64 %13, %11
  %80 = ptrtoint ptr %78 to i64
  %81 = sub i64 %79, %80
  %82 = and i64 %81, 7
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %76, %84
  %85 = phi ptr [ %90, %84 ], [ %77, %76 ]
  %86 = phi ptr [ %88, %84 ], [ %78, %76 ]
  %87 = phi i64 [ %91, %84 ], [ 0, %76 ]
  %88 = getelementptr inbounds nuw i8, ptr %86, i64 1
  %89 = load i8, ptr %86, align 1, !tbaa !10
  %90 = getelementptr inbounds nuw i8, ptr %85, i64 1
  store i8 %89, ptr %85, align 1, !tbaa !10
  %91 = add i64 %87, 1
  %92 = icmp eq i64 %91, %82
  br i1 %92, label %93, label %84, !llvm.loop !633

93:                                               ; preds = %84, %76
  %94 = phi ptr [ %77, %76 ], [ %90, %84 ]
  %95 = phi ptr [ %78, %76 ], [ %88, %84 ]
  %96 = sub i64 %80, %79
  %97 = icmp ugt i64 %96, -8
  br i1 %97, label %126, label %98

98:                                               ; preds = %93, %98
  %99 = phi ptr [ %124, %98 ], [ %94, %93 ]
  %100 = phi ptr [ %122, %98 ], [ %95, %93 ]
  %101 = getelementptr inbounds nuw i8, ptr %100, i64 1
  %102 = load i8, ptr %100, align 1, !tbaa !10
  %103 = getelementptr inbounds nuw i8, ptr %99, i64 1
  store i8 %102, ptr %99, align 1, !tbaa !10
  %104 = getelementptr inbounds nuw i8, ptr %100, i64 2
  %105 = load i8, ptr %101, align 1, !tbaa !10
  %106 = getelementptr inbounds nuw i8, ptr %99, i64 2
  store i8 %105, ptr %103, align 1, !tbaa !10
  %107 = getelementptr inbounds nuw i8, ptr %100, i64 3
  %108 = load i8, ptr %104, align 1, !tbaa !10
  %109 = getelementptr inbounds nuw i8, ptr %99, i64 3
  store i8 %108, ptr %106, align 1, !tbaa !10
  %110 = getelementptr inbounds nuw i8, ptr %100, i64 4
  %111 = load i8, ptr %107, align 1, !tbaa !10
  %112 = getelementptr inbounds nuw i8, ptr %99, i64 4
  store i8 %111, ptr %109, align 1, !tbaa !10
  %113 = getelementptr inbounds nuw i8, ptr %100, i64 5
  %114 = load i8, ptr %110, align 1, !tbaa !10
  %115 = getelementptr inbounds nuw i8, ptr %99, i64 5
  store i8 %114, ptr %112, align 1, !tbaa !10
  %116 = getelementptr inbounds nuw i8, ptr %100, i64 6
  %117 = load i8, ptr %113, align 1, !tbaa !10
  %118 = getelementptr inbounds nuw i8, ptr %99, i64 6
  store i8 %117, ptr %115, align 1, !tbaa !10
  %119 = getelementptr inbounds nuw i8, ptr %100, i64 7
  %120 = load i8, ptr %116, align 1, !tbaa !10
  %121 = getelementptr inbounds nuw i8, ptr %99, i64 7
  store i8 %120, ptr %118, align 1, !tbaa !10
  %122 = getelementptr inbounds nuw i8, ptr %100, i64 8
  %123 = load i8, ptr %119, align 1, !tbaa !10
  %124 = getelementptr inbounds nuw i8, ptr %99, i64 8
  store i8 %123, ptr %121, align 1, !tbaa !10
  %125 = icmp eq ptr %122, %27
  br i1 %125, label %126, label %98, !llvm.loop !634

126:                                              ; preds = %93, %98, %74, %55
  %127 = getelementptr inbounds nuw i8, ptr %4, i64 %30
  br label %128

128:                                              ; preds = %132, %126
  %129 = phi ptr [ %137, %132 ], [ %4, %126 ]
  %130 = phi ptr [ %139, %132 ], [ %26, %126 ]
  %131 = invoke noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_13utf8_to_utf16C1ENS0_17basic_string_viewIcEEEUljS5_E_EEvS5_T_ENKUlPKcS9_E_clES9_S9_(ptr noundef nonnull align 8 dereferenceable(8) %3, ptr noundef %129, ptr noundef %130)
          to label %132 unwind label %158

132:                                              ; preds = %128
  %133 = icmp ne ptr %131, null
  %134 = ptrtoint ptr %131 to i64
  %135 = ptrtoint ptr %129 to i64
  %136 = sub i64 %134, %135
  %137 = select i1 %133, ptr %131, ptr %129
  %138 = select i1 %133, i64 %136, i64 0
  %139 = getelementptr inbounds i8, ptr %130, i64 %138
  %140 = icmp ult ptr %137, %127
  %141 = select i1 %133, i1 %140, i1 false
  br i1 %141, label %128, label %142, !llvm.loop !635

142:                                              ; preds = %132
  call void @llvm.lifetime.end.p0(i64 7, ptr nonnull %4) #30
  br label %143

143:                                              ; preds = %23, %142, %34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #30
  %144 = load i64, ptr %8, align 8, !tbaa !43
  %145 = add i64 %144, 1
  %146 = load i64, ptr %6, align 8, !tbaa !627
  %147 = icmp ugt i64 %145, %146
  br i1 %147, label %148, label %153

148:                                              ; preds = %143
  %149 = load ptr, ptr %7, align 8, !tbaa !626
  invoke void %149(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %145)
          to label %150 unwind label %164

150:                                              ; preds = %148
  %151 = load i64, ptr %8, align 8, !tbaa !43
  %152 = add i64 %151, 1
  br label %153

153:                                              ; preds = %150, %143
  %154 = phi i64 [ %145, %143 ], [ %152, %150 ]
  %155 = phi i64 [ %144, %143 ], [ %151, %150 ]
  %156 = load ptr, ptr %0, align 8, !tbaa !40
  store i64 %154, ptr %8, align 8, !tbaa !43
  %157 = getelementptr inbounds nuw i16, ptr %156, i64 %155
  store i16 0, ptr %157, align 2, !tbaa !636
  ret void

158:                                              ; preds = %128
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %166

160:                                              ; preds = %21
  %161 = landingpad { ptr, i32 }
          cleanup
  br label %166

162:                                              ; preds = %32
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %166

164:                                              ; preds = %148
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %166

166:                                              ; preds = %158, %162, %160, %164
  %167 = phi { ptr, i32 } [ %165, %164 ], [ %159, %158 ], [ %161, %160 ], [ %163, %162 ]
  %168 = load ptr, ptr %0, align 8, !tbaa !40
  %169 = icmp eq ptr %168, %9
  br i1 %169, label %171, label %170

170:                                              ; preds = %166
  call void @free(ptr noundef %168)
  br label %171

171:                                              ; preds = %166, %170
  resume { ptr, i32 } %167
}

declare dllimport i32 @WriteConsoleW(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare dllimport i64 @_get_osfhandle(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1119basic_memory_bufferIwLy500ENS0_6detail9allocatorIwEEE4growERNS2_6bufferIwEEy(ptr noundef nonnull align 8 dereferenceable(32) %0, i64 noundef %1) #0 comdat align 2 {
  %3 = getelementptr inbounds nuw i8, ptr %0, i64 16
  %4 = load i64, ptr %3, align 8, !tbaa !627
  %5 = lshr i64 %4, 1
  %6 = add i64 %5, %4
  %7 = icmp ugt i64 %1, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = icmp slt i64 %6, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = tail call noundef i64 @llvm.umax.i64(i64 %1, i64 9223372036854775807)
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i64 [ %11, %10 ], [ %1, %2 ]
  %14 = icmp slt i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.13, i32 noundef 746, ptr noundef nonnull @.str.14) #31
  unreachable

16:                                               ; preds = %8, %12
  %17 = phi i64 [ %13, %12 ], [ %6, %8 ]
  %18 = load ptr, ptr %0, align 8, !tbaa !40
  %19 = shl nuw i64 %17, 1
  %20 = tail call ptr @malloc(i64 noundef %19) #32
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call ptr @__cxa_allocate_exception(i64 8) #30
  tail call void @_ZNSt9bad_allocC1Ev(ptr noundef nonnull align 8 dereferenceable(8) %23) #30
  tail call void @__cxa_throw(ptr nonnull %23, ptr nonnull @_ZTISt9bad_alloc, ptr nonnull @_ZNSt9bad_allocD1Ev) #31
  unreachable

24:                                               ; preds = %16
  %25 = getelementptr inbounds nuw i8, ptr %0, i64 8
  %26 = load i64, ptr %25, align 8, !tbaa !43
  %27 = icmp ule i64 %26, %17
  tail call void @llvm.assume(i1 %27)
  %28 = shl i64 %26, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %20, ptr align 2 %18, i64 %28, i1 false)
  store ptr %20, ptr %0, align 8, !tbaa !40
  store i64 %17, ptr %3, align 8, !tbaa !627
  %29 = getelementptr inbounds nuw i8, ptr %0, i64 32
  %30 = icmp eq ptr %18, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void @free(ptr noundef %18)
  br label %32

32:                                               ; preds = %31, %24
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZZN3fmt3v116detail18for_each_codepointIZNS1_13utf8_to_utf16C1ENS0_17basic_string_viewIcEEEUljS5_E_EEvS5_T_ENKUlPKcS9_E_clES9_S9_(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.fmt::v11::basic_string_view", align 8
  %5 = load i8, ptr %1, align 1, !tbaa !10
  %6 = zext i8 %5 to i32
  %7 = lshr i32 %6, 3
  %8 = zext nneg i32 %7 to i64
  %9 = getelementptr inbounds nuw [32 x i8], ptr @.str.57, i64 0, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !10
  %11 = sext i8 %10 to i64
  %12 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.masks, i64 0, i64 %11
  %13 = load i32, ptr %12, align 4, !tbaa !11
  %14 = and i32 %13, %6
  %15 = shl nuw nsw i32 %14, 18
  %16 = getelementptr inbounds nuw i8, ptr %1, i64 1
  %17 = load i8, ptr %16, align 1, !tbaa !10
  %18 = and i8 %17, 63
  %19 = zext nneg i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 12
  %21 = or disjoint i32 %20, %15
  %22 = getelementptr inbounds nuw i8, ptr %1, i64 2
  %23 = load i8, ptr %22, align 1, !tbaa !10
  %24 = and i8 %23, 63
  %25 = zext nneg i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 6
  %27 = or disjoint i32 %26, %21
  %28 = getelementptr inbounds nuw i8, ptr %1, i64 3
  %29 = load i8, ptr %28, align 1, !tbaa !10
  %30 = and i8 %29, 63
  %31 = zext nneg i8 %30 to i32
  %32 = or disjoint i32 %27, %31
  %33 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shiftc, i64 0, i64 %11
  %34 = load i32, ptr %33, align 4, !tbaa !11
  %35 = lshr i32 %32, %34
  %36 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.mins, i64 0, i64 %11
  %37 = load i32, ptr %36, align 4, !tbaa !11
  %38 = icmp ult i32 %35, %37
  %39 = select i1 %38, i32 64, i32 0
  %40 = and i32 %35, 2147481600
  %41 = icmp eq i32 %40, 55296
  %42 = select i1 %41, i32 128, i32 0
  %43 = icmp samesign ugt i32 %35, 1114111
  %44 = select i1 %43, i32 256, i32 0
  %45 = lshr i8 %17, 2
  %46 = and i8 %45, 48
  %47 = lshr i8 %23, 4
  %48 = and i8 %47, 12
  %49 = lshr i8 %29, 6
  %50 = or disjoint i8 %48, %46
  %51 = or disjoint i8 %50, %49
  %52 = zext nneg i8 %51 to i32
  %53 = or disjoint i32 %39, %52
  %54 = or disjoint i32 %53, %44
  %55 = or disjoint i32 %54, %42
  %56 = xor i32 %55, 42
  %57 = getelementptr inbounds [5 x i32], ptr @__const._ZN3fmt3v116detail11utf8_decodeEPKcPjPi.shifte, i64 0, i64 %11
  %58 = load i32, ptr %57, align 4, !tbaa !11
  %59 = lshr i32 %56, %58
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %3
  %62 = getelementptr inbounds i8, ptr %1, i64 %11
  %63 = lshr i32 -2130771968, %7
  %64 = and i32 %63, 1
  %65 = zext nneg i32 %64 to i64
  %66 = getelementptr inbounds nuw i8, ptr %62, i64 %65
  %67 = ptrtoint ptr %66 to i64
  %68 = ptrtoint ptr %1 to i64
  %69 = sub i64 %67, %68
  %70 = icmp sgt i64 %69, -1
  br i1 %70, label %72, label %71

71:                                               ; preds = %61
  tail call void @_ZN3fmt3v116detail11assert_failEPKciS3_(ptr noundef nonnull @.str.18, i32 noundef 437, ptr noundef nonnull @.str.19) #31
  unreachable

72:                                               ; preds = %61, %3
  %73 = phi ptr [ %66, %61 ], [ %16, %3 ]
  %74 = phi i32 [ %35, %61 ], [ -1, %3 ]
  %75 = phi i64 [ %69, %61 ], [ 1, %3 ]
  store ptr %2, ptr %4, align 8, !tbaa !38
  %76 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store i64 %75, ptr %76, align 8, !tbaa !39
  %77 = call noundef zeroext i1 @_ZZN3fmt3v116detail13utf8_to_utf16C1ENS0_17basic_string_viewIcEEENKUljS4_E_clEjS4_(ptr noundef nonnull align 8 dereferenceable(8) %0, i32 noundef %74, ptr noundef nonnull %4)
  %78 = select i1 %77, ptr %73, ptr null
  ret ptr %78
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZZN3fmt3v116detail13utf8_to_utf16C1ENS0_17basic_string_viewIcEEENKUljS4_E_clEjS4_(ptr noundef nonnull align 8 dereferenceable(8) %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_seh0 {
  %4 = load ptr, ptr %0, align 8, !tbaa !638
  %5 = icmp eq i32 %1, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = tail call ptr @__cxa_allocate_exception(i64 16) #30
  invoke void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16) %7, ptr noundef nonnull @.str.58)
          to label %8 unwind label %9

8:                                                ; preds = %6
  tail call void @__cxa_throw(ptr nonnull %7, ptr nonnull @_ZTISt13runtime_error, ptr nonnull @_ZNSt13runtime_errorD1Ev) #31
  unreachable

9:                                                ; preds = %6
  %10 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %7) #30
  resume { ptr, i32 } %10

11:                                               ; preds = %3
  %12 = icmp ult i32 %1, 65536
  br i1 %12, label %13, label %31

13:                                               ; preds = %11
  %14 = trunc nuw i32 %1 to i16
  %15 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %16 = load i64, ptr %15, align 8, !tbaa !43
  %17 = add i64 %16, 1
  %18 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %19 = load i64, ptr %18, align 8, !tbaa !627
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %13
  %22 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %23 = load ptr, ptr %22, align 8, !tbaa !626
  tail call void %23(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %17)
  %24 = load i64, ptr %15, align 8, !tbaa !43
  %25 = add i64 %24, 1
  br label %26

26:                                               ; preds = %13, %21
  %27 = phi i64 [ %17, %13 ], [ %25, %21 ]
  %28 = phi i64 [ %16, %13 ], [ %24, %21 ]
  %29 = load ptr, ptr %4, align 8, !tbaa !40
  store i64 %27, ptr %15, align 8, !tbaa !43
  %30 = getelementptr inbounds nuw i16, ptr %29, i64 %28
  store i16 %14, ptr %30, align 2, !tbaa !636
  br label %70

31:                                               ; preds = %11
  %32 = add i32 %1, 67043328
  %33 = lshr i32 %32, 10
  %34 = trunc i32 %33 to i16
  %35 = add i16 %34, -10240
  %36 = getelementptr inbounds nuw i8, ptr %4, i64 8
  %37 = load i64, ptr %36, align 8, !tbaa !43
  %38 = add i64 %37, 1
  %39 = getelementptr inbounds nuw i8, ptr %4, i64 16
  %40 = load i64, ptr %39, align 8, !tbaa !627
  %41 = icmp ugt i64 %38, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %31
  %43 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %44 = load ptr, ptr %43, align 8, !tbaa !626
  tail call void %44(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %38)
  %45 = load i64, ptr %36, align 8, !tbaa !43
  %46 = add i64 %45, 1
  %47 = load i64, ptr %39, align 8, !tbaa !627
  br label %48

48:                                               ; preds = %31, %42
  %49 = phi i64 [ %40, %31 ], [ %47, %42 ]
  %50 = phi i64 [ %38, %31 ], [ %46, %42 ]
  %51 = phi i64 [ %37, %31 ], [ %45, %42 ]
  %52 = load ptr, ptr %4, align 8, !tbaa !40
  store i64 %50, ptr %36, align 8, !tbaa !43
  %53 = getelementptr inbounds nuw i16, ptr %52, i64 %51
  store i16 %35, ptr %53, align 2, !tbaa !636
  %54 = trunc i32 %1 to i16
  %55 = and i16 %54, 1023
  %56 = or disjoint i16 %55, -9216
  %57 = add i64 %50, 1
  %58 = icmp ugt i64 %57, %49
  br i1 %58, label %59, label %65

59:                                               ; preds = %48
  %60 = getelementptr inbounds nuw i8, ptr %4, i64 24
  %61 = load ptr, ptr %60, align 8, !tbaa !626
  tail call void %61(ptr noundef nonnull align 8 dereferenceable(32) %4, i64 noundef %57)
  %62 = load i64, ptr %36, align 8, !tbaa !43
  %63 = add i64 %62, 1
  %64 = load ptr, ptr %4, align 8, !tbaa !40
  br label %65

65:                                               ; preds = %48, %59
  %66 = phi ptr [ %52, %48 ], [ %64, %59 ]
  %67 = phi i64 [ %57, %48 ], [ %63, %59 ]
  %68 = phi i64 [ %50, %48 ], [ %62, %59 ]
  store i64 %67, ptr %36, align 8, !tbaa !43
  %69 = getelementptr inbounds nuw i16, ptr %66, i64 %68
  store i16 %56, ptr %69, align 2, !tbaa !636
  br label %70

70:                                               ; preds = %65, %26
  ret i1 true
}

declare dso_local void @_ZNSt13runtime_errorC1EPKc(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt13runtime_errorD1Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #8

; Function Attrs: nofree nounwind
declare dso_local noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v1112system_errorIJEEENSt3__112system_errorEiNS0_7fstringIJDpT_EE1tEDpOS5_(ptr dead_on_unwind noalias writable sret(%"class.std::__1::system_error") align 8 %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_seh0 {
  %4 = alloca %"class.std::__1::error_code", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.fmt::v11::basic_string_view", align 8
  %7 = alloca %"class.fmt::v11::basic_format_args", align 8
  %8 = alloca %"struct.fmt::v11::detail::format_arg_store", align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #30
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7)
  %9 = tail call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__116generic_categoryEv() #36
  store i32 %1, ptr %4, align 8, !tbaa !11, !noalias !640
  %10 = getelementptr inbounds nuw i8, ptr %4, i64 8
  store ptr %9, ptr %10, align 8, !tbaa !643, !noalias !640
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #30, !noalias !640
  store i64 0, ptr %7, align 8, !tbaa !20, !noalias !640
  %11 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store ptr %8, ptr %11, align 8, !tbaa !10, !noalias !640
  call void @_ZN3fmt3v117vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr dead_on_unwind nonnull writable sret(%"class.std::__1::basic_string") align 8 %5, ptr noundef nonnull %6, ptr noundef nonnull %7), !noalias !640
  invoke void @_ZNSt3__112system_errorC1ENS_10error_codeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %5)
          to label %12 unwind label %19

12:                                               ; preds = %3
  %13 = load i8, ptr %5, align 8, !noalias !640
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %18 = load ptr, ptr %17, align 8, !tbaa !10, !noalias !640
  call void @_ZdlPv(ptr noundef %18) #34
  br label %28

19:                                               ; preds = %3
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = load i8, ptr %5, align 8, !noalias !640
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds nuw i8, ptr %5, i64 16
  %26 = load ptr, ptr %25, align 8, !tbaa !10, !noalias !640
  call void @_ZdlPv(ptr noundef %26) #34
  br label %27

27:                                               ; preds = %24, %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #30, !noalias !640
  resume { ptr, i32 } %20

28:                                               ; preds = %12, %16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #30, !noalias !640
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #30
  ret void
}

declare dllimport ptr @_errno() local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt3__112system_errorD1Ev(ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #8

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNSt3__116generic_categoryEv() local_unnamed_addr #27

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN3fmt3v117vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE(ptr dead_on_unwind noalias writable sret(%"class.std::__1::basic_string") align 8 %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #5 comdat personality ptr @__gxx_personality_seh0 {
  %4 = alloca %"class.fmt::v11::basic_format_arg", align 16
  %5 = alloca %"struct.fmt::v11::detail::default_arg_formatter", align 8
  %6 = alloca %"class.fmt::v11::basic_string_view", align 8
  %7 = alloca %"struct.fmt::v11::detail::format_handler", align 8
  %8 = alloca %"class.fmt::v11::basic_memory_buffer", align 8
  call void @llvm.lifetime.start.p0(i64 536, ptr nonnull %8) #30
  %9 = getelementptr inbounds nuw i8, ptr %8, i64 16
  %10 = getelementptr inbounds nuw i8, ptr %8, i64 24
  %11 = getelementptr inbounds nuw i8, ptr %8, i64 8
  store i64 0, ptr %11, align 8
  store ptr @_ZN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEE4growERNS2_6bufferIcEEy, ptr %10, align 8, !tbaa !13
  %12 = getelementptr inbounds nuw i8, ptr %8, i64 32
  store ptr %12, ptr %8, align 8, !tbaa !17
  store i64 500, ptr %9, align 8, !tbaa !18
  %13 = load ptr, ptr %1, align 8, !tbaa !19
  %14 = getelementptr inbounds nuw i8, ptr %1, i64 8
  %15 = load i64, ptr %14, align 8, !tbaa !20
  %16 = load i64, ptr %2, align 8, !tbaa !20
  %17 = getelementptr inbounds nuw i8, ptr %2, i64 8
  %18 = load ptr, ptr %17, align 8, !tbaa !10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6)
  %19 = icmp eq i64 %15, 2
  br i1 %19, label %20, label %37

20:                                               ; preds = %3
  %21 = call i32 @memcmp(ptr noundef nonnull dereferenceable(2) %13, ptr noundef nonnull dereferenceable(2) @.str.16, i64 noundef 2)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %20
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #30
  %24 = getelementptr inbounds nuw i8, ptr %4, i64 16
  store i32 0, ptr %24, align 16, !tbaa !21, !alias.scope !645
  %25 = icmp sgt i64 %16, -1
  %26 = trunc i64 %16 to i32
  br i1 %25, label %30, label %27

27:                                               ; preds = %23
  %28 = icmp sgt i32 %26, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %27
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 16 dereferenceable(20) %18, i64 20, i1 false), !tbaa.struct !28
  br label %34

30:                                               ; preds = %23
  %31 = and i32 %26, 15
  store i32 %31, ptr %24, align 16, !tbaa !21, !alias.scope !645
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %4, ptr noundef nonnull align 16 dereferenceable(16) %18, i64 16, i1 false), !tbaa.struct !30
  br label %34

34:                                               ; preds = %33, %30, %29, %27
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #30
  %35 = ptrtoint ptr %8 to i64
  store i64 %35, ptr %5, align 8, !tbaa !31
  invoke void @_ZNK3fmt3v1116basic_format_argINS0_7contextEE5visitINS0_6detail21default_arg_formatterIcEEEEDTclfp_Li0EEEOT_(ptr noundef nonnull align 16 dereferenceable(20) %4, ptr noundef nonnull align 8 dereferenceable(8) %5)
          to label %36 unwind label %75

36:                                               ; preds = %34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #30
  br label %46

37:                                               ; preds = %20, %3
  store ptr %13, ptr %6, align 8, !tbaa !19
  %38 = getelementptr inbounds nuw i8, ptr %6, i64 8
  store i64 %15, ptr %38, align 8, !tbaa !20
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %7) #30
  store ptr %13, ptr %7, align 8
  %39 = getelementptr inbounds nuw i8, ptr %7, i64 8
  store i64 %15, ptr %39, align 8
  %40 = getelementptr inbounds nuw i8, ptr %7, i64 16
  store i32 0, ptr %40, align 8, !tbaa !33
  %41 = getelementptr inbounds nuw i8, ptr %7, i64 24
  %42 = getelementptr inbounds nuw i8, ptr %7, i64 32
  store i64 %16, ptr %42, align 8
  %43 = getelementptr inbounds nuw i8, ptr %7, i64 40
  store ptr %18, ptr %43, align 8
  store ptr %8, ptr %41, align 8, !tbaa !31
  %44 = getelementptr inbounds nuw i8, ptr %7, i64 48
  store ptr null, ptr %44, align 8, !tbaa !36
  invoke void @_ZN3fmt3v116detail19parse_format_stringIcNS1_14format_handlerIcEEEEvNS0_17basic_string_viewIT_EEOT0_(ptr noundef nonnull %6, ptr noundef nonnull align 8 dereferenceable(56) %7)
          to label %45 unwind label %75

45:                                               ; preds = %37
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %7) #30
  br label %46

46:                                               ; preds = %45, %36
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6)
  call void @llvm.experimental.noalias.scope.decl(metadata !648)
  %47 = load i64, ptr %11, align 8, !tbaa !37, !noalias !648
  %48 = icmp ult i64 %47, -9
  call void @llvm.assume(i1 %48)
  %49 = load ptr, ptr %8, align 8, !tbaa !17, !noalias !648
  %50 = icmp ult i64 %47, 23
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  %52 = or i64 %47, 7
  %53 = icmp eq i64 %52, 23
  %54 = add nuw i64 %52, 1
  %55 = select i1 %53, i64 26, i64 %54
  %56 = invoke noalias noundef nonnull ptr @_Znwy(i64 noundef %55) #35
          to label %57 unwind label %75

57:                                               ; preds = %51
  %58 = getelementptr inbounds nuw i8, ptr %0, i64 16
  store ptr %56, ptr %58, align 8, !tbaa !10, !alias.scope !648
  %59 = or disjoint i64 %55, 1
  store i64 %59, ptr %0, align 8, !alias.scope !648
  %60 = getelementptr inbounds nuw i8, ptr %0, i64 8
  store i64 %47, ptr %60, align 8, !tbaa !10, !alias.scope !648
  br label %66

61:                                               ; preds = %46
  %62 = trunc nuw i64 %47 to i8
  %63 = shl nuw nsw i8 %62, 1
  store i8 %63, ptr %0, align 8, !alias.scope !648
  %64 = getelementptr inbounds nuw i8, ptr %0, i64 1
  %65 = icmp eq i64 %47, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %61, %57
  %67 = phi ptr [ %56, %57 ], [ %64, %61 ]
  call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %67, ptr align 1 %49, i64 %47, i1 false)
  br label %68

68:                                               ; preds = %66, %61
  %69 = phi ptr [ %64, %61 ], [ %67, %66 ]
  %70 = getelementptr inbounds nuw i8, ptr %69, i64 %47
  store i8 0, ptr %70, align 1, !tbaa !10
  %71 = load ptr, ptr %8, align 8, !tbaa !17
  %72 = icmp eq ptr %71, %12
  br i1 %72, label %74, label %73

73:                                               ; preds = %68
  call void @free(ptr noundef %71)
  br label %74

74:                                               ; preds = %68, %73
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  ret void

75:                                               ; preds = %51, %37, %34
  %76 = landingpad { ptr, i32 }
          cleanup
  %77 = load ptr, ptr %8, align 8, !tbaa !17
  %78 = icmp eq ptr %77, %12
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  call void @free(ptr noundef %77)
  br label %80

80:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0(i64 536, ptr nonnull %8) #30
  resume { ptr, i32 } %76
}

declare dso_local void @_ZNSt3__112system_errorC1ENS_10error_codeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef, ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.usub.sat.i64(i64, i64) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare x86_fp80 @llvm.fabs.f80(x86_fp80) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.abs.i64(i64, i1 immarg) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i128 @llvm.abs.i128(i128, i1 immarg) #28

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.usub.sat.i32(i32, i32) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.fshl.i64(i64, i64, i64) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i128 @llvm.ctlz.i128(i128, i1 immarg) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #28

attributes #0 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inlinehint mustprogress noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { cold noreturn }
attributes #10 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { cold nofree noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write) }
attributes #13 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { inlinehint mustprogress uwtable "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #17 = { mustprogress noinline uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { inlinehint mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { noinline noreturn nounwind uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { cold nofree noreturn }
attributes #21 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #22 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress uwtable "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #29 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #30 = { nounwind }
attributes #31 = { noreturn }
attributes #32 = { allocsize(0) }
attributes #33 = { noreturn nounwind }
attributes #34 = { builtin nounwind }
attributes #35 = { builtin allocsize(0) }
attributes #36 = { nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{i32 1, !"MaxTLSAlign", i32 65536}
!4 = !{!"clang version 20.1.0 (https://github.com/llvm/llvm-project.git 24a30daaa559829ad079f2ff7f73eb4e18095f88)"}
!5 = !{!6, !7, i64 0}
!6 = !{!"_ZTSN3fmt3v1117basic_format_argsINS0_7contextEEE", !7, i64 0, !8, i64 8}
!7 = !{!"long long", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!8, !8, i64 0}
!11 = !{!12, !12, i64 0}
!12 = !{!"int", !8, i64 0}
!13 = !{!14, !16, i64 24}
!14 = !{!"_ZTSN3fmt3v116detail6bufferIcEE", !15, i64 0, !7, i64 8, !7, i64 16, !16, i64 24}
!15 = !{!"p1 omnipotent char", !16, i64 0}
!16 = !{!"any pointer", !8, i64 0}
!17 = !{!14, !15, i64 0}
!18 = !{!14, !7, i64 16}
!19 = !{!15, !15, i64 0}
!20 = !{!7, !7, i64 0}
!21 = !{!22, !24, i64 16}
!22 = !{!"_ZTSN3fmt3v1116basic_format_argINS0_7contextEEE", !23, i64 0, !24, i64 16}
!23 = !{!"_ZTSN3fmt3v116detail5valueINS0_7contextEEE", !8, i64 0}
!24 = !{!"_ZTSN3fmt3v116detail4typeE", !8, i64 0}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!27 = distinct !{!27, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!28 = !{i64 0, i64 16, !10, i64 16, i64 4, !29}
!29 = !{!24, !24, i64 0}
!30 = !{i64 0, i64 16, !10}
!31 = !{!32, !32, i64 0}
!32 = !{!"p1 _ZTSN3fmt3v116detail6bufferIcEE", !16, i64 0}
!33 = !{!34, !12, i64 16}
!34 = !{!"_ZTSN3fmt3v1113parse_contextIcEE", !35, i64 0, !12, i64 16}
!35 = !{!"_ZTSN3fmt3v1117basic_string_viewIcEE", !15, i64 0, !7, i64 8}
!36 = !{!16, !16, i64 0}
!37 = !{!14, !7, i64 8}
!38 = !{!35, !15, i64 0}
!39 = !{!35, !7, i64 8}
!40 = !{!41, !42, i64 0}
!41 = !{!"_ZTSN3fmt3v116detail6bufferIwEE", !42, i64 0, !7, i64 8, !7, i64 16, !16, i64 24}
!42 = !{!"p1 wchar_t", !16, i64 0}
!43 = !{!41, !7, i64 8}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN3fmt3v116detail22compile_string_to_viewIcLy21EEENS0_17basic_string_viewIT_EERAT0__KS4_: argument 0"}
!46 = distinct !{!46, !"_ZN3fmt3v116detail22compile_string_to_viewIcLy21EEENS0_17basic_string_viewIT_EERAT0__KS4_"}
!47 = distinct !{!47, !48, !"_ZZZN3fmt3v116detail10fwrite_allEPKvyP6_iobufENKUlvE_clEvENK18FMT_COMPILE_STRINGcvNS0_17basic_string_viewIcEEEv: argument 0"}
!48 = distinct !{!48, !"_ZZZN3fmt3v116detail10fwrite_allEPKvyP6_iobufENKUlvE_clEvENK18FMT_COMPILE_STRINGcvNS0_17basic_string_viewIcEEEv"}
!49 = !{!50, !50, i64 0}
!50 = !{!"__int128", !8, i64 0}
!51 = !{i8 0, i8 2}
!52 = !{}
!53 = !{!54, !12, i64 0}
!54 = !{!"_ZTSN3fmt3v1111basic_specsE", !12, i64 0, !8, i64 4}
!55 = !{!56, !12, i64 12}
!56 = !{!"_ZTSN3fmt3v1112format_specsE", !54, i64 0, !12, i64 8, !12, i64 12}
!57 = !{!58, !58, i64 0}
!58 = !{!"long double", !8, i64 0}
!59 = !{!60, !15, i64 0}
!60 = !{!"_ZTSN3fmt3v116detail12string_valueIcEE", !15, i64 0, !7, i64 8}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK3fmt3v116detail12string_valueIcE3strEv: argument 0"}
!63 = distinct !{!63, !"_ZNK3fmt3v116detail12string_valueIcE3strEv"}
!64 = !{!60, !7, i64 8}
!65 = distinct !{!65, !66}
!66 = !{!"llvm.loop.mustprogress"}
!67 = !{!68, !7, i64 0}
!68 = !{!"_ZTSZN3fmt3v116detail9write_ptrIcNS0_14basic_appenderIcEEyEET0_S5_T1_PKNS0_12format_specsEEUlS4_E_", !7, i64 0, !12, i64 8}
!69 = !{!68, !12, i64 8}
!70 = distinct !{!70, !66}
!71 = distinct !{!71, !72}
!72 = !{!"llvm.loop.unroll.disable"}
!73 = distinct !{!73, !66, !74, !75}
!74 = !{!"llvm.loop.isvectorized", i32 1}
!75 = !{!"llvm.loop.unroll.runtime.disable"}
!76 = distinct !{!76, !66, !74, !75}
!77 = distinct !{!77, !66}
!78 = distinct !{!78, !66, !74}
!79 = distinct !{!79, !66}
!80 = distinct !{!80, !66}
!81 = distinct !{!81, !66}
!82 = !{!83, !83, i64 0}
!83 = !{!"vtable pointer", !9, i64 0}
!84 = !{!85, !86, i64 8}
!85 = !{!"_ZTSNSt3__114__shared_countE", !86, i64 8}
!86 = !{!"long", !8, i64 0}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNKSt3__18numpunctIcE8groupingB8ne200100Ev: argument 0"}
!89 = distinct !{!89, !"_ZNKSt3__18numpunctIcE8groupingB8ne200100Ev"}
!90 = !{i64 0, i64 24, !10}
!91 = !{!92, !92, i64 0}
!92 = !{!"p1 _ZTSN3fmt3v1112format_specsE", !16, i64 0}
!93 = !{!94, !92, i64 8}
!94 = !{!"_ZTSN3fmt3v116detail10loc_writerIcEE", !95, i64 0, !92, i64 8, !96, i64 16, !96, i64 40, !96, i64 64}
!95 = !{!"_ZTSN3fmt3v1114basic_appenderIcEE", !32, i64 0}
!96 = !{!"_ZTSNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE", !8, i64 0}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN3fmt3v116detail18make_write_int_argIxEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!99 = distinct !{!99, !"_ZN3fmt3v116detail18make_write_int_argIxEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN3fmt3v116detail18make_write_int_argIyEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!102 = distinct !{!102, !"_ZN3fmt3v116detail18make_write_int_argIyEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN3fmt3v116detail18make_write_int_argInEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!105 = distinct !{!105, !"_ZN3fmt3v116detail18make_write_int_argInEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN3fmt3v116detail18make_write_int_argIoEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!108 = distinct !{!108, !"_ZN3fmt3v116detail18make_write_int_argIoEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!109 = distinct !{!109, !66}
!110 = distinct !{!110, !66}
!111 = distinct !{!111, !66}
!112 = !{!113, !114, i64 0}
!113 = !{!"_ZTSZN3fmt3v116detail10write_charIcNS0_14basic_appenderIcEEEET0_S5_T_RKNS0_12format_specsEEUlS4_E_", !114, i64 0, !8, i64 1}
!114 = !{!"bool", !8, i64 0}
!115 = !{!113, !8, i64 1}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!118 = distinct !{!118, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!119 = !{!120, !120, i64 0}
!120 = !{!"p1 int", !16, i64 0}
!121 = !{!122, !122, i64 0}
!122 = !{!"p1 _ZTSN3fmt3v116detail14digit_groupingIcEE", !16, i64 0}
!123 = !{!124, !124, i64 0}
!124 = !{!"p1 _ZTSN3fmt3v1119basic_memory_bufferIcLy500ENS0_6detail9allocatorIcEEEE", !16, i64 0}
!125 = !{!56, !12, i64 8}
!126 = !{!127, !120, i64 0}
!127 = !{!"_ZTSZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEycEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS4_E_", !120, i64 0, !122, i64 8, !124, i64 16}
!128 = distinct !{!128, !66}
!129 = !{!127, !122, i64 8}
!130 = !{!127, !124, i64 16}
!131 = distinct !{!131, !66}
!132 = distinct !{!132, !72}
!133 = distinct !{!133, !66, !74, !75}
!134 = distinct !{!134, !66, !74, !75}
!135 = distinct !{!135, !66, !74}
!136 = distinct !{!136, !66}
!137 = !{!138, !15, i64 0}
!138 = !{!"_ZTSN3fmt3v116detail18find_escape_resultIcEE", !15, i64 0, !15, i64 8, !12, i64 16}
!139 = !{!138, !15, i64 8}
!140 = !{!138, !12, i64 16}
!141 = distinct !{!141, !66}
!142 = distinct !{!142, !66}
!143 = distinct !{!143, !66}
!144 = distinct !{!144, !66}
!145 = !{!146, !16, i64 24}
!146 = !{!"_ZTSN3fmt3v116detail6bufferIiEE", !120, i64 0, !7, i64 8, !7, i64 16, !16, i64 24}
!147 = !{!146, !120, i64 0}
!148 = !{!146, !7, i64 16}
!149 = !{!146, !7, i64 8}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!152 = distinct !{!152, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!153 = distinct !{!153, !72}
!154 = distinct !{!154, !66, !74, !75}
!155 = distinct !{!155, !66, !74, !75}
!156 = distinct !{!156, !66, !74}
!157 = distinct !{!157, !66}
!158 = distinct !{!158, !66}
!159 = distinct !{!159, !66}
!160 = distinct !{!160, !66}
!161 = distinct !{!161, !66}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!164 = distinct !{!164, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!165 = !{!166, !120, i64 0}
!166 = !{!"_ZTSZN3fmt3v116detail9write_intINS0_14basic_appenderIcEEocEET_S5_T0_jRKNS0_12format_specsERKNS1_14digit_groupingIT1_EEEUlS4_E_", !120, i64 0, !122, i64 8, !124, i64 16}
!167 = distinct !{!167, !66}
!168 = !{!166, !122, i64 8}
!169 = !{!166, !124, i64 16}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZNSt3__119__allocate_at_leastB8ne200100INS_9allocatorIcEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS5_y: argument 0"}
!172 = distinct !{!172, !"_ZNSt3__119__allocate_at_leastB8ne200100INS_9allocatorIcEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS5_y"}
!173 = distinct !{!173, !72}
!174 = distinct !{!174, !66, !74, !75}
!175 = distinct !{!175, !66, !74, !75}
!176 = distinct !{!176, !66, !74}
!177 = distinct !{!177, !66}
!178 = !{!179, !12, i64 0}
!179 = !{!"_ZTSZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEjEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS4_E_", !12, i64 0, !12, i64 4, !15, i64 8, !15, i64 16}
!180 = !{!179, !12, i64 4}
!181 = !{!179, !15, i64 8}
!182 = !{!179, !15, i64 16}
!183 = distinct !{!183, !66}
!184 = distinct !{!184, !72}
!185 = distinct !{!185, !66, !74, !75}
!186 = distinct !{!186, !66, !74, !75}
!187 = distinct !{!187, !66, !74}
!188 = distinct !{!188, !66}
!189 = distinct !{!189, !72}
!190 = distinct !{!190, !66, !74, !75}
!191 = distinct !{!191, !66, !74, !75}
!192 = distinct !{!192, !66, !74}
!193 = !{!194, !195, i64 0}
!194 = !{!"_ZTSZN3fmt3v116detail15write_nonfiniteIcNS0_14basic_appenderIcEEEET0_S5_bNS0_12format_specsENS0_4signEEUlS4_E_", !195, i64 0, !15, i64 8}
!195 = !{!"_ZTSN3fmt3v114signE", !8, i64 0}
!196 = !{!194, !15, i64 8}
!197 = distinct !{!197, !72}
!198 = distinct !{!198, !66, !74, !75}
!199 = distinct !{!199, !66, !74, !75}
!200 = distinct !{!200, !66, !74}
!201 = !{!195, !195, i64 0}
!202 = !{!203, !12, i64 0}
!203 = !{!"_ZTSN3fmt3v116detail9dragonbox10decimal_fpIfEE", !12, i64 0, !12, i64 4}
!204 = !{!203, !12, i64 4}
!205 = !{!206, !195, i64 0}
!206 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E_", !195, i64 0, !12, i64 4, !12, i64 8, !8, i64 12, !12, i64 16, !8, i64 20, !8, i64 21, !12, i64 24}
!207 = !{!206, !12, i64 4}
!208 = !{!206, !12, i64 8}
!209 = !{!206, !8, i64 12}
!210 = !{!206, !12, i64 16}
!211 = !{!206, !8, i64 20}
!212 = !{!206, !8, i64 21}
!213 = !{!206, !12, i64 24}
!214 = !{!215}
!215 = distinct !{!215, !216, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!216 = distinct !{!216, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!217 = !{!218, !218, i64 0}
!218 = !{!"p1 _ZTSN3fmt3v116detail9dragonbox10decimal_fpIfEE", !16, i64 0}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!221 = distinct !{!221, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!222 = !{!114, !114, i64 0}
!223 = !{!224, !224, i64 0}
!224 = !{!"p1 bool", !16, i64 0}
!225 = distinct !{!225, !66}
!226 = !{!227}
!227 = distinct !{!227, !228, !"_ZN3fmt3v116detail13thousands_sepIcEENS1_20thousands_sep_resultIT_EENS1_10locale_refE: argument 0"}
!228 = distinct !{!228, !"_ZN3fmt3v116detail13thousands_sepIcEENS1_20thousands_sep_resultIT_EENS1_10locale_refE"}
!229 = !{!230, !8, i64 24}
!230 = !{!"_ZTSN3fmt3v116detail20thousands_sep_resultIcEE", !96, i64 0, !8, i64 24}
!231 = distinct !{!231, !66}
!232 = !{!233}
!233 = distinct !{!233, !234, !"_ZNKSt3__18numpunctIcE8groupingB8ne200100Ev: argument 0"}
!234 = distinct !{!234, !"_ZNKSt3__18numpunctIcE8groupingB8ne200100Ev"}
!235 = !{!236, !16, i64 0}
!236 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E0_", !16, i64 0, !120, i64 8, !120, i64 16, !218, i64 24, !122, i64 32, !92, i64 40, !15, i64 48, !120, i64 56, !15, i64 64}
!237 = !{!236, !120, i64 8}
!238 = !{!236, !120, i64 16}
!239 = !{!236, !218, i64 24}
!240 = !{!236, !122, i64 32}
!241 = !{!236, !92, i64 40}
!242 = !{!236, !15, i64 48}
!243 = !{!236, !120, i64 56}
!244 = !{!236, !15, i64 64}
!245 = !{!246, !16, i64 0}
!246 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E1_", !16, i64 0, !120, i64 8, !120, i64 16, !120, i64 24, !15, i64 32, !122, i64 40, !120, i64 48, !15, i64 56}
!247 = !{!246, !120, i64 8}
!248 = !{!246, !120, i64 16}
!249 = !{!246, !120, i64 24}
!250 = !{!246, !15, i64 32}
!251 = !{!246, !122, i64 40}
!252 = !{!246, !120, i64 48}
!253 = !{!246, !15, i64 56}
!254 = !{!255, !16, i64 0}
!255 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIfEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E2_", !16, i64 0, !224, i64 8, !15, i64 16, !120, i64 24, !15, i64 32, !120, i64 40, !120, i64 48}
!256 = !{!255, !224, i64 8}
!257 = !{!255, !15, i64 16}
!258 = !{!255, !120, i64 24}
!259 = !{!255, !15, i64 32}
!260 = !{!255, !120, i64 40}
!261 = !{!255, !120, i64 48}
!262 = !{!263, !7, i64 0}
!263 = !{!"_ZTSN3fmt3v116detail9dragonbox10decimal_fpIdEE", !7, i64 0, !12, i64 8}
!264 = !{!263, !12, i64 8}
!265 = !{!266, !7, i64 8}
!266 = !{!"_ZTSN3fmt3v116detail16uint128_fallbackE", !7, i64 0, !7, i64 8}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZN3fmt3v116detail9dragonbox14cache_accessorIdE11compute_mulEyRKNS1_16uint128_fallbackE: argument 0"}
!269 = distinct !{!269, !"_ZN3fmt3v116detail9dragonbox14cache_accessorIdE11compute_mulEyRKNS1_16uint128_fallbackE"}
!270 = !{!271, !195, i64 0}
!271 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E_", !195, i64 0, !7, i64 8, !12, i64 16, !8, i64 20, !12, i64 24, !8, i64 28, !8, i64 29, !12, i64 32}
!272 = !{!271, !7, i64 8}
!273 = !{!271, !12, i64 16}
!274 = !{!271, !8, i64 20}
!275 = !{!271, !12, i64 24}
!276 = !{!271, !8, i64 28}
!277 = !{!271, !8, i64 29}
!278 = !{!271, !12, i64 32}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!281 = distinct !{!281, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!282 = !{!283, !283, i64 0}
!283 = !{!"p1 long long", !16, i64 0}
!284 = !{!285, !285, i64 0}
!285 = !{!"p1 _ZTSN3fmt3v116detail9dragonbox10decimal_fpIdEE", !16, i64 0}
!286 = !{!287}
!287 = distinct !{!287, !288, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!288 = distinct !{!288, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!289 = distinct !{!289, !66}
!290 = !{!291, !16, i64 0}
!291 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E0_", !16, i64 0, !283, i64 8, !120, i64 16, !285, i64 24, !122, i64 32, !92, i64 40, !15, i64 48, !120, i64 56, !15, i64 64}
!292 = !{!291, !283, i64 8}
!293 = !{!291, !120, i64 16}
!294 = !{!291, !285, i64 24}
!295 = !{!291, !122, i64 32}
!296 = !{!291, !92, i64 40}
!297 = !{!291, !15, i64 48}
!298 = !{!291, !120, i64 56}
!299 = !{!291, !15, i64 64}
!300 = !{!301, !16, i64 0}
!301 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E1_", !16, i64 0, !283, i64 8, !120, i64 16, !120, i64 24, !15, i64 32, !122, i64 40, !120, i64 48, !15, i64 56}
!302 = !{!301, !283, i64 8}
!303 = !{!301, !120, i64 16}
!304 = !{!301, !120, i64 24}
!305 = !{!301, !15, i64 32}
!306 = !{!301, !122, i64 40}
!307 = !{!301, !120, i64 48}
!308 = !{!301, !15, i64 56}
!309 = !{!310, !16, i64 0}
!310 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_9dragonbox10decimal_fpIdEENS1_14digit_groupingIcEEEET0_SA_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E2_", !16, i64 0, !224, i64 8, !15, i64 16, !120, i64 24, !15, i64 32, !283, i64 40, !120, i64 48}
!311 = !{!310, !224, i64 8}
!312 = !{!310, !15, i64 16}
!313 = !{!310, !120, i64 24}
!314 = !{!310, !15, i64 32}
!315 = !{!310, !283, i64 40}
!316 = !{!310, !120, i64 48}
!317 = !{!318, !15, i64 0}
!318 = !{!"_ZTSN3fmt3v116detail14big_decimal_fpE", !15, i64 0, !12, i64 8, !12, i64 12}
!319 = !{!318, !12, i64 8}
!320 = !{!318, !12, i64 12}
!321 = distinct !{!321, !66}
!322 = distinct !{!322, !72}
!323 = distinct !{!323, !66, !74, !75}
!324 = distinct !{!324, !66, !74, !75}
!325 = distinct !{!325, !66, !74}
!326 = distinct !{!326, !66}
!327 = distinct !{!327, !66}
!328 = distinct !{!328, !72}
!329 = distinct !{!329, !66, !74, !75}
!330 = distinct !{!330, !66, !74, !75}
!331 = distinct !{!331, !66, !74}
!332 = !{!333, !16, i64 24}
!333 = !{!"_ZTSN3fmt3v116detail6bufferIjEE", !120, i64 0, !7, i64 8, !7, i64 16, !16, i64 24}
!334 = !{!333, !120, i64 0}
!335 = !{!333, !7, i64 16}
!336 = !{!337, !12, i64 168}
!337 = !{!"_ZTSN3fmt3v116detail6bigintE", !338, i64 0, !12, i64 168}
!338 = !{!"_ZTSN3fmt3v1119basic_memory_bufferIjLy32ENS0_6detail9allocatorIjEEEE", !333, i64 0, !8, i64 32, !339, i64 160}
!339 = !{!"_ZTSN3fmt3v116detail9allocatorIjEE"}
!340 = !{!341, !12, i64 16}
!341 = !{!"_ZTSN3fmt3v116detail8basic_fpIoEE", !50, i64 0, !12, i64 16}
!342 = !{!341, !50, i64 0}
!343 = distinct !{!343, !66}
!344 = !{!333, !7, i64 8}
!345 = distinct !{!345, !66, !74, !75}
!346 = distinct !{!346, !66, !75, !74}
!347 = distinct !{!347, !66, !74, !75}
!348 = distinct !{!348, !66, !75, !74}
!349 = distinct !{!349, !66, !74, !75}
!350 = distinct !{!350, !66, !74}
!351 = distinct !{!351, !66, !74, !75}
!352 = distinct !{!352, !66, !74}
!353 = distinct !{!353, !66, !74, !75}
!354 = distinct !{!354, !66, !75, !74}
!355 = distinct !{!355, !66}
!356 = distinct !{!356, !66}
!357 = distinct !{!357, !66, !74, !75}
!358 = distinct !{!358, !66, !75, !74}
!359 = distinct !{!359, !66, !74, !75}
!360 = distinct !{!360, !66, !75, !74}
!361 = distinct !{!361, !66, !74, !75}
!362 = distinct !{!362, !66, !75, !74}
!363 = distinct !{!363, !66}
!364 = distinct !{!364, !66}
!365 = distinct !{!365, !66}
!366 = distinct !{!366, !66}
!367 = distinct !{!367, !66}
!368 = distinct !{!368, !66}
!369 = distinct !{!369, !66}
!370 = distinct !{!370, !66, !74, !75}
!371 = distinct !{!371, !66, !75, !74}
!372 = distinct !{!372, !66, !74, !75}
!373 = distinct !{!373, !72}
!374 = distinct !{!374, !66, !74}
!375 = distinct !{!375, !66}
!376 = distinct !{!376, !66}
!377 = distinct !{!377, !66}
!378 = distinct !{!378, !66}
!379 = distinct !{!379, !66}
!380 = distinct !{!380, !66}
!381 = distinct !{!381, !66}
!382 = !{!383, !195, i64 0}
!383 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E_", !195, i64 0, !15, i64 8, !12, i64 16, !8, i64 20, !12, i64 24, !8, i64 28, !8, i64 29, !12, i64 32}
!384 = !{!383, !15, i64 8}
!385 = !{!383, !12, i64 16}
!386 = !{!383, !8, i64 20}
!387 = !{!383, !12, i64 24}
!388 = !{!383, !8, i64 28}
!389 = !{!383, !8, i64 29}
!390 = !{!383, !12, i64 32}
!391 = !{!392}
!392 = distinct !{!392, !393, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!393 = distinct !{!393, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!394 = !{!395, !395, i64 0}
!395 = !{!"p2 omnipotent char", !16, i64 0}
!396 = !{!397, !397, i64 0}
!397 = !{!"p1 _ZTSN3fmt3v116detail14big_decimal_fpE", !16, i64 0}
!398 = !{!399}
!399 = distinct !{!399, !400, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv: argument 0"}
!400 = distinct !{!400, !"_ZNK3fmt3v116detail14digit_groupingIcE13initial_stateEv"}
!401 = distinct !{!401, !72}
!402 = distinct !{!402, !66, !74, !75}
!403 = distinct !{!403, !66, !74, !75}
!404 = distinct !{!404, !66, !74}
!405 = !{!406, !16, i64 0}
!406 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E0_", !16, i64 0, !395, i64 8, !120, i64 16, !397, i64 24, !122, i64 32, !92, i64 40, !15, i64 48, !120, i64 56, !15, i64 64}
!407 = !{!406, !395, i64 8}
!408 = !{!406, !120, i64 16}
!409 = !{!406, !397, i64 24}
!410 = !{!406, !122, i64 32}
!411 = !{!406, !92, i64 40}
!412 = !{!406, !15, i64 48}
!413 = !{!406, !120, i64 56}
!414 = !{!406, !15, i64 64}
!415 = distinct !{!415, !72}
!416 = distinct !{!416, !66, !74, !75}
!417 = distinct !{!417, !66, !74, !75}
!418 = distinct !{!418, !66, !74}
!419 = distinct !{!419, !72}
!420 = distinct !{!420, !66, !74, !75}
!421 = distinct !{!421, !66, !74, !75}
!422 = distinct !{!422, !66, !74}
!423 = !{!424, !16, i64 0}
!424 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E1_", !16, i64 0, !395, i64 8, !120, i64 16, !120, i64 24, !15, i64 32, !122, i64 40, !120, i64 48, !15, i64 56}
!425 = !{!424, !395, i64 8}
!426 = !{!424, !120, i64 16}
!427 = !{!424, !120, i64 24}
!428 = !{!424, !15, i64 32}
!429 = !{!424, !122, i64 40}
!430 = !{!424, !120, i64 48}
!431 = !{!424, !15, i64 56}
!432 = !{!433, !16, i64 0}
!433 = !{!"_ZTSZN3fmt3v116detail14do_write_floatIcNS0_14basic_appenderIcEENS1_14big_decimal_fpENS1_14digit_groupingIcEEEET0_S8_RKT1_RKNS0_12format_specsENS0_4signEiNS1_10locale_refEEUlS4_E2_", !16, i64 0, !224, i64 8, !15, i64 16, !120, i64 24, !15, i64 32, !395, i64 40, !120, i64 48}
!434 = !{!433, !224, i64 8}
!435 = !{!433, !15, i64 16}
!436 = !{!433, !120, i64 24}
!437 = !{!433, !15, i64 32}
!438 = !{!433, !395, i64 40}
!439 = !{!433, !120, i64 48}
!440 = distinct !{!440, !72}
!441 = distinct !{!441, !66, !74, !75}
!442 = distinct !{!442, !66, !74, !75}
!443 = distinct !{!443, !66, !74}
!444 = !{!445}
!445 = distinct !{!445, !446, !"_ZNK3fmt3v117context3argEi: argument 0"}
!446 = distinct !{!446, !"_ZNK3fmt3v117context3argEi"}
!447 = !{!448}
!448 = distinct !{!448, !449, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!449 = distinct !{!449, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!450 = !{!448, !445}
!451 = !{!452, !452, i64 0}
!452 = !{!"p1 _ZTSN3fmt3v116detail14format_handlerIcEE", !16, i64 0}
!453 = !{!454, !12, i64 8}
!454 = !{!"_ZTSZN3fmt3v116detail23parse_replacement_fieldIcRNS1_14format_handlerIcEEEEPKT_S8_S8_OT0_E10id_adapter", !452, i64 0, !12, i64 8}
!455 = !{!456}
!456 = distinct !{!456, !457, !"_ZNK3fmt3v117context3argEi: argument 0"}
!457 = distinct !{!457, !"_ZNK3fmt3v117context3argEi"}
!458 = !{!459}
!459 = distinct !{!459, !460, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!460 = distinct !{!460, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!461 = !{!459, !456}
!462 = distinct !{!462, !66}
!463 = !{!454, !452, i64 0}
!464 = distinct !{!464, !66}
!465 = !{!466, !7, i64 8}
!466 = !{!"_ZTSN3fmt3v116detail15named_arg_valueIcEE", !467, i64 0, !7, i64 8}
!467 = !{!"p1 _ZTSN3fmt3v116detail14named_arg_infoIcEE", !16, i64 0}
!468 = !{!466, !467, i64 0}
!469 = !{!470, !15, i64 0}
!470 = !{!"_ZTSN3fmt3v116detail14named_arg_infoIcEE", !15, i64 0, !12, i64 8}
!471 = distinct !{!471, !66}
!472 = !{!470, !12, i64 8}
!473 = !{!474}
!474 = distinct !{!474, !475, !"_ZN3fmt3v116detail7get_argINS0_7contextEiEENS0_16basic_format_argIT_EERS5_T0_: argument 0"}
!475 = distinct !{!475, !"_ZN3fmt3v116detail7get_argINS0_7contextEiEENS0_16basic_format_argIT_EERS5_T0_"}
!476 = !{!477}
!477 = distinct !{!477, !478, !"_ZNK3fmt3v117context3argEi: argument 0"}
!478 = distinct !{!478, !"_ZNK3fmt3v117context3argEi"}
!479 = !{!480}
!480 = distinct !{!480, !481, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!481 = distinct !{!481, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!482 = !{!480, !477, !474}
!483 = !{!484, !485, i64 8}
!484 = !{!"_ZTSN3fmt3v116detail25parse_dynamic_spec_resultIcEE", !15, i64 0, !485, i64 8}
!485 = !{!"_ZTSN3fmt3v1111arg_id_kindE", !8, i64 0}
!486 = !{!484, !15, i64 0}
!487 = distinct !{!487, !66}
!488 = distinct !{!488, !66}
!489 = !{!490, !92, i64 8}
!490 = !{!"_ZTSN3fmt3v116detail13arg_formatterIcEE", !95, i64 0, !92, i64 8, !491, i64 16}
!491 = !{!"_ZTSN3fmt3v116detail10locale_refE", !16, i64 0}
!492 = !{!493}
!493 = distinct !{!493, !494, !"_ZN3fmt3v116detail18make_write_int_argIxEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!494 = distinct !{!494, !"_ZN3fmt3v116detail18make_write_int_argIxEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!495 = !{!496, !7, i64 0}
!496 = !{!"_ZTSN3fmt3v116detail13write_int_argIyEE", !7, i64 0, !12, i64 8}
!497 = !{!496, !12, i64 8}
!498 = !{!499}
!499 = distinct !{!499, !500, !"_ZN3fmt3v116detail18make_write_int_argIyEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!500 = distinct !{!500, !"_ZN3fmt3v116detail18make_write_int_argIyEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!501 = !{!502}
!502 = distinct !{!502, !503, !"_ZN3fmt3v116detail18make_write_int_argInEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!503 = distinct !{!503, !"_ZN3fmt3v116detail18make_write_int_argInEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!504 = !{!505, !50, i64 0}
!505 = !{!"_ZTSN3fmt3v116detail13write_int_argIoEE", !50, i64 0, !12, i64 16}
!506 = !{!505, !12, i64 16}
!507 = !{!508}
!508 = distinct !{!508, !509, !"_ZN3fmt3v116detail18make_write_int_argIoEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE: argument 0"}
!509 = distinct !{!509, !"_ZN3fmt3v116detail18make_write_int_argIoEENS1_13write_int_argINSt3__111conditionalIXaalecl8num_bitsIT_EELi32EntLi0EEjNS5_IXlecl8num_bitsIS6_EELi64EEyoE4typeEE4typeEEES6_NS0_4signE"}
!510 = !{!511}
!511 = distinct !{!511, !512, !"_ZNK3fmt3v116detail12string_valueIcE3strEv: argument 0"}
!512 = distinct !{!512, !"_ZNK3fmt3v116detail12string_valueIcE3strEv"}
!513 = !{!485, !485, i64 0}
!514 = !{!515, !515, i64 0}
!515 = !{!"p1 _ZTSN3fmt3v1113parse_contextIcEE", !16, i64 0}
!516 = !{!517, !517, i64 0}
!517 = !{!"p1 _ZTSN3fmt3v116detail7arg_refIcEE", !16, i64 0}
!518 = !{!519, !517, i64 8}
!519 = !{!"_ZTSN3fmt3v116detail20dynamic_spec_handlerIcEE", !515, i64 0, !517, i64 8, !16, i64 16}
!520 = !{!519, !16, i64 16}
!521 = !{!519, !515, i64 0}
!522 = distinct !{!522, !66}
!523 = !{!524}
!524 = distinct !{!524, !525, !"_ZNK3fmt3v117context3argEi: argument 0"}
!525 = distinct !{!525, !"_ZNK3fmt3v117context3argEi"}
!526 = !{!527}
!527 = distinct !{!527, !528, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!528 = distinct !{!528, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!529 = !{!527, !524}
!530 = !{!531}
!531 = distinct !{!531, !532, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getIcEENS0_16basic_format_argIS2_EENS0_17basic_string_viewIT_EE: argument 0"}
!532 = distinct !{!532, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getIcEENS0_16basic_format_argIS2_EENS0_17basic_string_viewIT_EE"}
!533 = !{!534, !531}
!534 = distinct !{!534, !535, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!535 = distinct !{!535, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!536 = !{i64 0, i64 8, !20, i64 8, i64 4, !11}
!537 = distinct !{!537, !72}
!538 = distinct !{!538, !66, !74, !75}
!539 = distinct !{!539, !66, !74, !75}
!540 = distinct !{!540, !66, !74}
!541 = distinct !{!541, !66}
!542 = !{!543, !12, i64 0}
!543 = !{!"_ZTSZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEyEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS4_E_", !12, i64 0, !12, i64 4, !15, i64 8, !15, i64 16}
!544 = !{!543, !12, i64 4}
!545 = !{!543, !15, i64 8}
!546 = !{!543, !15, i64 16}
!547 = distinct !{!547, !72}
!548 = distinct !{!548, !66, !74, !75}
!549 = distinct !{!549, !66, !74, !75}
!550 = distinct !{!550, !66, !74}
!551 = distinct !{!551, !66}
!552 = !{i64 0, i64 16, !49, i64 16, i64 4, !11}
!553 = distinct !{!553, !72}
!554 = distinct !{!554, !66, !74, !75}
!555 = distinct !{!555, !66, !74, !75}
!556 = distinct !{!556, !66, !74}
!557 = distinct !{!557, !66}
!558 = !{!559, !12, i64 0}
!559 = !{!"_ZTSZN3fmt3v116detail9write_intIcNS0_14basic_appenderIcEEoEET0_S5_NS1_13write_int_argIT1_EERKNS0_12format_specsEEUlS4_E_", !12, i64 0, !12, i64 4, !15, i64 8, !15, i64 16}
!560 = !{!559, !12, i64 4}
!561 = !{!559, !15, i64 8}
!562 = !{!559, !15, i64 16}
!563 = distinct !{!563, !72}
!564 = distinct !{!564, !66, !74, !75}
!565 = distinct !{!565, !66, !74, !75}
!566 = distinct !{!566, !66, !74}
!567 = distinct !{!567, !66}
!568 = distinct !{!568, !66}
!569 = distinct !{!569, !72}
!570 = distinct !{!570, !66, !74, !75}
!571 = distinct !{!571, !66, !74, !75}
!572 = distinct !{!572, !66, !74}
!573 = distinct !{!573, !66}
!574 = !{!575}
!575 = distinct !{!575, !576, !"_ZN3fmt3v116detail9dragonbox16umul192_upper128EyNS1_16uint128_fallbackE: argument 0"}
!576 = distinct !{!576, !"_ZN3fmt3v116detail9dragonbox16umul192_upper128EyNS1_16uint128_fallbackE"}
!577 = !{!266, !7, i64 0}
!578 = distinct !{!578, !66}
!579 = !{!580, !580, i64 0}
!580 = !{!"char32_t", !8, i64 0}
!581 = distinct !{!581, !66}
!582 = distinct !{!582, !66}
!583 = distinct !{!583, !66}
!584 = distinct !{!584, !66, !74, !75}
!585 = distinct !{!585, !66, !74, !75}
!586 = distinct !{!586, !72}
!587 = distinct !{!587, !66, !74}
!588 = distinct !{!588, !66}
!589 = !{!590, !7, i64 288}
!590 = !{!"_ZTSN3fmt3v116detail15counting_bufferIcEE", !14, i64 0, !8, i64 32, !7, i64 288}
!591 = !{i64 0, i64 8, !19, i64 8, i64 8, !20}
!592 = distinct !{!592, !66}
!593 = distinct !{!593, !66, !74, !75}
!594 = distinct !{!594, !66, !74, !75}
!595 = distinct !{!595, !72}
!596 = distinct !{!596, !66, !74}
!597 = distinct !{!597, !66}
!598 = !{!599, !114, i64 0}
!599 = !{!"_ZTSZN3fmt3v116detail5writeIcNS0_14basic_appenderIcEEEET0_S5_NS0_17basic_string_viewIT_EERKNS0_12format_specsEEUlS4_E_", !114, i64 0, !35, i64 8, !15, i64 24, !7, i64 32}
!600 = !{!599, !15, i64 24}
!601 = !{!599, !7, i64 32}
!602 = !{!603}
!603 = distinct !{!603, !604, !"_ZN3fmt3v116detail11find_escapeEPKcS3_: argument 0"}
!604 = distinct !{!604, !"_ZN3fmt3v116detail11find_escapeEPKcS3_"}
!605 = distinct !{!605, !66}
!606 = distinct !{!606, !66, !74, !75}
!607 = distinct !{!607, !66, !74, !75}
!608 = distinct !{!608, !72}
!609 = distinct !{!609, !66, !74}
!610 = distinct !{!610, !66}
!611 = distinct !{!611, !72}
!612 = distinct !{!612, !66, !74, !75}
!613 = distinct !{!613, !66, !74, !75}
!614 = distinct !{!614, !66, !74}
!615 = distinct !{!615, !66}
!616 = distinct !{!616, !72}
!617 = distinct !{!617, !66, !74, !75}
!618 = distinct !{!618, !66, !74, !75}
!619 = distinct !{!619, !66, !74}
!620 = !{!621, !283, i64 8}
!621 = !{!"_ZTSZN3fmt3v116detail16code_point_indexENS0_17basic_string_viewIcEEyEUljS3_E_", !15, i64 0, !283, i64 8, !283, i64 16}
!622 = !{!621, !15, i64 0}
!623 = !{!621, !283, i64 16}
!624 = !{!625, !283, i64 0}
!625 = !{!"_ZTSZN3fmt3v116detail13compute_widthENS0_17basic_string_viewIcEEE17count_code_points", !283, i64 0}
!626 = !{!41, !16, i64 24}
!627 = !{!41, !7, i64 16}
!628 = !{!629, !629, i64 0}
!629 = !{!"p1 _ZTSN3fmt3v116detail13utf8_to_utf16E", !16, i64 0}
!630 = distinct !{!630, !66}
!631 = distinct !{!631, !66, !74, !75}
!632 = distinct !{!632, !66, !74, !75}
!633 = distinct !{!633, !72}
!634 = distinct !{!634, !66, !74}
!635 = distinct !{!635, !66}
!636 = !{!637, !637, i64 0}
!637 = !{!"wchar_t", !8, i64 0}
!638 = !{!639, !629, i64 0}
!639 = !{!"_ZTSZN3fmt3v116detail13utf8_to_utf16C1ENS0_17basic_string_viewIcEEEUljS4_E_", !629, i64 0}
!640 = !{!641}
!641 = distinct !{!641, !642, !"_ZN3fmt3v1113vsystem_errorEiNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE: argument 0"}
!642 = distinct !{!642, !"_ZN3fmt3v1113vsystem_errorEiNS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_7contextEEE"}
!643 = !{!644, !644, i64 0}
!644 = !{!"p1 _ZTSNSt3__114error_categoryE", !16, i64 0}
!645 = !{!646}
!646 = distinct !{!646, !647, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi: argument 0"}
!647 = distinct !{!647, !"_ZNK3fmt3v1117basic_format_argsINS0_7contextEE3getEi"}
!648 = !{!649}
!649 = distinct !{!649, !650, !"_ZN3fmt3v119to_stringILy500EEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_19basic_memory_bufferIcXT_ENS0_6detail9allocatorIcEEEE: argument 0"}
!650 = distinct !{!650, !"_ZN3fmt3v119to_stringILy500EEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS0_19basic_memory_bufferIcXT_ENS0_6detail9allocatorIcEEEE"}
